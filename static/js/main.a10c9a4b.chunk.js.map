{"version":3,"sources":["hooks/useTypedSelector.ts","components/PageHeader/PageHeader.tsx","types/auth.ts","routing/index.ts","pages/About/AboutPage.tsx","api/auth.ts","store/action-creators/auth.ts","types/candidate.ts","api/candidate.ts","store/action-creators/candidate.ts","types/companyService.ts","api/service.ts","store/action-creators/companyService.ts","types/country.ts","api/country.ts","store/action-creators/country.ts","types/employee.ts","api/employee.ts","store/action-creators/employee.ts","types/favoriteVacancy.ts","api/vacancy.ts","store/action-creators/favoriteVacancy.ts","types/office.ts","api/office.ts","store/action-creators/office.ts","types/user.ts","api/user.ts","store/action-creators/user.ts","types/vacancy.ts","store/action-creators/vacancy.ts","types/common/orderType.ts","store/action-creators/index.ts","hooks/useActions.ts","components/FiltersArea/SearchTextFilter/SearchTextFilter.tsx","components/FiltersArea/CheckBoxFilter/CheckBoxFilter.tsx","components/FiltersArea/CreateNewButton/CreateNewButton.tsx","pages/Admin/AdminCandidate/AdminCandidateFilters.tsx","components/Messages/types.ts","types/common/RegularExpressions.ts","components/Messages/ErrorMessage.tsx","pages/Admin/AdminCandidate/AdminCandidateForm.tsx","components/TablePagination/TablePagination.tsx","components/TableHeader/TableHeader.tsx","components/AppDeleteConfirmDialog/AppDeleteConfirmDialog.tsx","pages/Admin/AdminCandidate/AdminCandidateTable.tsx","pages/Admin/AdminCandidate/AdminCandidatePage.tsx","pages/Admin/AdminCountry/AdminCountryForm.tsx","pages/Admin/AdminCountry/AdminCountryTable.tsx","pages/Admin/AdminCountry/AdminCountryFilters.tsx","pages/Admin/AdminCountry/AdminCountryPage.tsx","pages/Admin/AdminService/AdminServiceTable.tsx","pages/Admin/AdminService/AdminServiceForm.tsx","pages/Admin/AdminService/AdminServiceFilters.tsx","pages/Admin/AdminService/AdminServicePage.tsx","pages/Admin/AdminOffice/AdminOfficeForm.tsx","pages/Admin/AdminOffice/AdminOfficeTable.tsx","pages/Admin/AdminOffice/AdminOfficeFilters.tsx","pages/Admin/AdminOffice/AdminOfficePage.tsx","pages/Admin/AdminTeam/AdminEmployeeForm.tsx","pages/Admin/AdminTeam/AdminEmployeeTable.tsx","pages/Admin/AdminTeam/AdminTeamFilters.tsx","pages/Admin/AdminTeam/AdminTeamPage.tsx","components/FiltersArea/AutocompleteFilter/AutocompleteFilter.tsx","components/FiltersArea/SelectItemFilter/SelectItemFilter.tsx","pages/Admin/AdminVacancy/AdminVacancyFilters.tsx","pages/Admin/AdminVacancy/AdminVacancyForm.tsx","pages/Admin/AdminVacancy/AdminVacancyTable.tsx","pages/Admin/AdminVacancy/AdminVacancyPage.tsx","components/Button/LoadMoreButton.tsx","components/ServiceList/ServiceCard.tsx","components/ServiceList/ServicesList.tsx","components/Spinner/Spinner.tsx","pages/CompanyServices/ServicesPage.tsx","api/email.ts","pages/Contact/ContactForm.tsx","pages/Contact/ContactInfoCard.tsx","pages/Contact/types.ts","pages/Contact/ContactInfoCardsList.tsx","pages/Contact/ContactPage.tsx","pages/Error/ErrorPage.tsx","pages/Home/HeaderChapter.tsx","pages/Home/ServiceChapter.tsx","components/EmployeeList/EmployeeCard.tsx","components/EmployeeList/EmployeesList.tsx","pages/Home/TeamChapter.tsx","pages/Home/StatCard.tsx","pages/Home/types.ts","pages/Home/StatisticsChapter.tsx","pages/Home/HomePage.tsx","pages/Account/Login/LoginForm.tsx","pages/Account/Login/LoginPage.tsx","pages/Account/RegisterComplete/RegisterCompletePage.tsx","pages/Account/Register/RegisterForm.tsx","pages/Account/Register/RegisterPage.tsx","pages/Team/TeamPage.tsx","pages/Admin/AdminUser/AdminUserFilters.tsx","pages/Admin/AdminUser/AdminUserTable.tsx","pages/Admin/AdminUser/AdminUsersPage.tsx","pages/Vacancies/VacanciesFilters.tsx","components/AnimateIn/AnimateIn.tsx","hooks/useElementOnScreen.ts","pages/Vacancies/VacancyCard.tsx","pages/Vacancies/VacanciesList.tsx","pages/Vacancies/VacanciesPage.tsx","pages/Vacancies/VacancyApplyForm.tsx","components/Messages/SuccessMessage.tsx","pages/Vacancies/VacancyDetails.tsx","api/mailSubscriber.ts","components/Footer/SubscriptionForm.tsx","components/Footer/Footer.tsx","pages/Account/Profile/ProfileForm.tsx","pages/Account/Profile/ProfilePage.tsx","pages/Account/ChangeEmail/ChangeEmailForm.tsx","pages/Account/ChangeEmail/ChangeEmailPage.tsx","pages/Vacancies/FavoriteVacanciesPage.tsx","pages/Account/ChangePassword/ChangePasswordForm.tsx","pages/Account/ChangePassword/ChangePasswordPage.tsx","components/AppAvatar/AppAvatar.tsx","components/AppBars/MainAppBar/MainAppBar.tsx","components/StandForUkraine/StandForUkraine.tsx","components/Layouts/PublicLayout.tsx","pages/Account/EmailConfirm/EmailConfirmPage.tsx","pages/Test/TestUI.tsx","pages/Account/ForgotPassword/ForgotPasswordForm.tsx","pages/Account/ForgotPassword/ForgotPasswordPage.tsx","pages/Account/ResetPassword/ResetPasswordForm.tsx","pages/Account/ResetPassword/ResetPasswordPage.tsx","components/Layouts/DashboardLeftMenuItems.tsx","components/Layouts/DemoLayout.tsx","pages/Admin/Dashboard/Dashboard.tsx","components/AppRouter.tsx","App.tsx","reportWebVitals.ts","store/reducers/authReducer.ts","store/reducers/candidateReducer.ts","store/reducers/countryReducer.ts","store/reducers/employeeReducer.ts","store/reducers/favoriteVacancyReducer.ts","store/reducers/officeReducer.ts","store/reducers/serviceReducer.ts","store/reducers/userReduser.ts","store/reducers/vacancyReducer.ts","store/index.ts","types/common/error.ts","api/middleware.ts","index.tsx"],"names":["useTypedSelector","useSelector","PageHeader","title","text","Grid","container","spacing","direction","alignItems","justifyContent","item","className","Roles","AuthActionTypes","RouteNames","AboutPage","Container","maxWidth","xs","md","textAlign","alt","src","changeEmailAxios","changeEmailDto","axios","post","data","changePasswordAxios","changePasswordDto","confirmEmailAxios","code","email","get","forgotPasswordAxios","resetPasswordAxios","resetPasswordDto","loginAxios","loginDto","logoutAxios","token","headers","Authorization","registerAxios","registerDto","refreshTokenAxios","accessToken","refreshToken","CandidateStatus","CandidateActionTypes","login","authModel","dispatch","type","LOGIN","payload","logout","SET_AUTH_LOADING","SET_AUTH_ERROR","message","localStorage","removeItem","LOGOUT","getCandidatesAxios","limit","page","search","candidateStatus","vacancyId","sortField","order","getCandidateByIdAxios","id","toString","updateCandidateIsDismissedStatusAxios","isDismissed","patch","op","path","value","createCandidateAxios","candidate","updateCandidateAxios","put","removeCandidateAxios","delete","CompanyServiceStatus","CompanyServiceActionTypes","getCandidates","filters","SET_CANDIDATE_LOADING","SET_CANDIDATE_ERROR","GET_CANDIDATES","searchInFullName","active","getCandidateById","GET_CANDIDATE_BY_ID","setCandidateLoading","isLoading","setCandidatePage","SET_CANDIDATE_PAGE","setCandidateActiveFilter","status","SET_CANDIDATE_ACTIVE_FILTER","setCandidateVacancyFilter","SET_CANDIDATE_VACANCY_FILTER","setCandidateSearchCriteria","SET_CANDIDATE_SEARCH_CRITERIA","updateCandidateIsDismissedStatus","candidateToUpdate","UPDATE_CANDIDATE_ISDISMISSED_STATUS","createCandidate","CREATE_CANDIDATE","updateCandidate","UPDATE_CANDIDATE","removeCandidate","REMOVE_CANDIDATE","getServicesAxios","companyServiceStatus","getServiceByIdAxios","updateServiceIsActiveStatusAxios","isActive","createServiceAxios","service","updateServiceAxios","removeServiceAxios","CountryActionTypes","getServices","SET_COMPANY_SERVICE_LOADING","SET_COMPANY_SERVICE_ERROR","GET_COMPANY_SERVICES","console","log","getServiceById","GET_COMPANY_SERVICE_BY_ID","loadMoreServices","LOAD_MORE_COMPANY_SERVICES","setServicePage","SET_COMPANY_SERVICE_PAGE","setServiceActiveFilter","SET_COMPANY_SERVICE_ACTIVE_FILTER","setServiceError","setServiceLoading","updateServiceIsActiveStatus","serviceToUpdate","UPDATE_COMPANY_SERVICE_ISACTIVE_STATUS","createService","CREATE_COMPANY_SERVICE","updateService","UPDATE_COMPANY_SERVICE","removeService","REMOVE_COMPANY_SERVICE","getCountriesAxios","getCountryByIdAxios","createCountryAxios","country","updateCountryAxios","removeCountryAxios","EmployeeActionTypes","getCountries","SET_COUNTRY_LOADING","SET_COUNTRY_ERROR","GET_COUNTRIES","getCountryById","GET_COUNTRY_BY_ID","setCountryError","setCountryLoading","setCountryPage","SET_COUNTRY_PAGE","createCountry","CREATE_COUNTRY","updateCountry","UPDATE_COUNTRY","removeCountry","REMOVE_COUNTRY","getEmployeesAxios","createEmployeeAxios","employee","updateEmployeeAxios","removeEmployeeAxios","FavoriteVacancyActionTypes","getEmployees","SET_EMPLOYEE_LOADING","SET_EMPLOYEE_ERROR","GET_EMPLOYEES","loadMoreEmployees","LOAD_MORE_EMPLOYEES","setEmployeePage","SET_EMPLOYEE_PAGE","createEmployee","CREATE_EMPLOYEE","updateEmployee","UPDATE_EMPLOYEE","removeEmployee","REMOVE_EMPLOYEE","getVacanciesAxios","vacancyStatus","officeId","getFavoriteVacanciesAxios","getVacancyByIdAxios","searchVacanciesTitlesAxios","searchValue","incrementPreviewsAxios","number","updateVacancyIsActiveStatusAxios","createVacancyAxios","vacancy","updateVacancyAxios","removeVacancyAxios","OfficeActionTypes","getFavoriteVacancies","SET_FAVORITE_VACANCY_LOADING","SET_FAVORITE_VACANCY_ERROR","GET_FAVORITE_VACANCIES","loadMoreFavoriteVacancies","LOAD_MORE_FAVORITE_VACANCIES","setFavoriteVacancyPage","SET_FAVORITE_VACANCY_PAGE","setFavoriteVacancyLoading","updateFavoriteVacancyStatus","candidateId","UPDATE_FAVORITE_VACANCY_STATUS","getOfficesAxios","getOfficeNameIdsAxios","getOfficeByIdAxios","createOfficeAxios","office","updateOfficeAxios","removeOfficeAxios","UserActionTypes","getOffices","SET_OFFICE_LOADING","SET_OFFICE_ERROR","GET_OFFICES","getOfficeById","GET_OFFICE_BY_ID","setOfficeError","setOfficeLoading","setOfficePage","SET_OFFICE_PAGE","createOffice","CREATE_OFFICE","updateOffice","UPDATE_OFFICE","removeOffice","REMOVE_OFFICE","getUsersAxios","updateUserEmailConfirmedStatusAxios","confirmed","updateUserAxios","user","VacancyStatus","VacancyActionTypes","getUsers","SET_USER_LOADING","SET_USER_ERROR","GET_USERS","searchInUserName","updateUserEmailConfirmedStatus","userToUpdate","emailConfirmed","UPDATE_USER_EMAILCONFIRMED_STATUS","setUserSearchCriteria","SET_USER_SEARCH_CRITERIA","setUserPage","SET_USER_PAGE","setUserError","OrderType","getVacancies","SET_VACANCY_LOADING","SET_VACANCY_ERROR","GET_VACANCIES","getOfficeNameIdDtos","SET_FILTERS_LOADING","SET_FILTERS_ERROR","SET_VACANCY_OFFICES","getVacanciesTitles","SET_VACANCIES_TITLES","loadMoreVacancies","LOAD_MORE_VACANCIES","setVacancyPage","SET_VACANCY_PAGE","setVacancyActiveFilter","SET_VACANCY_ACTIVE_FILTER","setVacancyLoading","setVacancyOfficeFilter","SET_VACANCY_OFFICE_FILTER","setVacancySearchCriteria","SET_VACANCY_SEARCH_CRITERIA","incrementPreviews","INCREMENT_PREVIEWS","updateVacancyIsActiveStatus","vacancyToUpdate","UPDATE_VACANCY_ISACTIVE_STATUS","createVacancy","CREATE_VACANCY","updateVacancy","UPDATE_VACANCY","removeVacancy","REMOVE_VACANCY","ActionCreators","AuthActionCreators","CandidateActionCreators","CompanyServiceActionCreators","CountryActionCreators","EmployeeActionCreators","FavoriteVacancyActionCreators","OfficeActionCreators","UserActionCreators","VacancyActionCreators","useActions","useDispatch","bindActionCreators","SearchText","onSearch","TextField","label","margin","fullWidth","onChange","event","target","CheckBoxFilter","onCheck","isChecked","FormControlLabel","control","Checkbox","checked","CreateNewButton","onAction","children","Button","variant","style","marginTop","textTransform","onClick","AdminCandidateFilters","onAddNew","state","Active","All","length","MessageAppearance","EMAIL_REG_EXP","PASSWORD_REG_EXP","PHONE_REG_EXP","ErrorMessage","cssClass","appearance","LARGE","my","Typography","component","AdminCandidateForm","closeForm","useState","error","setError","joinedAt","joinedAtValue","setJoinedAtValue","toggleDrawer","anchor","open","key","validationSchema","Yup","required","fullName","min","max","matches","phone","notes","positive","defaultValues","useForm","resolver","yupResolver","handleSubmit","errors","formState","register","reset","onSubmit","onCancelHandler","SwipeableDrawer","transitionDuration","sx","zIndex","onClose","onOpen","padding","fontWeight","name","render","field","Boolean","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","edge","multiline","rows","height","props","e","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","format","moment","newValue","toDate","sm","REGULAR","TablePagination","count","onChangePage","setPage","Box","mt","mb","display","Pagination","TableHeader","titles","TableHead","TableRow","map","header","index","TableCell","align","gutterBottom","AppDeleteConfirmDialog","onCancel","onDelete","setOpen","handleClose","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","color","AdminCandidateTable","onEdit","candidateSearchResult","confirmDialogOpen","setConfirmDialogOpen","candidateIdToDelete","setCandidateIdToDelete","TableContainer","Paper","Table","minWidth","TableBody","itemList","border","scope","slice","concat","Switch","choosedCandidate","find","c","onChangeIsDismissed","vacancyDto","Tooltip","placement","cursor","fill","onEditHandler","Divider","orientation","flexItem","setTimeout","Math","ceil","totalItemCount","pageSize","AdminCandidatePage","setCandidate","useEffect","currentPageNumber","Ascending","Date","AdminCountryForm","officeDtos","AdminCountryTable","countrySearchResult","countryIdToDelete","setCountryIdToDelete","address","choosedCountry","countryToUpdate","AdminCountryFilters","AdminCountryPage","setCountry","AdminServiceTable","serviceSearchResult","serviceIdToDelete","setServiceIdToDelete","description","imageUrl","choosedService","s","onChangeIsActive","AdminServiceForm","AdminServiceFilters","AdminServicePage","setService","AdminOfficeForm","countries","latitude","longitude","countryId","FormControl","width","InputLabel","defaultValue","Select","MenuItem","FormHelperText","AdminOfficeTable","officeSearchResult","officeIdToDelete","setOfficeIdToDelete","countryDto","vacancyDtos","choosedOffice","officeToUpdate","AdminOfficeFilters","AdminOfficePage","setOffice","AdminEmployeeForm","offices","avatarUrl","AdminEmployeeTable","employeeSearchResult","employeeIdToDelete","setEmployeeIdToDelete","officeDto","choosedEmployee","employeeToUpdate","AdminTeamFilters","AdminTeamPage","setEmployee","searchCriteria","AutocompleteFilter","options","Autocomplete","freeSolo","disableClearable","option","renderInput","params","SelectItemsFilter","items","onSelectChanged","AdminVacancyFilters","o","values","top","left","overflow","maxHeight","transform","bgcolor","boxShadow","p","AdminVacancyForm","editorValue","setEditorValue","previews","Modal","theme","AdminVacancyTable","vacancySearchResult","vacancyIdToDelete","setVacancyIdToDelete","candidates","alert","Badge","badgeContent","filter","substring","choosedVacancy","v","AdminVacancyPage","errorFilters","errorVacancies","setVacancy","LoadMoreButton","isDisabled","onClickHandler","disabled","ServiceCard","ServicesList","services","Spinner","flexDirection","CircularProgress","ServicesPage","loading","sendEmailAxios","ContactForm","setLoading","openSnackBar","setOpenSnackBar","serverConfirmation","setServerConfirmation","senderName","senderEmail","subject","sendEmail","responceFromServer","size","Snackbar","autoHideDuration","reason","ContactInfoCard","contactInfoItem","icons","fontSize","icon","lines","line","contactInfoItems","ContactInfoCardsList","ContactPage","ErrorPage","HeaderChapter","navigate","useNavigate","fixed","alignContent","SERVICES","window","scroll","ServiceChapter","EmployeeCard","Card","elevation","CardContent","EmployeesList","employees","TeamChapter","TEAM","StatCard","defaultStyle","x","spring","maxNumber","stiffness","damping","toFixed","content","href","redirectLink","statCardItems","StatisticsChapter","HomePage","LoginForm","showPassword","setShowPassword","password","remember","loginModel","setItem","JSON","stringify","roles","includes","ADMIN","DEMO","DASHBOARD","HOME","onMouseDown","preventDefault","Visibility","VisibilityOff","LoginPage","to","REGISTER","FORGOT_PASSWORD","RegisterCompletePage","RegisterForm","showConfirmPassword","setShowConfirmPassword","confirmPassword","REGISTER_COMPLETE","RegisterPage","TeamPage","AdminUserFilters","AdminUserTable","userSearchResult","userName","choosedUser","onChangeEmailConfirmed","phoneNumber","AdminUsersPage","VacanciesFilters","searchTitleChanged","AnimateIn","ref","useRef","onScreen","rootMargin","isIntersecting","setIsIntersecting","observer","IntersectionObserver","entry","current","observe","unobserve","useElementOnScreen","opacity","translate","transition","VacancyCard","auth","showDetailesHandler","VACANCY","VacanciesList","vacancies","VacanciesPage","loadingVacancies","VacancyApplyForm","openForm","onSuccess","SuccessMessage","VacancyDetailes","useParams","showSuccessMessage","setShowSuccessMessage","showRemoveOrApplyButton","setShowRemoveOrApplyButton","currentVacancy","setCurrentVacancy","getVacancy","Number","onApply","marginBottom","ReactHtmlParser","subscribeAxios","mailSubscriber","SubscriptionForm","createdSubscriber","subscriber","emailAddress","isSubscribed","mailSubscriptionId","backgroundColor","mainMenuRoutes","ABOUT","CONTACT","Footer","lineHeight","List","ListItemButton","ListItemIcon","htmlColor","ListItemText","primary","ProfileForm","snackbarOpened","setSnackbarOpened","updateUserData","ProfilePage","ChangeEmailForm","existingEmail","newEmail","ChangeEmailPage","FavoriteVacanciesPage","favoriteVacancy","favoriteVacancySearchResult","ChangePasswordForm","showOldPassword","setShowOldPassword","showNewPassword","setShowNewPassword","oldPassword","newPassword","confirmNewPassword","tokens","ChangePasswordPage","AppAvatar","React","anchorElUser","setAnchorElUser","settings","PROFILE","FAVORITE_VACANCIES","CHANGE_EMAIL","CHANGE_PASSWORD","settingsIcons","flexGrow","columnGap","currentTarget","Avatar","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","setting","Link","gap","mainMenuIcons","MainAppBar","anchorElNav","setAnchorElNav","handleCloseNavMenu","AppBar","Toolbar","disableGutters","mr","fontFamily","textDecoration","StandForUkraine","rel","PublicLayout","document","EmailConfirmPage","useSearchParams","searchParams","tryToConfirmEmailByUrlParams","TestUI","ForgotPasswordForm","ForgotPasswordPage","ResetPasswordForm","ResetPasswordPage","mainListItems","ADMIN_COUNTRIES","ADMIN_OFFICES","ADMIN_SERVICES","ADMIN_TEAM","ADMIN_VACANCIES","ADMIN_CANDIDATES","USERS","secondaryListItems","ListSubheader","inset","Copyright","paddingTop","getFullYear","styled","MuiAppBar","shouldForwardProp","prop","drawer","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","mdTheme","createTheme","DemoAppBar","ThemeProvider","minHeight","CssBaseline","pr","marginRight","noWrap","px","palette","mode","grey","pt","pb","Dashboard","AppRouter","publicPages","EMAIL_CONFIRM","TEST_UI","RESET_PASSWORD","route","element","registeredRolePages","VACANCY_DETAILES","adminRolePages","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","parse","getItem","pageCount","deleteCandidate","action","Descending","deleteCountry","deleteEmployee","deleteOffice","deleteService","updateUser","searchInTitle","loadingFilters","deleteVacancy","ErrorStatus","rootReducer","combineReducers","vacancyOffices","unshift","AxiosMiddleware","defaults","baseURL","process","interceptors","request","use","config","authFromLocalStorage","keys","Promise","reject","response","errorMessage","Forbidden","Error","Unauthorized","common","store","configureStore","reducer","boot","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.a10c9a4b.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import { Grid } from \"@mui/material\";\r\nimport { PageHeaderProps } from './types';\r\nimport './styles.css';\r\n\r\nexport default function PageHeader({ title, text }: PageHeaderProps): JSX.Element {\r\n    return (\r\n        <Grid container spacing={2} direction='column' alignItems={'center'} justifyContent={'center'}>\r\n            <Grid item className=\"grid-item\">\r\n                <h4 className=\"page-header\">{title}</h4>\r\n            </Grid>\r\n            {text &&\r\n                <Grid item className=\"grid-item\">\r\n                    <p className=\"page-subheader\">{text}</p>\r\n                </Grid>}\r\n        </Grid>\r\n    )\r\n};","import { IUser } from \"./user\";\r\n\r\nexport interface IAuth {\r\n    user: IUser;\r\n    roles: string[];\r\n    tokens: {\r\n        accessToken: string;\r\n        refreshToken: string;\r\n    }\r\n}\r\n\r\nexport interface ILoginDto {\r\n    email: string;\r\n    password: string;\r\n    remember: boolean;\r\n}\r\n\r\nexport interface IRegisterDto {\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\nexport interface IChangePasswordDto {\r\n    email: string;\r\n    oldPassword: string;\r\n    newPassword: string;\r\n    confirmNewPassword: string;\r\n}\r\n\r\nexport interface IChangeEmailDto {\r\n    existingEmail: string;\r\n    newEmail: string;\r\n    password: string;\r\n}\r\n\r\nexport interface IResetPasswordDto {\r\n    code: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\nexport enum Roles {\r\n    ADMIN = \"Admin\",\r\n    REGISTERED = \"Registered\",\r\n    DEMO = \"Demo\"\r\n}\r\n\r\nexport interface AuthState {\r\n    auth: null | IAuth;\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum AuthActionTypes {\r\n    LOGIN = \"LOGIN\",\r\n    LOGOUT = \"LOGOUT\",\r\n    SET_AUTH_ERROR = \"SET_AUTH_ERROR\",\r\n    SET_AUTH_LOADING = \"SET_AUTH_LOADING\"\r\n}\r\n\r\ninterface Login {\r\n    type: AuthActionTypes.LOGIN;\r\n    payload: IAuth;\r\n}\r\n\r\ninterface Logout {\r\n    type: AuthActionTypes.LOGOUT;\r\n    payload: null;\r\n}\r\n\r\ninterface SetErrorAction {\r\n    type: AuthActionTypes.SET_AUTH_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n    type: AuthActionTypes.SET_AUTH_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\nexport type AuthAction = Login | Logout | SetErrorAction | SetLoadingAction","export interface IRoute {\r\n    path: string;\r\n    component: JSX.Element;\r\n    title: string;\r\n}\r\n\r\nexport enum RouteNames {\r\n    ADMIN_CANDIDATES = '/admin/candidates',\r\n    ADMIN_COUNTRIES = '/admin/countries',\r\n    ADMIN_OFFICES = '/admin/offices',\r\n    ADMIN_SERVICES = '/admin/services',\r\n    ADMIN_TEAM = '/admin/team',\r\n    ADMIN_VACANCIES = '/admin/vacancies',\r\n    ABOUT = '/about',\r\n    CONTACT = '/contact',\r\n    CHANGE_EMAIL = '/change-email',\r\n    CHANGE_PASSWORD = '/change-password',\r\n    DASHBOARD = '/dashboard',\r\n    EMAIL_CONFIRM = '/email-confirm',\r\n    ERROR = '/error',\r\n    FAVORITE_VACANCIES = '/favorite-vacancies',\r\n    FORGOT_PASSWORD = '/forgot-password',\r\n    HOME = \"/\",\r\n    LOGIN = '/login',\r\n    PROFILE = \"/profile\",\r\n    REGISTER = '/register',\r\n    REGISTER_COMPLETE = '/register-complete',\r\n    RESET_PASSWORD = '/reset-password',\r\n    SERVICES = '/services',\r\n    TEAM = '/team',\r\n    TEST_UI = '/test',\r\n    USERS = '/users',\r\n    VACANCY = '/vacancy',\r\n    VACANCY_DETAILES = '/vacancy/:vacancyId'\r\n}\r\n","import { Container, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport './styles.css';\r\n\r\nexport default function AboutPage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Why Shuffle?\"\r\n                text=\"We founded Shuffle from a desire to deliver what we felt was lacking in the industry; exceptional tech talent and a high level of service, packaged in a way that could be customised to suit any client’s needs. We blend talent, resources and finely-tuned processes to bring you high-quality service at a sustainable cost.\"\r\n            />\r\n            <Grid container spacing={2} alignItems=\"center\" className=\"page-chapter-container\">\r\n                <Grid item xs={12} md={6} textAlign='center'>\r\n                    <img className=\"about-img\" alt=\"About us\" src=\"https://volodymyr57.somee.com/uploads/about.webp\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <h3>At Shuffle, <strong>our values underpin everything we do.</strong></h3>\r\n                    <p>\r\n                        <i>We believe our high moral standards and dedication to our values is what sets us apart in the industry and has helped us retain so many of our valuable clients on an ongoing basis.</i>\r\n                    </p>\r\n                    <p>\r\n                        In such a highly specialised field, our clients found that there was often a gap in understanding between them and their technology partners, which led to challenges in communicating and lengthy project delays. This saw them overspending on some of the most basic web development services.\r\n                    </p>\r\n                    <img className=\"about-img\" alt=\"About us 2nd img.\" src=\"https://volodymyr57.somee.com/uploads/about2.webp\" />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { IAuth, IChangeEmailDto, IChangePasswordDto, ILoginDto, IRegisterDto, IResetPasswordDto } from '../types/auth';\r\n\r\n/**\r\n * Changes the email of current user\r\n * @param changeEmailDto<IChangeEmailDto> Object of type IChangeEmailDto\r\n * @returns<string> Success confirmation message\r\n */\r\nexport async function changeEmailAxios(changeEmailDto: IChangeEmailDto): Promise<string> {\r\n    return (await axios.post<string>(\"/account/changeemail\", changeEmailDto)).data;\r\n}\r\n\r\n/**\r\n * Changes the password of current user\r\n * @param changePasswordDto<IChangePasswordDto> Object of type IChangePasswordDto\r\n * @returns<string> Success confirmation message\r\n */\r\nexport async function changePasswordAxios(changePasswordDto: IChangePasswordDto): Promise<string> {\r\n    return (await axios.post<string>(\"/account/changepassword\", changePasswordDto)).data;\r\n}\r\n\r\nexport async function confirmEmailAxios(code: string, email: string) {\r\n    await axios.get(`/account/confirmemail?code=${code}&email=${email}`);\r\n}\r\n\r\nexport async function forgotPasswordAxios(email: string) {\r\n    await axios.get(`/account/forgotpassword?email=${email}`);\r\n}\r\n\r\nexport async function resetPasswordAxios(resetPasswordDto: IResetPasswordDto): Promise<string> {\r\n    return (await axios.post<string>(\"/account/resetPassword\", resetPasswordDto)).data;\r\n}\r\n\r\nexport async function loginAxios(loginDto: ILoginDto): Promise<IAuth> {\r\n    return (await axios.post<IAuth>(\"/account/login\", loginDto)).data;\r\n}\r\n\r\nexport async function logoutAxios(email: string, token: string) {\r\n    await axios.get(`/account/logout/${email}`, { headers: { Authorization: `Bearer ${token}` } });\r\n}\r\n\r\nexport async function registerAxios(registerDto: IRegisterDto): Promise<IRegisterDto> {\r\n    return (await axios.post<IRegisterDto>(\"/account/register\", registerDto)).data;\r\n}\r\n\r\nexport async function refreshTokenAxios(accessToken: string, refreshToken: string): Promise<IAuth> {\r\n    return (await axios.post<IAuth>(\"/account/refreshtoken\", { accessToken, refreshToken })).data;\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { logoutAxios } from \"../../api/auth\";\r\nimport { AuthAction, AuthActionTypes, IAuth } from \"../../types/auth\";\r\n\r\nexport const login = (authModel: IAuth) => {\r\n    return async (dispatch: Dispatch<AuthAction>) => {\r\n        dispatch({ type: AuthActionTypes.LOGIN, payload: authModel });\r\n    }\r\n}\r\n\r\nexport const logout = (email: string, token: string) => {\r\n    return async (dispatch: Dispatch<AuthAction>) => {\r\n        try {\r\n            dispatch({ type: AuthActionTypes.SET_AUTH_LOADING, payload: true });\r\n            dispatch({ type: AuthActionTypes.SET_AUTH_ERROR, payload: null });\r\n            await logoutAxios(email, token);\r\n        } catch (error) {\r\n            dispatch({ type: AuthActionTypes.SET_AUTH_ERROR, payload: error.message || 'Unknown error.' });\r\n        } finally {\r\n            // remove auth from localStorage and store anyway\r\n            localStorage.removeItem(\"auth\");\r\n            dispatch({ type: AuthActionTypes.LOGOUT, payload: null });\r\n            dispatch({ type: AuthActionTypes.SET_AUTH_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { ISearchResult } from \"./common/searchResult\";\r\nimport { IVacancy } from \"./vacancy\";\r\n\r\nexport interface ICandidate {\r\n    id: number;\r\n    fullName: string;\r\n    email: string;\r\n    phone: string;\r\n    notes: string;\r\n    isDismissed: boolean;\r\n    joinedAt: Date;\r\n    vacancyId: number;\r\n    vacancyDto?: IVacancy;\r\n}\r\n\r\nexport enum CandidateStatus {\r\n    Active,\r\n    Dismissed,\r\n    All\r\n}\r\n\r\nexport interface CandidateFilters {\r\n    active: CandidateStatus;\r\n    vacancyId: number;\r\n    searchInFullName: string;\r\n}\r\n\r\nexport interface CandidateState {\r\n    candidateSearchResult: ISearchResult<ICandidate>;\r\n    filters: CandidateFilters;\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum CandidateActionTypes {\r\n    GET_CANDIDATES = \"GET_CANDIDATES\",\r\n    GET_CANDIDATE_BY_ID = \"GET_CANDIDATE_BY_ID\",\r\n    SET_CANDIDATE_ERROR = \"SET_CANDIDATE_ERROR\",\r\n    SET_CANDIDATE_LOADING = \"SET_CANDIDATE_LOADING\",\r\n    SET_CANDIDATE_PAGE = \"SET_CANDIDATE_PAGE\",\r\n    SET_CANDIDATE_ACTIVE_FILTER = \"SET_CANDIDATE_ACTIVE_FILTER\",\r\n    SET_CANDIDATE_VACANCY_FILTER = \"SET_CANDIDATE_VACANCY_FILTER\",\r\n    SET_CANDIDATE_SEARCH_CRITERIA = \"SET_CANDIDATE_SEARCH_CRITERIA\",\r\n    UPDATE_CANDIDATE_ISDISMISSED_STATUS = \"UPDATE_CANDIDATE_ISDISMISSED_STATUS\",\r\n    CREATE_CANDIDATE = \"CREATE_CANDIDATE\",\r\n    UPDATE_CANDIDATE = \"UPDATE_CANDIDATE\",\r\n    REMOVE_CANDIDATE = \"REMOVE_CANDIDATE\"\r\n}\r\n\r\ninterface GetCandidatesAction {\r\n    type: CandidateActionTypes.GET_CANDIDATES;\r\n    payload: ISearchResult<ICandidate>;\r\n}\r\n\r\ninterface GetCandidateByIdAction {\r\n    type: CandidateActionTypes.GET_CANDIDATE_BY_ID;\r\n    payload: ICandidate;\r\n}\r\n\r\ninterface SetCandidateErrorAction {\r\n    type: CandidateActionTypes.SET_CANDIDATE_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetCandidateLoadingAction {\r\n    type: CandidateActionTypes.SET_CANDIDATE_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetCandidatePagesAction {\r\n    type: CandidateActionTypes.SET_CANDIDATE_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface SetCandidateActiveFilterAction {\r\n    type: CandidateActionTypes.SET_CANDIDATE_ACTIVE_FILTER;\r\n    payload: CandidateStatus;\r\n}\r\n\r\ninterface SetCandidateVacancyFilterAction {\r\n    type: CandidateActionTypes.SET_CANDIDATE_VACANCY_FILTER;\r\n    payload: number;\r\n}\r\n\r\ninterface SetCandidatesSearchCriteriaAction {\r\n    type: CandidateActionTypes.SET_CANDIDATE_SEARCH_CRITERIA;\r\n    payload: string;\r\n}\r\n\r\ninterface UpdateCandidateIsDismissedAction {\r\n    type: CandidateActionTypes.UPDATE_CANDIDATE_ISDISMISSED_STATUS;\r\n    payload: ICandidate;\r\n}\r\n\r\ninterface CreateCandidateAction {\r\n    type: CandidateActionTypes.CREATE_CANDIDATE;\r\n    payload: ICandidate;\r\n}\r\n\r\ninterface UpdateCandidateAction {\r\n    type: CandidateActionTypes.UPDATE_CANDIDATE;\r\n    payload: ICandidate;\r\n}\r\n\r\ninterface RemoveCandidateAction {\r\n    type: CandidateActionTypes.REMOVE_CANDIDATE;\r\n    payload: number;\r\n}\r\n\r\nexport type CandidateAction = GetCandidatesAction |\r\n    GetCandidateByIdAction |\r\n    SetCandidateErrorAction |\r\n    SetCandidateLoadingAction |\r\n    SetCandidatePagesAction |\r\n    SetCandidateActiveFilterAction |\r\n    SetCandidateVacancyFilterAction |\r\n    SetCandidatesSearchCriteriaAction |\r\n    UpdateCandidateIsDismissedAction |\r\n    CreateCandidateAction |\r\n    UpdateCandidateAction |\r\n    RemoveCandidateAction","import axios from 'axios';\r\nimport { CandidateStatus, ICandidate } from '../types/candidate';\r\nimport { OrderType } from '../types/common/orderType';\r\nimport { ISearchResult } from '../types/common/searchResult';\r\n\r\n/**\r\n * Get list of candidates\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param search<string> Search text for candadate full name\r\n * @param candidateStatus<CandidateStatus> Filter for isDismissed property: 0 - Active, 1 - Dismissed, 2 - All\r\n * @param vacancyId<number> Filter for candidates by vacancyId. null/'' means all candidates with all vacancies\r\n * @param sortField<string> Field for sorting\r\n * @param order<OrderType> Sort direction (Ascending / Descending / None)\r\n */\r\nexport async function getCandidatesAxios(\r\n    limit: number,\r\n    page: number,\r\n    search: string,\r\n    candidateStatus: CandidateStatus,\r\n    vacancyId: number,\r\n    sortField: string,\r\n    order: OrderType): Promise<ISearchResult<ICandidate>> {\r\n    return (\r\n        await axios.get(`/candidate/get?limit=${limit}&page=${page}&search=${search}&candidateStatus=${candidateStatus}&vacancyId=${vacancyId == null ? '' : vacancyId}&sortField=${sortField}&order=${order}`)).data;\r\n}\r\n\r\n/**\r\n * Get candidate specified by identifier\r\n * @param id<string> Candidate identifier\r\n */\r\nexport async function getCandidateByIdAxios(id: number): Promise<ICandidate> {\r\n    return (await axios.get(`/candidate/get/${id.toString()}`)).data;\r\n}\r\n\r\n/**\r\n * @param id<string> Candidate identifier\r\n * @param isDismissed<boolean> Candidate status\r\n */\r\nexport async function updateCandidateIsDismissedStatusAxios(id: number, isDismissed: boolean): Promise<void> {\r\n    await axios.patch(`/candidate/partialcandidateupdate/${id}`, [{ op: \"replace\", path: \"/isdismissed\", value: isDismissed }]);\r\n}\r\n\r\n/**\r\n * Creates a new candidate\r\n * @param candidate<ICandidate> object of type ICandidate\r\n * @returns<ICandidate> Created candidate\r\n */\r\nexport async function createCandidateAxios(candidate: ICandidate): Promise<ICandidate> {\r\n    return (await axios.post(\"/candidate/create\", candidate)).data;\r\n}\r\n\r\n/**\r\n * Updates the existing candidate\r\n * @param candidate<ICandidate> Object of type ICandidate\r\n * @returns<ICandidate> Updated candidate object\r\n */\r\nexport async function updateCandidateAxios(candidate: ICandidate): Promise<ICandidate> {\r\n    return (await axios.put(\"/candidate/update\", candidate)).data;\r\n}\r\n\r\n/**\r\n * Delete's the candidate specified by identifier\r\n * @param id<string> Identifier\r\n */\r\nexport async function removeCandidateAxios(id: number): Promise<void> {\r\n    return await axios.delete(`/candidate/delete/${id}`);\r\n}","import { Dispatch } from \"redux\";\r\nimport { createCandidateAxios, getCandidatesAxios, getCandidateByIdAxios, updateCandidateIsDismissedStatusAxios, updateCandidateAxios, removeCandidateAxios } from \"../../api/candidate\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport { ICandidate, CandidateAction, CandidateActionTypes, CandidateStatus, CandidateFilters } from \"../../types/candidate\";\r\n\r\nexport const getCandidates = (limit: number, page: number, filters: CandidateFilters, sortField: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        try {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: true });\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: null });\r\n            dispatch({\r\n                type: CandidateActionTypes.GET_CANDIDATES, payload:\r\n                    await getCandidatesAxios(limit, page, filters.searchInFullName, filters.active, filters.vacancyId, sortField, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: error.message || \"Error of loading candidates.\" })\r\n        } finally {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCandidateById = (id: number) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        try {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: true });\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: null });\r\n            dispatch({ type: CandidateActionTypes.GET_CANDIDATE_BY_ID, payload: await getCandidateByIdAxios(id) });\r\n        } catch (error) {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: error.message || \"Error of loading choosed candidate.\" })\r\n        } finally {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCandidateLoading = (isLoading: boolean) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: isLoading });\r\n    }\r\n}\r\n\r\nexport const setCandidatePage = (page: number) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        dispatch({ type: CandidateActionTypes.SET_CANDIDATE_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const setCandidateActiveFilter = (status: CandidateStatus) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ACTIVE_FILTER, payload: status });\r\n    }\r\n}\r\n\r\nexport const setCandidateVacancyFilter = (vacancyId: number) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        dispatch({ type: CandidateActionTypes.SET_CANDIDATE_VACANCY_FILTER, payload: vacancyId });\r\n    }\r\n}\r\n\r\nexport const setCandidateSearchCriteria = (search: string) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        dispatch({ type: CandidateActionTypes.SET_CANDIDATE_SEARCH_CRITERIA, payload: search });\r\n    }\r\n}\r\n\r\nexport const updateCandidateIsDismissedStatus = (id: number, candidateToUpdate: ICandidate) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        try {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: true });\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: null });\r\n            await updateCandidateIsDismissedStatusAxios(id, candidateToUpdate.isDismissed);\r\n            dispatch({ type: CandidateActionTypes.UPDATE_CANDIDATE_ISDISMISSED_STATUS, payload: candidateToUpdate });\r\n        } catch (error) {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: error.message || \"Error of updating candidate isDismissed status.\" })\r\n        } finally {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const createCandidate = (candidate: ICandidate) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        try {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: true });\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: null });\r\n            dispatch({ type: CandidateActionTypes.CREATE_CANDIDATE, payload: await createCandidateAxios(candidate) });\r\n        } catch (error) {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: error.message || \"Error while creating the candidate.\" })\r\n        } finally {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateCandidate = (candidate: ICandidate) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        try {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: true });\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: null });\r\n            dispatch({ type: CandidateActionTypes.UPDATE_CANDIDATE, payload: await updateCandidateAxios(candidate) });\r\n        } catch (error) {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: error.message || \"Error while updating the candidate.\" })\r\n        } finally {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeCandidate = (id: number) => {\r\n    return async (dispatch: Dispatch<CandidateAction>) => {\r\n        try {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: true });\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: null });\r\n            await removeCandidateAxios(id);\r\n            dispatch({ type: CandidateActionTypes.REMOVE_CANDIDATE, payload: id });\r\n        } catch (error) {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_ERROR, payload: error.message || \"Error while removing the candidate.\" })\r\n        } finally {\r\n            dispatch({ type: CandidateActionTypes.SET_CANDIDATE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n","import { ISearchResult } from \"./common/searchResult\";\r\n\r\nexport interface ICompanyService {\r\n    id: number,\r\n    title: string;\r\n    description: string;\r\n    imageUrl: string;\r\n    isActive: boolean;\r\n}\r\n\r\nexport enum CompanyServiceStatus {\r\n    Active,\r\n    Disabled,\r\n    All\r\n}\r\n\r\nexport interface CompanyServiceState {\r\n    serviceSearchResult: ISearchResult<ICompanyService>;\r\n    filters: {\r\n        active: CompanyServiceStatus\r\n    }\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum CompanyServiceActionTypes {\r\n    GET_COMPANY_SERVICES = \"GET_COMPANY_SERVICES\",\r\n    GET_COMPANY_SERVICE_BY_ID = \"GET_COMPANY_SERVICE_BY_ID\",\r\n    LOAD_MORE_COMPANY_SERVICES = \"LOAD_MORE_COMPANY_SERVICES\",\r\n    SET_COMPANY_SERVICE_ERROR = \"SET_COMPANY_SERVICE_ERROR\",\r\n    SET_COMPANY_SERVICE_LOADING = \"SET_COMPANY_SERVICE_LOADING\",\r\n    SET_COMPANY_SERVICE_PAGE = \"SET_COMPANY_SERVICE_PAGE\",\r\n    SET_COMPANY_SERVICE_ACTIVE_FILTER = \"SET_COMPANY_SERVICE_ACTIVE_FILTER\",\r\n    UPDATE_COMPANY_SERVICE_ISACTIVE_STATUS = \"UPDATE_COMPANY_SERVICE_ISACTIVE_STATUS\",\r\n    CREATE_COMPANY_SERVICE = \"CREATE_COMPANY_SERVICE\",\r\n    UPDATE_COMPANY_SERVICE = \"UPDATE_COMPANY_SERVICE\",\r\n    REMOVE_COMPANY_SERVICE = \"REMOVE_COMPANY_SERVICE\"\r\n}\r\n\r\ninterface GetServicesAction {\r\n    type: CompanyServiceActionTypes.GET_COMPANY_SERVICES;\r\n    payload: ISearchResult<ICompanyService>;\r\n}\r\n\r\ninterface GetServiceByIdAction {\r\n    type: CompanyServiceActionTypes.GET_COMPANY_SERVICE_BY_ID;\r\n    payload: ICompanyService;\r\n}\r\n\r\ninterface LoadMoreServicesAction {\r\n    type: CompanyServiceActionTypes.LOAD_MORE_COMPANY_SERVICES;\r\n    payload: ISearchResult<ICompanyService>;\r\n}\r\n\r\ninterface SetServiceErrorAction {\r\n    type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetServiceLoadingAction {\r\n    type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetServicePageAction {\r\n    type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface SetServiceActiveFilterAction {\r\n    type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ACTIVE_FILTER;\r\n    payload: CompanyServiceStatus;\r\n}\r\n\r\ninterface UpdateServiceIsActiveStatusAction {\r\n    type: CompanyServiceActionTypes.UPDATE_COMPANY_SERVICE_ISACTIVE_STATUS;\r\n    payload: ICompanyService;\r\n}\r\n\r\ninterface CreateCompanyServiceAction {\r\n    type: CompanyServiceActionTypes.CREATE_COMPANY_SERVICE;\r\n    payload: ICompanyService;\r\n}\r\n\r\ninterface UpdateCompanyServiceAction {\r\n    type: CompanyServiceActionTypes.UPDATE_COMPANY_SERVICE;\r\n    payload: ICompanyService;\r\n}\r\n\r\ninterface RemoveCompanyServiceAction {\r\n    type: CompanyServiceActionTypes.REMOVE_COMPANY_SERVICE;\r\n    payload: number;\r\n}\r\n\r\nexport type CompanyServiceAction = GetServicesAction |\r\n    GetServiceByIdAction |\r\n    LoadMoreServicesAction |\r\n    SetServiceErrorAction |\r\n    SetServiceLoadingAction |\r\n    SetServicePageAction |\r\n    SetServiceActiveFilterAction |\r\n    UpdateServiceIsActiveStatusAction |\r\n    CreateCompanyServiceAction |\r\n    UpdateCompanyServiceAction |\r\n    RemoveCompanyServiceAction","import axios from 'axios';\r\nimport { CompanyServiceStatus, ICompanyService } from '../types/companyService';\r\nimport { ISearchResult } from '../types/common/searchResult';\r\nimport { OrderType } from '../types/common/orderType';\r\n\r\n/**\r\n * Get list of services\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param companyServiceStatus<CompanyServiceStatus> Possible values: 0 - Active, 1 - Disabled, 2 - All\r\n * @param order<OrderType> Sort direction (0 - Ascending / 1 - Descending / 2 - None)\r\n */\r\nexport async function getServicesAxios(limit: number, page: number, companyServiceStatus: CompanyServiceStatus, order: OrderType): Promise<ISearchResult<ICompanyService>> {\r\n    return (await axios.get(`/companyservice/get?limit=${limit}&page=${page}&companyServiceStatus=${companyServiceStatus}&order=${order}`)).data;\r\n}\r\n\r\n/**\r\n * Get's the object of service specified by identifier\r\n * @param id<string> Identifier\r\n * @returns<ICompanyService> Object of service\r\n */\r\nexport async function getServiceByIdAxios(id: number): Promise<ICompanyService> {\r\n    return (await axios.get(`/companyservice/get/${id.toString()}`)).data;\r\n}\r\n\r\n/**\r\n * @param id<string> Service identifier\r\n * @param isActive<boolean> Service status\r\n */\r\nexport async function updateServiceIsActiveStatusAxios(id: number, isActive: boolean): Promise<void> {\r\n    await axios.patch(`/companyservice/partialserviceupdate/${id}`, [{ op: \"replace\", path: \"/isactive\", value: isActive }]);\r\n}\r\n\r\n/**\r\n * Creates a new company's service\r\n * @param service<ICompanyService> Object of type ICompanyService\r\n * @returns<ICompanyService> Created service object\r\n */\r\nexport async function createServiceAxios(service: ICompanyService): Promise<ICompanyService> {\r\n    return (await axios.post(\"/companyservice/create\", service)).data;\r\n}\r\n\r\n/**\r\n * Updates company's service\r\n * @param service<ICompanyService> Object of type ICompanyService\r\n * @returns<ICompanyService> Updated service object\r\n */\r\nexport async function updateServiceAxios(service: ICompanyService): Promise<ICompanyService> {\r\n    return (await axios.put(\"/companyservice/update\", service)).data;\r\n}\r\n\r\n/**\r\n * Delete's the object of service specified by identifier\r\n * @param id<string> Identifier\r\n */\r\nexport async function removeServiceAxios(id: number): Promise<void> {\r\n    return await axios.delete(`/companyservice/delete/${id.toString()}`);\r\n}","import { Dispatch } from \"redux\";\r\nimport { getServicesAxios, getServiceByIdAxios, removeServiceAxios, createServiceAxios, updateServiceAxios, updateServiceIsActiveStatusAxios } from \"../../api/service\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport { ICompanyService, CompanyServiceAction, CompanyServiceActionTypes, CompanyServiceStatus } from \"../../types/companyService\";\r\n\r\nexport const getServices = (limit: number, page: number, companyServiceStatus: CompanyServiceStatus, order: OrderType) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        try {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: true });\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: null });\r\n            dispatch({\r\n                type: CompanyServiceActionTypes.GET_COMPANY_SERVICES, payload:\r\n                    await getServicesAxios(limit, page, companyServiceStatus, order)\r\n            });\r\n        } catch (error) {\r\n            console.log('error ', error)\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: error.message || \"Error of loading services.\" })\r\n        } finally {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getServiceById = (id: number) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        try {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: true });\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: null });\r\n            dispatch({ type: CompanyServiceActionTypes.GET_COMPANY_SERVICE_BY_ID, payload: await getServiceByIdAxios(id) });\r\n        } catch (error) {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: error.message || \"Error of loading choosed service.\" })\r\n        } finally {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const loadMoreServices = (limit: number, page: number, companyServiceStatus: CompanyServiceStatus, order: OrderType) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        try {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: true });\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: null });\r\n            dispatch({\r\n                type: CompanyServiceActionTypes.LOAD_MORE_COMPANY_SERVICES, payload:\r\n                    await getServicesAxios(limit, page, companyServiceStatus, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: \"Error of loading services.\" })\r\n        } finally {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const setServicePage = (page: number) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const setServiceActiveFilter = (status: CompanyServiceStatus) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ACTIVE_FILTER, payload: status });\r\n    }\r\n}\r\n\r\nexport const setServiceError = (message: string) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: message });\r\n    }\r\n}\r\n\r\nexport const setServiceLoading = (isLoading: boolean) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: isLoading });\r\n    }\r\n}\r\n\r\nexport const updateServiceIsActiveStatus = (id: number, serviceToUpdate: ICompanyService) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        try {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: true });\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: null });\r\n            await updateServiceIsActiveStatusAxios(id, serviceToUpdate.isActive);\r\n            dispatch({ type: CompanyServiceActionTypes.UPDATE_COMPANY_SERVICE_ISACTIVE_STATUS, payload: serviceToUpdate });\r\n        } catch (error) {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: error.message || \"Error of updating service isActive status.\" })\r\n        } finally {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const createService = (service: ICompanyService) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        try {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: true });\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: null });\r\n            dispatch({ type: CompanyServiceActionTypes.CREATE_COMPANY_SERVICE, payload: await createServiceAxios(service) });\r\n        } catch (error) {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: error.message || \"Error while creating the service.\" })\r\n        } finally {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateService = (service: ICompanyService) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        try {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: true });\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: null });\r\n            dispatch({ type: CompanyServiceActionTypes.UPDATE_COMPANY_SERVICE, payload: await updateServiceAxios(service) });\r\n        } catch (error) {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: error.message || \"Error while updating the service.\" })\r\n        } finally {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeService = (id: number) => {\r\n    return async (dispatch: Dispatch<CompanyServiceAction>) => {\r\n        try {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: true });\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: null });\r\n            await removeServiceAxios(id);\r\n            dispatch({ type: CompanyServiceActionTypes.REMOVE_COMPANY_SERVICE, payload: id });\r\n        } catch (error) {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR, payload: error.message || \"Error while removing the service.\" })\r\n        } finally {\r\n            dispatch({ type: CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\n","import { ISearchResult } from \"./common/searchResult\";\r\n\r\nexport interface ICountry {\r\n    id: number;\r\n    name: string;\r\n    code: string;\r\n    officeDtos?: { name: string, address: string }[];\r\n}\r\n\r\nexport interface CountryState {\r\n    countrySearchResult: ISearchResult<ICountry>;\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum CountryActionTypes {\r\n    GET_COUNTRIES = \"GET_COUNTRIES\",\r\n    GET_COUNTRY_BY_ID = \"GET_COUNTRY_BY_ID\",\r\n    SET_COUNTRY_ERROR = \"SET_COUNTRY_ERROR\",\r\n    SET_COUNTRY_LOADING = \"SET_COUNTRY_LOADING\",\r\n    SET_COUNTRY_PAGE = \"SET_COUNTRY_PAGE\",\r\n    CREATE_COUNTRY = \"CREATE_COUNTRY\",\r\n    UPDATE_COUNTRY = \"UPDATE_COUNTRY\",\r\n    REMOVE_COUNTRY = \"REMOVE_COUNTRY\"\r\n}\r\n\r\ninterface GetCoutriesAction {\r\n    type: CountryActionTypes.GET_COUNTRIES;\r\n    payload: ISearchResult<ICountry>;\r\n}\r\n\r\ninterface GetCountryByIdAction {\r\n    type: CountryActionTypes.GET_COUNTRY_BY_ID;\r\n    payload: ICountry;\r\n}\r\n\r\ninterface SetCountryErrorAction {\r\n    type: CountryActionTypes.SET_COUNTRY_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetCountryLoadingAction {\r\n    type: CountryActionTypes.SET_COUNTRY_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetCountryPageAction {\r\n    type: CountryActionTypes.SET_COUNTRY_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface CreateCountryAction {\r\n    type: CountryActionTypes.CREATE_COUNTRY;\r\n    payload: ICountry;\r\n}\r\n\r\ninterface UpdateCountryAction {\r\n    type: CountryActionTypes.UPDATE_COUNTRY;\r\n    payload: ICountry;\r\n}\r\n\r\ninterface RemoveCountryAction {\r\n    type: CountryActionTypes.REMOVE_COUNTRY;\r\n    payload: number;\r\n}\r\n\r\nexport type CountryAction = GetCoutriesAction |\r\n    GetCountryByIdAction |\r\n    SetCountryErrorAction |\r\n    SetCountryLoadingAction |\r\n    SetCountryPageAction |\r\n    CreateCountryAction |\r\n    UpdateCountryAction |\r\n    RemoveCountryAction","import axios from 'axios';\r\nimport { ISearchResult } from '../types/common/searchResult';\r\nimport { OrderType } from '../types/common/orderType';\r\nimport { ICountry } from '../types/country';\r\n\r\n/**\r\n * Gets list of countries\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param sortField<string> Field for sorting, for now only by Name\r\n * @param order<OrderType> Sort direction (0 - Ascending / 1 - Descending / 2 - None)\r\n */\r\nexport async function getCountriesAxios(limit: number, page: number, sortField: string, order: OrderType): Promise<ISearchResult<ICountry>> {\r\n    return (await axios.get(`/country/get?limit=${limit}&page=${page}&sortField=${sortField}&order=${order}`)).data;\r\n}\r\n\r\n/**\r\n * Gets the object of country specified by identifier\r\n * @param id<string> Identifier\r\n * @returns<ICountry> Object of service\r\n */\r\nexport async function getCountryByIdAxios(id: number): Promise<ICountry> {\r\n    return (await axios.get(`/country/get/${id.toString()}`)).data;\r\n}\r\n\r\n/**\r\n * Creates a new Country\r\n * @param service<ICountry> Object of type ICountry\r\n * @returns<ICountry> Created Country object\r\n */\r\nexport async function createCountryAxios(country: ICountry): Promise<ICountry> {\r\n    return (await axios.post(\"/country/create\", country)).data;\r\n}\r\n\r\n/**\r\n * Updates the country\r\n * @param service<ICountry> Object of type ICountry\r\n * @returns<ICountry> Updated service object\r\n */\r\nexport async function updateCountryAxios(country: ICountry): Promise<ICountry> {\r\n    return (await axios.put(\"/country/update\", country)).data;\r\n}\r\n\r\n/**\r\n * Delete's the object of Country specified by identifier\r\n * @param id<string> Identifier\r\n */\r\nexport async function removeCountryAxios(id: number): Promise<void> {\r\n    return await axios.delete(`/country/delete/${id}`);\r\n}","import { Dispatch } from \"redux\";\r\nimport { getCountriesAxios, getCountryByIdAxios, createCountryAxios, updateCountryAxios, removeCountryAxios } from \"../../api/country\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport { ICountry, CountryAction, CountryActionTypes } from \"../../types/country\";\r\n\r\nexport const getCountries = (limit: number, page: number, sortField: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        try {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: true });\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: null });\r\n            dispatch({\r\n                type: CountryActionTypes.GET_COUNTRIES, payload:\r\n                    await getCountriesAxios(limit, page, sortField, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: error.message || \"Error of loading countries.\" })\r\n        } finally {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCountryById = (id: number) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        try {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: true });\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: null });\r\n            dispatch({ type: CountryActionTypes.GET_COUNTRY_BY_ID, payload: await getCountryByIdAxios(id) });\r\n        } catch (error) {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: error.message || \"Error of loading choosed country.\" })\r\n        } finally {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCountryError = (message: string) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: message });\r\n    }\r\n}\r\n\r\nexport const setCountryLoading = (isLoading: boolean) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: isLoading });\r\n    }\r\n}\r\n\r\nexport const setCountryPage = (page: number) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        dispatch({ type: CountryActionTypes.SET_COUNTRY_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const createCountry = (country: ICountry) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        try {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: true });\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: null });\r\n            dispatch({ type: CountryActionTypes.CREATE_COUNTRY, payload: await createCountryAxios(country) });\r\n        } catch (error) {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: error.message || \"Error while creating the country.\" })\r\n        } finally {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateCountry = (country: ICountry) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        try {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: true });\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: null });\r\n            dispatch({ type: CountryActionTypes.UPDATE_COUNTRY, payload: await updateCountryAxios(country) });\r\n        } catch (error) {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: error.message || \"Error while updating the country.\" })\r\n        } finally {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeCountry = (id: number) => {\r\n    return async (dispatch: Dispatch<CountryAction>) => {\r\n        try {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: true });\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: null });\r\n            await removeCountryAxios(id);\r\n            dispatch({ type: CountryActionTypes.REMOVE_COUNTRY, payload: id });\r\n        } catch (error) {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_ERROR, payload: error.message || \"Error while removing the country.\" })\r\n        } finally {\r\n            dispatch({ type: CountryActionTypes.SET_COUNTRY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\n","import { OfficeNameIdDto } from \"./common/officeNameIdDto\";\r\nimport { ISearchResult } from \"./common/searchResult\";\r\n\r\nexport interface IEmployee {\r\n    id: number;\r\n    fullName: string;\r\n    email: string;\r\n    position: string;\r\n    description: string;\r\n    avatarUrl: string;\r\n    officeId: number;\r\n    officeDto?: {\r\n        name: string;\r\n    }\r\n}\r\n\r\nexport interface EmployeeState {\r\n    employeeSearchResult: ISearchResult<IEmployee>;\r\n    offices: OfficeNameIdDto[];\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum EmployeeActionTypes {\r\n    GET_EMPLOYEES = \"GET_EMPLOYEES\",\r\n    LOAD_MORE_EMPLOYEES = \"LOAD_MORE_EMPLOYEES\",\r\n    SET_EMPLOYEE_ERROR = \"SET_EMPLOYEE_ERROR\",\r\n    SET_EMPLOYEE_LOADING = \"SET_EMPLOYEE_LOADING\",\r\n    SET_EMPLOYEE_PAGE = \"SET_EMPLOYEE_PAGE\",\r\n    CREATE_EMPLOYEE = \"CREATE_EMPLOYEE\",\r\n    UPDATE_EMPLOYEE = \"UPDATE_EMPLOYEE\",\r\n    REMOVE_EMPLOYEE = \"REMOVE_EMPLOYEE\"\r\n}\r\n\r\ninterface GetEmployeesAction {\r\n    type: EmployeeActionTypes.GET_EMPLOYEES;\r\n    payload: ISearchResult<IEmployee>;\r\n}\r\n\r\ninterface LoadMoreEmployeesAction {\r\n    type: EmployeeActionTypes.LOAD_MORE_EMPLOYEES;\r\n    payload: ISearchResult<IEmployee>;\r\n}\r\n\r\ninterface SetErrorEmployeeAction {\r\n    type: EmployeeActionTypes.SET_EMPLOYEE_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetLoadingEmployeeAction {\r\n    type: EmployeeActionTypes.SET_EMPLOYEE_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetPageEmployeeAction {\r\n    type: EmployeeActionTypes.SET_EMPLOYEE_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface CreateCompanyService {\r\n    type: EmployeeActionTypes.CREATE_EMPLOYEE;\r\n    payload: IEmployee;\r\n}\r\n\r\ninterface UpdateCompanyService {\r\n    type: EmployeeActionTypes.UPDATE_EMPLOYEE;\r\n    payload: IEmployee;\r\n}\r\n\r\ninterface RemoveEmployee {\r\n    type: EmployeeActionTypes.REMOVE_EMPLOYEE;\r\n    payload: number;\r\n}\r\n\r\nexport type EmployeeAction = \r\nGetEmployeesAction | \r\nLoadMoreEmployeesAction | \r\nSetErrorEmployeeAction | \r\nSetLoadingEmployeeAction | \r\nSetPageEmployeeAction |\r\nCreateCompanyService |\r\nUpdateCompanyService |\r\nRemoveEmployee\r\n","import axios from 'axios';\r\nimport { IEmployee } from '../types/employee';\r\nimport { OrderType } from '../types/common/orderType';\r\nimport { ISearchResult } from '../types/common/searchResult';\r\n\r\n/**\r\n * Get list of services\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param search<string> Search text\r\n * @param sortField<string> Field name for sorting\r\n * @param order<OrderType> Sort direction: 0 - Ascending or 1 - Descending, 2 - None\r\n * @returns<ISearchResult> SearchResult: List of Employees and pagination options\r\n */\r\nexport async function getEmployeesAxios(limit: number, page: number, search: string, sortField: string, order: OrderType): Promise<ISearchResult<IEmployee>> {\r\n    return (await axios.get(`/employee/get?limit=${limit}&page=${page}&search=${search}&sortfield=${sortField}&order=${order}`)).data;\r\n}\r\n\r\n/**\r\n * Creates a new employee\r\n * @param service<IEmployee> object of type IEmployee\r\n * @returns<IEmployee> created employee object\r\n */\r\nexport async function createEmployeeAxios(employee: IEmployee): Promise<IEmployee> {\r\n    return (await axios.post(\"/employee/create\", employee)).data;\r\n}\r\n\r\n/**\r\n * Updates employee\r\n * @param service<IEmployee> object of type IEmployee\r\n * @returns<IEmployee> updated employee object\r\n */\r\nexport async function updateEmployeeAxios(employee: IEmployee): Promise<IEmployee> {\r\n    return (await axios.put(\"/employee/update\", employee)).data;\r\n}\r\n\r\n/**\r\n * Delete's the employee object specified by identifier\r\n * @param id<string> identifier\r\n */\r\nexport async function removeEmployeeAxios(id: number): Promise<void> {\r\n    return await axios.delete(`/employee/delete/${id.toString()}`);\r\n}\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { createEmployeeAxios, getEmployeesAxios, removeEmployeeAxios, updateEmployeeAxios } from \"../../api/employee\";\r\nimport { EmployeeAction, EmployeeActionTypes, IEmployee } from \"../../types/employee\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\n\r\n\r\nexport const getEmployees = (limit: number, page: number, search: string, sortField: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<EmployeeAction>) => {\r\n        try {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: true });\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: null });\r\n            dispatch({ type: EmployeeActionTypes.GET_EMPLOYEES, payload: await getEmployeesAxios(limit, page, search, sortField, order) });\r\n        } catch (error) {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: error.message || \"Error of loading employees.\" })\r\n        } finally {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const loadMoreEmployees = (limit: number, page: number, search: string, sortField: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<EmployeeAction>) => {\r\n        try {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: true });\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: null });\r\n            dispatch({ type: EmployeeActionTypes.LOAD_MORE_EMPLOYEES, payload: await getEmployeesAxios(limit, page, search, sortField, order) });\r\n        } catch (error) {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: error.message || \"Error of loading employees.\" })\r\n        } finally {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const setEmployeePage = (page: number) => {\r\n    return async (dispatch: Dispatch<EmployeeAction>) => {\r\n        dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const createEmployee = (employee: IEmployee) => {\r\n    return async (dispatch: Dispatch<EmployeeAction>) => {\r\n        try {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: true });\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: null });\r\n            dispatch({ type: EmployeeActionTypes.CREATE_EMPLOYEE, payload: await createEmployeeAxios(employee) });\r\n        } catch (error) {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: error.message || \"Error while creating the Employee.\" })\r\n        } finally {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateEmployee = (employee: IEmployee) => {\r\n    return async (dispatch: Dispatch<EmployeeAction>) => {\r\n        try {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: true });\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: null });\r\n            dispatch({ type: EmployeeActionTypes.UPDATE_EMPLOYEE, payload: await updateEmployeeAxios(employee) });\r\n        } catch (error) {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: error.message || \"Error while updating the Employee.\" })\r\n        } finally {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\nexport const removeEmployee = (id: number) => {\r\n    return async (dispatch: Dispatch<EmployeeAction>) => {\r\n        try {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: true });\r\n            await removeEmployeeAxios(id);\r\n            dispatch({ type: EmployeeActionTypes.REMOVE_EMPLOYEE, payload: id });\r\n        } catch (error) {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_ERROR, payload: error.message || \"Error while removing the service.\" })\r\n        } finally {\r\n            dispatch({ type: EmployeeActionTypes.SET_EMPLOYEE_LOADING, payload: false });\r\n        }\r\n    }\r\n}","import { ISearchResult } from \"./common/searchResult\";\r\nimport { IVacancy } from \"./vacancy\";\r\n\r\nexport interface FavoriteVacancyState {\r\n    favoriteVacancySearchResult: ISearchResult<IVacancy>;\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum FavoriteVacancyActionTypes {\r\n    GET_FAVORITE_VACANCIES = \"GET_FAVORITE_VACANCIES\",\r\n    LOAD_MORE_FAVORITE_VACANCIES = \"LOAD_MORE_FAVORITE_VACANCIES\",\r\n    SET_FAVORITE_VACANCY_ERROR = \"SET_FAVORITE_VACANCY_ERROR\",\r\n    SET_FAVORITE_VACANCY_LOADING = \"SET_FAVORITE_VACANCY_LOADING\",\r\n    SET_FAVORITE_VACANCY_PAGE = \"SET_FAVORITE_VACANCY_PAGE\",\r\n    INCREMENT_PREVIEWS_FAVORITE_VACANCIES = \"INCREMENT_PREVIEWS_FAVORITE_VACANCIES\",\r\n    UPDATE_FAVORITE_VACANCY_STATUS = \"UPDATE_FAVORITE_VACANCY_STATUS\"\r\n}\r\n\r\ninterface GetFavoriteVacanciesAction {\r\n    type: FavoriteVacancyActionTypes.GET_FAVORITE_VACANCIES;\r\n    payload: ISearchResult<IVacancy>;\r\n}\r\n\r\ninterface LoadMoreFavoriteVacanciesAction {\r\n    type: FavoriteVacancyActionTypes.LOAD_MORE_FAVORITE_VACANCIES;\r\n    payload: ISearchResult<IVacancy>;\r\n}\r\n\r\ninterface SetErrorFavoriteVacancyAction {\r\n    type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetLoadingFavoriteVacancyAction {\r\n    type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetPageFavoriteVacancyAction {\r\n    type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface UpdateFavoriteVacancyStatus {\r\n    type: FavoriteVacancyActionTypes.UPDATE_FAVORITE_VACANCY_STATUS;\r\n    payload: number;\r\n}\r\n\r\nexport type FavoriteVacancyAction = GetFavoriteVacanciesAction |\r\n    LoadMoreFavoriteVacanciesAction |\r\n    SetErrorFavoriteVacancyAction |\r\n    SetLoadingFavoriteVacancyAction |\r\n    SetPageFavoriteVacancyAction |\r\n    UpdateFavoriteVacancyStatus","import axios from 'axios';\r\nimport { IVacancy, VacancyStatus, VacancyTitleDto } from '../types/vacancy';\r\nimport { ISearchResult } from '../types/common/searchResult';\r\nimport { OrderType } from '../types/common/orderType';\r\n\r\n/**\r\n * Get list of vacancies for current office\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param search<string> Autocompleted search\r\n * @param vacancyStatus<VacancyStatus> Means Active / Disabled / All vacancy 'isActive' status\r\n * @param officeId<string> Choosed office\r\n * @param sortField<string> Field for sorting\r\n * @param order<OrderType> Sort direction (Ascending / Descending / None)\r\n */\r\nexport async function getVacanciesAxios(\r\n    limit: number,\r\n    page: number,\r\n    search: string,\r\n    vacancyStatus: VacancyStatus,\r\n    officeId: string,\r\n    sortField: string,\r\n    order: OrderType): Promise<ISearchResult<IVacancy>> {\r\n    return (\r\n        await axios.get(`/vacancy/get?limit=${limit}&page=${page}&search=${search}&vacancyStatus=${vacancyStatus.toString()}&officeId=${officeId}&sortField=${sortField}&order=${order}`)).data;\r\n}\r\n\r\n/**\r\n * Get list of vacancies for current office\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param email<string> Candidate email\r\n * @param order<OrderType> Sort direction (Ascending / Descending / None)\r\n */\r\nexport async function getFavoriteVacanciesAxios(\r\n    limit: number,\r\n    page: number,\r\n    email: string,\r\n    order: OrderType): Promise<ISearchResult<IVacancy>> {\r\n    return (\r\n        await axios.get(`/vacancy/getfavorite?limit=${limit}&page=${page}&email=${email}&order=${order}`)).data;\r\n}\r\n\r\n/**\r\n * Get vacancy specified by identifier\r\n * @param id<string> Vacancy identifier\r\n */\r\nexport async function getVacancyByIdAxios(id: number): Promise<IVacancy> {\r\n    return (await axios.get(`/vacancy/get/${id.toString()}`)).data;\r\n}\r\n\r\n/**\r\n * Get sorted list of all vacancies titles\r\n * @param searchValue<string> Search paremeter\r\n * @param officeId<string> Identifier of the office which vacancy belongs. If it's '' in request query - means all offices.\r\n */\r\nexport async function searchVacanciesTitlesAxios(searchValue: string, officeId: string): Promise<VacancyTitleDto[]> {\r\n    return (await axios.get(`/vacancy/searchvacanciestitles?searchValue=${searchValue}&officeId=${officeId}`)).data;\r\n}\r\n\r\n/**\r\n * @param id<string> Vacancy identifier\r\n * @param number<string> Previews amount\r\n */\r\nexport async function incrementPreviewsAxios(id: number, number: number): Promise<void> {\r\n    await axios.patch(`/vacancy/partialvacancyupdate/${id}`, [{ op: \"replace\", path: \"/previews\", value: number }]);\r\n}\r\n\r\n/**\r\n * @param id<string> Vacancy identifier\r\n * @param isActive<boolean> Vacancy status\r\n */\r\nexport async function updateVacancyIsActiveStatusAxios(id: number, isActive: boolean): Promise<void> {\r\n    await axios.patch(`/vacancy/partialvacancyupdate/${id}`, [{ op: \"replace\", path: \"/isactive\", value: isActive }]);\r\n}\r\n\r\n/**\r\n * Creates a new vacancy\r\n * @param vacancy<IVacancy> object of type IVacancy\r\n * @returns<IVacancy> Created vacancy\r\n */\r\nexport async function createVacancyAxios(vacancy: IVacancy): Promise<IVacancy> {\r\n    return (await axios.post(\"/vacancy/create\", vacancy)).data;\r\n}\r\n\r\n/**\r\n * Updates the existing vacancy\r\n * @param vacancy<IVacancy> Object of type IVacancy\r\n * @returns<IVacancy> Updated vacancy object\r\n */\r\nexport async function updateVacancyAxios(vacancy: IVacancy): Promise<IVacancy> {\r\n    return (await axios.put(\"/vacancy/update\", vacancy)).data;\r\n}\r\n\r\n/**\r\n * Delete's the 'Vacancy' object specified by identifier\r\n * @param id<string> Identifier\r\n */\r\nexport async function removeVacancyAxios(id: number): Promise<void> {\r\n    return await axios.delete(`/vacancy/delete/${id}`);\r\n}","import { Dispatch } from \"redux\";\r\nimport { removeCandidateAxios } from \"../../api/candidate\";\r\nimport { getFavoriteVacanciesAxios } from \"../../api/vacancy\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport { FavoriteVacancyAction, FavoriteVacancyActionTypes } from \"../../types/favoriteVacancy\";\r\n\r\nexport const getFavoriteVacancies = (limit: number, page: number, email: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<FavoriteVacancyAction>) => {\r\n        try {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR, payload: null });\r\n            dispatch({\r\n                type: FavoriteVacancyActionTypes.GET_FAVORITE_VACANCIES, payload:\r\n                    await getFavoriteVacanciesAxios(limit, page, email, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR, payload: error.message || \"Error of loading favorite vacancies.\" })\r\n        } finally {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const loadMoreFavoriteVacancies = (limit: number, page: number, email: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<FavoriteVacancyAction>) => {\r\n        try {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR, payload: null });\r\n            dispatch({\r\n                type: FavoriteVacancyActionTypes.LOAD_MORE_FAVORITE_VACANCIES, payload:\r\n                    await getFavoriteVacanciesAxios(limit, page, email, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR, payload: error.message || \"Error of loading favorite vacancies.\" })\r\n        } finally {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Sets current page for favorite vacancies store\r\n * @param page<number> current page\r\n */\r\nexport const setFavoriteVacancyPage = (page: number) => {\r\n    return async (dispatch: Dispatch<FavoriteVacancyAction>) => {\r\n        dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const setFavoriteVacancyLoading = (isLoading: boolean) => {\r\n    return async (dispatch: Dispatch<FavoriteVacancyAction>) => {\r\n        dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING, payload: isLoading });\r\n    }\r\n}\r\n\r\n/**\r\n * Removes candidate for current vacancy\r\n * @param candidateId \r\n * @returns void\r\n */\r\nexport const updateFavoriteVacancyStatus = (candidateId: number) => {\r\n    return async (dispatch: Dispatch<FavoriteVacancyAction>) => {\r\n        try {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR, payload: null });\r\n            await removeCandidateAxios(candidateId);\r\n            dispatch({ type: FavoriteVacancyActionTypes.UPDATE_FAVORITE_VACANCY_STATUS, payload: candidateId });\r\n        } catch (error) {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR, payload: error.message || \"Error of updating favorite vacancy status.\" })\r\n        } finally {\r\n            dispatch({ type: FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n","import { ISearchResult } from \"./common/searchResult\";\r\nimport { ICountry } from \"./country\";\r\nimport { IVacancy } from \"./vacancy\";\r\n\r\nexport interface IOffice {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    address: string;\r\n    latitude: number;\r\n    longitude: number;\r\n    countryId: number;\r\n    countryDto?: ICountry;\r\n    vacancyDtos?: IVacancy[];\r\n}\r\n\r\nexport interface OfficeState {\r\n    officeSearchResult: ISearchResult<IOffice>;\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum OfficeActionTypes {\r\n    GET_OFFICES = \"GET_OFFICES\",\r\n    GET_OFFICE_BY_ID = \"GET_OFFICE_BY_ID\",\r\n    SET_OFFICE_ERROR = \"SET_OFFICE_ERROR\",\r\n    SET_OFFICE_LOADING = \"SET_OFFICE_LOADING\",\r\n    SET_OFFICE_PAGE = \"SET_OFFICE_PAGE\",\r\n    CREATE_OFFICE = \"CREATE_OFFICE\",\r\n    UPDATE_OFFICE = \"UPDATE_OFFICE\",\r\n    REMOVE_OFFICE = \"REMOVE_OFFICE\"\r\n}\r\n\r\ninterface GetOfficesAction {\r\n    type: OfficeActionTypes.GET_OFFICES;\r\n    payload: ISearchResult<IOffice>;\r\n}\r\n\r\ninterface GetOfficeByIdAction {\r\n    type: OfficeActionTypes.GET_OFFICE_BY_ID;\r\n    payload: IOffice;\r\n}\r\n\r\ninterface SetOfficeErrorAction {\r\n    type: OfficeActionTypes.SET_OFFICE_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetOfficeLoadingAction {\r\n    type: OfficeActionTypes.SET_OFFICE_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetOfficePageAction {\r\n    type: OfficeActionTypes.SET_OFFICE_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface CreateOfficeAction {\r\n    type: OfficeActionTypes.CREATE_OFFICE;\r\n    payload: IOffice;\r\n}\r\n\r\ninterface UpdateOfficeAction {\r\n    type: OfficeActionTypes.UPDATE_OFFICE;\r\n    payload: IOffice;\r\n}\r\n\r\ninterface RemoveOfficeAction {\r\n    type: OfficeActionTypes.REMOVE_OFFICE;\r\n    payload: number;\r\n}\r\n\r\nexport type OfficeAction = GetOfficesAction |\r\n    GetOfficeByIdAction |\r\n    SetOfficeErrorAction |\r\n    SetOfficeLoadingAction |\r\n    SetOfficePageAction |\r\n    CreateOfficeAction |\r\n    UpdateOfficeAction |\r\n    RemoveOfficeAction","import axios from 'axios';\r\nimport { OfficeNameIdDto } from '../types/common/officeNameIdDto';\r\nimport { OrderType } from '../types/common/orderType';\r\nimport { ISearchResult } from '../types/common/searchResult';\r\nimport { IOffice } from '../types/office';\r\n\r\n/**\r\n * Gets list of offices with pagination properties\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param sortField<string> Field for sorting, for now only by Name\r\n * @param order<OrderType> Sort direction (0 - Ascending / 1 - Descending / 2 - None)\r\n */\r\nexport async function getOfficesAxios(limit: number, page: number, sortField: string, order: OrderType): Promise<ISearchResult<IOffice>> {\r\n    return (await axios.get(`/office/get?limit=${limit}&page=${page}&sortField=${sortField}&order=${order}`)).data;\r\n}\r\n\r\n/**\r\n * Gets list of OfficeNameIdDto's\r\n * @returns<OfficeNameIdDto[]> Array of OfficeNameIdDto object\r\n */\r\nexport async function getOfficeNameIdsAxios(): Promise<OfficeNameIdDto[]> {\r\n    return (await axios.get(\"/office/getofficenameids\")).data;\r\n}\r\n\r\n/**\r\n * Gets the object of Office specified by identifier\r\n * @param id<string> Identifier\r\n * @returns<IOffice> Object of office\r\n */\r\nexport async function getOfficeByIdAxios(id: number): Promise<IOffice> {\r\n    return (await axios.get(`/office/get/${id.toString()}`)).data;\r\n}\r\n\r\n/**\r\n * Creates a new office\r\n * @param office<IOffice> Object of type IOffice\r\n * @returns<IOffice> Created office object\r\n */\r\nexport async function createOfficeAxios(office: IOffice): Promise<IOffice> {\r\n    return (await axios.post(\"/office/create\", office)).data;\r\n}\r\n\r\n/**\r\n * Updates the office\r\n * @param office<IOffice> Object of type IOffice\r\n * @returns<IOffice> Updated service object\r\n */\r\nexport async function updateOfficeAxios(office: IOffice): Promise<IOffice> {\r\n    return (await axios.put(\"/office/update\", office)).data;\r\n}\r\n\r\n/**\r\n * Delete's the object of office specified by identifier\r\n * @param id<string> Identifier\r\n */\r\nexport async function removeOfficeAxios(id: number): Promise<void> {\r\n    return await axios.delete(`/Office/delete/${id}`);\r\n}","import { Dispatch } from \"redux\";\r\nimport { getOfficesAxios, getOfficeByIdAxios, createOfficeAxios, updateOfficeAxios, removeOfficeAxios } from \"../../api/office\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport { IOffice, OfficeAction, OfficeActionTypes } from \"../../types/office\";\r\n\r\nexport const getOffices = (limit: number, page: number, sortField: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        try {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: true });\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: null });\r\n            dispatch({\r\n                type: OfficeActionTypes.GET_OFFICES, payload:\r\n                    await getOfficesAxios(limit, page, sortField, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: error.message || \"Error of loading offices.\" })\r\n        } finally {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getOfficeById = (id: number) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        try {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: true });\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: null });\r\n            dispatch({ type: OfficeActionTypes.GET_OFFICE_BY_ID, payload: await getOfficeByIdAxios(id) });\r\n        } catch (error) {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: error.message || \"Error of loading choosed office.\" })\r\n        } finally {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const setOfficeError = (message: string) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: message });\r\n    }\r\n}\r\n\r\nexport const setOfficeLoading = (isLoading: boolean) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: isLoading });\r\n    }\r\n}\r\n\r\nexport const setOfficePage = (page: number) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        dispatch({ type: OfficeActionTypes.SET_OFFICE_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const createOffice = (office: IOffice) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        try {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: true });\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: null });\r\n            dispatch({ type: OfficeActionTypes.CREATE_OFFICE, payload: await createOfficeAxios(office) });\r\n        } catch (error) {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: error.message || \"Error while creating the office.\" })\r\n        } finally {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateOffice = (office: IOffice) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        try {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: true });\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: null });\r\n            dispatch({ type: OfficeActionTypes.UPDATE_OFFICE, payload: await updateOfficeAxios(office) });\r\n        } catch (error) {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: error.message || \"Error while updating the office.\" })\r\n        } finally {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeOffice = (id: number) => {\r\n    return async (dispatch: Dispatch<OfficeAction>) => {\r\n        try {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: true });\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: null });\r\n            await removeOfficeAxios(id);\r\n            dispatch({ type: OfficeActionTypes.REMOVE_OFFICE, payload: id });\r\n        } catch (error) {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_ERROR, payload: error.message || \"Error while removing the office.\" })\r\n        } finally {\r\n            dispatch({ type: OfficeActionTypes.SET_OFFICE_LOADING, payload: false });\r\n        }\r\n    }\r\n}","import { ISearchResult } from \"./common/searchResult\";\r\n\r\nexport interface IUser {\r\n    id: string;\r\n    userName: string;\r\n    email: string;\r\n    emailConfirmed: boolean;\r\n    phoneNumber?: string;\r\n    avatarUrl?: string;\r\n}\r\n\r\nexport interface UserFilters {\r\n    searchInUserName: string;\r\n}\r\n\r\nexport interface UserState {\r\n    userSearchResult: ISearchResult<IUser>;\r\n    filters: UserFilters;\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum UserActionTypes {\r\n    GET_USERS = \"GET_All_USERS\",\r\n    UPDATE_USER_EMAILCONFIRMED_STATUS = \"UPDATE_USER_EMAILCONFIRMED_STATUS\",\r\n    SET_USER_SEARCH_CRITERIA = \"SET_USER_SEARCH_CRITERIA\",\r\n    SET_USER_PAGE = \"SET_USER_PAGE\",\r\n    SET_USER_ERROR = \"SET_USER_ERROR\",\r\n    SET_USER_LOADING = \"SET_USER_LOADING\"\r\n}\r\n\r\ninterface GetUsersAction {\r\n    type: UserActionTypes.GET_USERS;\r\n    payload: ISearchResult<IUser>;\r\n}\r\n\r\ninterface UpdateUserEmailConfirmedStatusAction {\r\n    type: UserActionTypes.UPDATE_USER_EMAILCONFIRMED_STATUS;\r\n    payload: IUser;\r\n}\r\n\r\ninterface SetUserSearchCriteriaAction {\r\n    type: UserActionTypes.SET_USER_SEARCH_CRITERIA;\r\n    payload: string;\r\n}\r\n\r\ninterface SetUserPagesAction {\r\n    type: UserActionTypes.SET_USER_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface SetUserErrorAction {\r\n    type: UserActionTypes.SET_USER_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetUserLoadingAction {\r\n    type: UserActionTypes.SET_USER_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\nexport type UserAction = GetUsersAction |\r\n    UpdateUserEmailConfirmedStatusAction |\r\n    SetUserSearchCriteriaAction |\r\n    SetUserPagesAction |\r\n    SetUserErrorAction |\r\n    SetUserLoadingAction\r\n","import axios from 'axios';\r\nimport { ISearchResult } from '../types/common/searchResult';\r\nimport { IUser } from '../types/user';\r\n\r\n/**\r\n * Get list of candidates\r\n * @param limit<number> Page size\r\n * @param page<number> Current page\r\n * @param search<string> Search text for candadate full name\r\n */\r\nexport async function getUsersAxios(limit: number, page: number, search: string): Promise<ISearchResult<IUser>> {\r\n    return (await axios.get(`/account/get?limit=${limit}&page=${page}&search=${search}`)).data;\r\n}\r\n\r\n/**\r\n * @param id<string> User identifier\r\n * @param confirmed<boolean> User's emailConfirmed status\r\n */\r\nexport async function updateUserEmailConfirmedStatusAxios(id: string, confirmed: boolean): Promise<void> {\r\n    await axios.patch(`/account/partialuserupdate/${id}`, [{ op: \"replace\", path: \"/emailConfirmed\", value: confirmed }]);\r\n}\r\n\r\n/**\r\n * Updates the existing user\r\n * @param user<IUser> Object of type IUser\r\n * @returns<IUser> Updated user object\r\n */\r\nexport async function updateUserAxios(user: IUser): Promise<IUser> {\r\n    return (await axios.post(\"/account/update\", user)).data;\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { getUsersAxios, updateUserEmailConfirmedStatusAxios } from \"../../api/user\";\r\nimport { IUser, UserAction, UserActionTypes, UserFilters } from \"../../types/user\"\r\n\r\nexport const getUsers = (limit: number, page: number, filters: UserFilters) => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n            dispatch({ type: UserActionTypes.SET_USER_LOADING, payload: true });\r\n            dispatch({ type: UserActionTypes.SET_USER_ERROR, payload: null });\r\n            dispatch({ type: UserActionTypes.GET_USERS, payload: await getUsersAxios(limit, page, filters.searchInUserName) });\r\n        } catch (error) {\r\n            dispatch({ type: UserActionTypes.SET_USER_ERROR, payload: error.message || \"Error of loading users.\" })\r\n        } finally {\r\n            dispatch({ type: UserActionTypes.SET_USER_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserEmailConfirmedStatus = (id: string, userToUpdate: IUser) => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n            dispatch({ type: UserActionTypes.SET_USER_LOADING, payload: true });\r\n            dispatch({ type: UserActionTypes.SET_USER_ERROR, payload: null });\r\n            await updateUserEmailConfirmedStatusAxios(id, userToUpdate.emailConfirmed);\r\n            dispatch({ type: UserActionTypes.UPDATE_USER_EMAILCONFIRMED_STATUS, payload: userToUpdate });\r\n        } catch (error) {\r\n            dispatch({ type: UserActionTypes.SET_USER_ERROR, payload: error.message || \"Error of updating user EmailConfirmed status.\" })\r\n        } finally {\r\n            dispatch({ type: UserActionTypes.SET_USER_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUserSearchCriteria = (search: string) => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        dispatch({ type: UserActionTypes.SET_USER_SEARCH_CRITERIA, payload: search });\r\n    }\r\n}\r\n\r\nexport const setUserPage = (page: number) => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        dispatch({ type: UserActionTypes.SET_USER_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const setUserError = (message: string) => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        dispatch({ type: UserActionTypes.SET_USER_ERROR, payload: message });\r\n    }\r\n}\r\n","import { OfficeNameIdDto } from \"./common/officeNameIdDto\";\r\nimport { ISearchResult } from \"./common/searchResult\";\r\n\r\nexport interface IVacancy {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    previews: number;\r\n    isActive: boolean;\r\n    officeId: number;\r\n    candidates?: { id: number, fullName: string, email: string, isDismissed: boolean }[];\r\n    officeDto?: {\r\n        name: string;\r\n        address: string;\r\n    }\r\n}\r\n\r\nexport enum VacancyStatus {\r\n    Active,\r\n    Disabled,\r\n    All\r\n}\r\n\r\nexport interface VacancyFilters {\r\n    active: VacancyStatus;\r\n    officeId: string;\r\n    searchInTitle: string;\r\n}\r\n\r\nexport interface VacancyTitleDto {\r\n    value: string;\r\n}\r\n\r\nexport interface VacancyState {\r\n    vacancySearchResult: ISearchResult<IVacancy>;\r\n    filters: VacancyFilters;\r\n    offices: OfficeNameIdDto[];\r\n    titles: VacancyTitleDto[];\r\n    loadingFilters: boolean;\r\n    errorFilters: null | string;\r\n    loadingVacancies: boolean;\r\n    errorVacancies: null | string;\r\n}\r\n\r\nexport enum VacancyActionTypes {\r\n    GET_VACANCIES = \"GET_VACANCIES\",\r\n    LOAD_MORE_VACANCIES = \"LOAD_MORE_VACANCIES\",\r\n    SET_VACANCY_ERROR = \"SET_VACANCY_ERROR\",\r\n    SET_VACANCY_LOADING = \"SET_VACANCY_LOADING\",\r\n    SET_FILTERS_ERROR = \"SET_FILTERS_ERROR\",\r\n    SET_FILTERS_LOADING = \"SET_FILTERS_LOADING\",\r\n    SET_VACANCY_PAGE = \"SET_VACANCY_PAGE\",\r\n    SET_VACANCY_ACTIVE_FILTER = \"SET_VACANCY_ACTIVE_FILTER\",\r\n    SET_VACANCY_OFFICE_FILTER = \"SET_VACANCY_OFFICE_FILTER\",\r\n    SET_VACANCY_SEARCH_CRITERIA = \"SET_VACANCY_SEARCH_CRITERIA\",\r\n    SET_VACANCY_OFFICES = \"SET_VACANCY_OFFICES\",\r\n    SET_VACANCIES_TITLES = \"SET_VACANCIES_TITLES\",\r\n    INCREMENT_PREVIEWS = \"INCREMENT_PREVIEWS\",\r\n    UPDATE_VACANCY_ISACTIVE_STATUS = \"UPDATE_VACANCY_ISACTIVE_STATUS\",\r\n    CREATE_VACANCY = \"CREATE_VACANCY\",\r\n    UPDATE_VACANCY = \"UPDATE_VACANCY\",\r\n    REMOVE_VACANCY = \"REMOVE_VACANCY\"\r\n}\r\n\r\ninterface GetVacanciesAction {\r\n    type: VacancyActionTypes.GET_VACANCIES;\r\n    payload: ISearchResult<IVacancy>;\r\n}\r\n\r\ninterface LoadMoreVacanciesAction {\r\n    type: VacancyActionTypes.LOAD_MORE_VACANCIES;\r\n    payload: ISearchResult<IVacancy>;\r\n}\r\n\r\ninterface SetErrorVacancyAction {\r\n    type: VacancyActionTypes.SET_VACANCY_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetLoadingVacancyAction {\r\n    type: VacancyActionTypes.SET_VACANCY_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetFiltersErrorAction {\r\n    type: VacancyActionTypes.SET_FILTERS_ERROR;\r\n    payload: null | string;\r\n}\r\n\r\ninterface SetFiltersLoadingAction {\r\n    type: VacancyActionTypes.SET_FILTERS_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetPageVacancyAction {\r\n    type: VacancyActionTypes.SET_VACANCY_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface SetVacancyActiveFilterAction {\r\n    type: VacancyActionTypes.SET_VACANCY_ACTIVE_FILTER;\r\n    payload: VacancyStatus;\r\n}\r\n\r\ninterface SetVacancyOfficeFilterAction {\r\n    type: VacancyActionTypes.SET_VACANCY_OFFICE_FILTER;\r\n    payload: string;\r\n}\r\n\r\ninterface SetVacancySearchCriteriaAction {\r\n    type: VacancyActionTypes.SET_VACANCY_SEARCH_CRITERIA;\r\n    payload: string;\r\n}\r\n\r\ninterface SetVacancyOfficesAction {\r\n    type: VacancyActionTypes.SET_VACANCY_OFFICES;\r\n    payload: OfficeNameIdDto[];\r\n}\r\n\r\ninterface SetVacanciesTitlesAction {\r\n    type: VacancyActionTypes.SET_VACANCIES_TITLES;\r\n    payload: VacancyTitleDto[];\r\n}\r\n\r\ninterface IncrementPreviewsAction {\r\n    type: VacancyActionTypes.INCREMENT_PREVIEWS;\r\n    payload: number;\r\n}\r\n\r\ninterface UpdateVacancyIsActiveStatus {\r\n    type: VacancyActionTypes.UPDATE_VACANCY_ISACTIVE_STATUS;\r\n    payload: IVacancy;\r\n}\r\n\r\ninterface CreateVacancy {\r\n    type: VacancyActionTypes.CREATE_VACANCY;\r\n    payload: IVacancy;\r\n}\r\n\r\ninterface UpdateVacancy {\r\n    type: VacancyActionTypes.UPDATE_VACANCY;\r\n    payload: IVacancy;\r\n}\r\n\r\ninterface RemoveVacancy {\r\n    type: VacancyActionTypes.REMOVE_VACANCY;\r\n    payload: number;\r\n}\r\n\r\nexport type VacancyAction = GetVacanciesAction |\r\n    LoadMoreVacanciesAction |\r\n    SetErrorVacancyAction |\r\n    SetLoadingVacancyAction |\r\n    SetFiltersErrorAction |\r\n    SetFiltersLoadingAction |\r\n    SetPageVacancyAction |\r\n    SetVacancyActiveFilterAction |\r\n    SetVacancyOfficeFilterAction |\r\n    SetVacancySearchCriteriaAction |\r\n    SetVacancyOfficesAction |\r\n    SetVacanciesTitlesAction |\r\n    IncrementPreviewsAction |\r\n    UpdateVacancyIsActiveStatus |\r\n    CreateVacancy |\r\n    UpdateVacancy |\r\n    RemoveVacancy\r\n","import { Dispatch } from \"redux\";\r\nimport { getOfficeNameIdsAxios } from \"../../api/office\";\r\nimport { createVacancyAxios, getVacanciesAxios, incrementPreviewsAxios, removeVacancyAxios, searchVacanciesTitlesAxios, updateVacancyAxios, updateVacancyIsActiveStatusAxios } from \"../../api/vacancy\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport { IVacancy, VacancyAction, VacancyActionTypes, VacancyStatus } from \"../../types/vacancy\";\r\n\r\nexport const getVacancies = (limit: number, page: number, search: string, vacancyStatus: VacancyStatus, officeId: string, sortField: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            dispatch({\r\n                type: VacancyActionTypes.GET_VACANCIES, payload:\r\n                    await getVacanciesAxios(limit, page, search, vacancyStatus, officeId, sortField, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error of loading vacancies.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getOfficeNameIdDtos = () => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_FILTERS_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_FILTERS_ERROR, payload: null });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_OFFICES, payload: await getOfficeNameIdsAxios() });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_FILTERS_ERROR, payload: error.message || \"Error of loading offices.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_FILTERS_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getVacanciesTitles = (search: string, officeId: string) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            \r\n            dispatch({ type: VacancyActionTypes.SET_VACANCIES_TITLES, payload: await searchVacanciesTitlesAxios(search, officeId) });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error of loading vacancies titles.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const loadMoreVacancies = (limit: number, page: number, search: string, vacancyStatus: VacancyStatus, officeId: string, sortField: string, order: OrderType) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            dispatch({\r\n                type: VacancyActionTypes.LOAD_MORE_VACANCIES, payload:\r\n                    await getVacanciesAxios(limit, page, search, vacancyStatus, officeId, sortField, order)\r\n            });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error of loading vacancies.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Sets current page for vacancies store\r\n * @param page<number> current page\r\n */\r\nexport const setVacancyPage = (page: number) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        dispatch({ type: VacancyActionTypes.SET_VACANCY_PAGE, payload: page });\r\n    }\r\n}\r\n\r\nexport const setVacancyActiveFilter = (active: VacancyStatus) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        dispatch({ type: VacancyActionTypes.SET_VACANCY_ACTIVE_FILTER, payload: active });\r\n    }\r\n}\r\n\r\nexport const setVacancyLoading = (isLoading: boolean) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: isLoading });\r\n    }\r\n}\r\n\r\nexport const setVacancyOfficeFilter = (officeId: string) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        dispatch({ type: VacancyActionTypes.SET_VACANCY_OFFICE_FILTER, payload: officeId });\r\n    }\r\n}\r\n\r\nexport const setVacancySearchCriteria = (search: string) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        dispatch({ type: VacancyActionTypes.SET_VACANCY_SEARCH_CRITERIA, payload: search });\r\n    }\r\n}\r\n\r\nexport const incrementPreviews = (id: number, number: number) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            await incrementPreviewsAxios(id, number);\r\n            dispatch({ type: VacancyActionTypes.INCREMENT_PREVIEWS, payload: number });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error of incrementing previews for the vacancy.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateVacancyIsActiveStatus = (id: number, vacancyToUpdate: IVacancy) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            await updateVacancyIsActiveStatusAxios(id, vacancyToUpdate.isActive);\r\n            dispatch({ type: VacancyActionTypes.UPDATE_VACANCY_ISACTIVE_STATUS, payload: vacancyToUpdate });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error of updating vacancy isActive status.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const createVacancy = (vacancy: IVacancy) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            dispatch({ type: VacancyActionTypes.CREATE_VACANCY, payload: await createVacancyAxios(vacancy) });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error while creating the vacancy.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateVacancy = (vacancy: IVacancy) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            dispatch({ type: VacancyActionTypes.UPDATE_VACANCY, payload: await updateVacancyAxios(vacancy) });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error while updating the vacancy.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeVacancy = (id: number) => {\r\n    return async (dispatch: Dispatch<VacancyAction>) => {\r\n        try {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: true });\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: null });\r\n            await removeVacancyAxios(id);\r\n            dispatch({ type: VacancyActionTypes.REMOVE_VACANCY, payload: id });\r\n        } catch (error) {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_ERROR, payload: error.message || \"Error while removing the vacancy.\" })\r\n        } finally {\r\n            dispatch({ type: VacancyActionTypes.SET_VACANCY_LOADING, payload: false });\r\n        }\r\n    }\r\n}\r\n","export enum OrderType {\r\n    Ascending,\r\n    Descending,\r\n    None\r\n}","import * as AuthActionCreators from \"./auth\";\r\nimport * as CandidateActionCreators from \"./candidate\";\r\nimport * as CompanyServiceActionCreators from \"./companyService\";\r\nimport * as CountryActionCreators from \"./country\";\r\nimport * as EmployeeActionCreators from \"./employee\";\r\nimport * as FavoriteVacancyActionCreators from \"./favoriteVacancy\";\r\nimport * as OfficeActionCreators from \"./office\";\r\nimport * as UserActionCreators from \"./user\";\r\nimport * as VacancyActionCreators from \"./vacancy\";\r\n\r\nexport const ActionCreators = {\r\n    ...AuthActionCreators,\r\n    ...CandidateActionCreators,\r\n    ...CompanyServiceActionCreators,\r\n    ...CountryActionCreators,\r\n    ...EmployeeActionCreators,\r\n    ...FavoriteVacancyActionCreators,\r\n    ...OfficeActionCreators,\r\n    ...UserActionCreators,\r\n    ...VacancyActionCreators\r\n}","import { bindActionCreators } from \"@reduxjs/toolkit\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { ActionCreators } from \"../store/action-creators\";\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(ActionCreators, dispatch);\r\n}","import { SearchTextFilterProps } from \"./types\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\n\r\nexport default function SearchText({ title, onSearch }: SearchTextFilterProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid item>\r\n            <TextField\r\n                label={title}\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                onChange={(event) => onSearch(event.target.value)}\r\n            />\r\n        </Grid>\r\n    )\r\n}","import { Checkbox, FormControlLabel, Grid } from \"@mui/material\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { CheckBoxFilterProps } from \"./types\";\r\n\r\n\r\nexport default function CheckBoxFilter({ label, onCheck, isChecked }: CheckBoxFilterProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid item>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        onChange={(event: ChangeEvent<HTMLInputElement>, checked: boolean) => onCheck(checked)}\r\n                        checked={isChecked}\r\n                    />}\r\n                label={label} />\r\n        </Grid>\r\n    )\r\n}","import { Button, Grid } from \"@mui/material\";\r\nimport { CreateNewButtonProps } from \"./types\";\r\n\r\nexport default function CreateNewButton({ onAction, children }: CreateNewButtonProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button\r\n                variant=\"contained\"\r\n                style={{ marginTop: '15px', textTransform: 'none' }}\r\n                onClick={onAction}>\r\n                {children}\r\n            </Button>\r\n        </Grid>\r\n    )\r\n}","import { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { CandidateStatus } from \"../../../types/candidate\";\r\nimport { AdminCandidateFiltersProps } from \"./types\";\r\nimport { Grid } from \"@mui/material\";\r\nimport SearchTextFilter from \"../../../components/FiltersArea/SearchTextFilter/SearchTextFilter\";\r\nimport CheckBoxFilter from \"../../../components/FiltersArea/CheckBoxFilter/CheckBoxFilter\";\r\nimport CreateNewButton from \"../../../components/FiltersArea/CreateNewButton/CreateNewButton\";\r\n\r\nexport default function AdminCandidateFilters({ onAddNew }: AdminCandidateFiltersProps) {\r\n    const { filters } = useTypedSelector(state => state.candidate);\r\n    const { setCandidatePage, setCandidateSearchCriteria, setCandidateActiveFilter } = useActions();\r\n\r\n    const activeCandidatesFilterHandler = (checked: boolean): void => {\r\n        checked ? setCandidateActiveFilter(CandidateStatus.Active) : setCandidateActiveFilter(CandidateStatus.All)\r\n    }\r\n\r\n    const onChangeSearch = (search: string): void => {\r\n        if (search.length === 0) setCandidateSearchCriteria(\"\");\r\n        if (search.length < 3) return;\r\n        setCandidatePage(1);\r\n        setCandidateSearchCriteria(search);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'space-between'} alignItems={'center'}>\r\n            <CheckBoxFilter label=\"Show only not dismissed\" onCheck={activeCandidatesFilterHandler} isChecked={filters.active === CandidateStatus.Active ? true : false} />\r\n            <SearchTextFilter title=\"Search candidate\" onSearch={onChangeSearch} />\r\n            <CreateNewButton onAction={onAddNew}>+ New Candidate</CreateNewButton>\r\n        </Grid>\r\n    )\r\n}","import { ReactNode } from \"react\";\r\n\r\nexport enum MessageAppearance {\r\n\tSMALL,\r\n\tREGULAR,\r\n\tLARGE\r\n}\r\n\r\nexport interface MessageProps {\r\n\tappearance: MessageAppearance;\r\n\tchildren: ReactNode;\r\n}","export const EMAIL_REG_EXP =/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n/**\r\n * Must contain at least one uppercase, one symbol and at least 7 or more characters\r\n */\r\nexport const PASSWORD_REG_EXP =/(?=.*[a-z])(?=.*[A-Z]).{7,}$/;\r\n\r\n/**\r\n * Must contain from 11 up to 13 characters\r\n * Valid formats: +31636363634, 1234567890, 075-63546725, 123-456-7890, (123)456-7890, (123) 456-7890, 123.456.7890\r\n */\r\n// eslint-disable-next-line no-useless-escape\r\nexport const PHONE_REG_EXP =/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\r\n\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport { MessageAppearance, MessageProps } from \"./types\";\r\nimport './styles.css';\r\n\r\nexport default function ErrorMessage({ children, appearance }: MessageProps): JSX.Element {\r\n    let cssClass: string;\r\n    switch (appearance) {\r\n        case MessageAppearance.LARGE:\r\n            cssClass = 'error-message-large';\r\n            break;\r\n        default:\r\n            cssClass = 'error-message-regular';\r\n    }\r\n\r\n    return (\r\n        <Grid container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            my={appearance === MessageAppearance.LARGE ? 5 : 1}\r\n        >\r\n            <Typography\r\n                variant={appearance === MessageAppearance.LARGE ? \"h6\" : 'body2'}\r\n                component={'span'}\r\n                className={cssClass}\r\n            >\r\n                {children}\r\n            </Typography>\r\n        </Grid>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { AdminCandidateFormProps } from \"./types\";\r\nimport { ICandidate } from \"../../../types/candidate\";\r\nimport { EMAIL_REG_EXP, PHONE_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { Button, Checkbox, FormControlLabel, Grid, IconButton, InputAdornment, SwipeableDrawer, TextField, Typography } from \"@mui/material\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function AdminCandidateForm({ candidate, closeForm }: AdminCandidateFormProps): JSX.Element {\r\n    const { createCandidate, updateCandidate } = useActions();\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [joinedAtValue, setJoinedAtValue] = useState<Date>(candidate.joinedAt);\r\n\r\n    const toggleDrawer = (anchor: string, open: boolean) =>\r\n        (event: React.KeyboardEvent | React.MouseEvent) => {\r\n            if (event && event.type === 'keydown' &&\r\n                ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\r\n            ) {\r\n                return;\r\n            }\r\n            if (!open) closeForm();\r\n        };\r\n\r\n    const validationSchema = Yup.object({\r\n        id: Yup.number()\r\n            .required(),\r\n        fullName: Yup.string()\r\n            .required()\r\n            .min(1, 'Full Name must be at least 1 character.')\r\n            .max(50, 'The field FullName may not be greater than 50 characters.'),\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid.\"),\r\n        phone: Yup.string()\r\n            .matches(PHONE_REG_EXP, 'Phone number is not valid. Must contain from 11 up to 13 characters, valid formats: +31636363634, 1234567890, 075-63546725, 123-456-7890, (123)456-7890, (123) 456-7890, 123.456.7890'),\r\n        notes: Yup.string()\r\n            .required()\r\n            .min(1, 'Notes must be at least 1 characters.'),\r\n        joinedAt: Yup.date()\r\n            .required('Choose the date.'),\r\n        vacancyId: Yup.number()\r\n            .positive()\r\n            .required('Vacancy Id is required.')\r\n    })\r\n\r\n    const defaultValues: ICandidate = {\r\n        id: candidate.id,\r\n        fullName: candidate.fullName,\r\n        email: candidate.email,\r\n        phone: candidate.phone,\r\n        notes: candidate.notes,\r\n        isDismissed: candidate.isDismissed,\r\n        joinedAt: candidate.joinedAt,\r\n        vacancyId: candidate.vacancyId !== 0 ? candidate.vacancyId : null // ???\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register, reset } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues\r\n    })\r\n\r\n    const onSubmit = async (candidate: ICandidate): Promise<void> => {\r\n        candidate.joinedAt = joinedAtValue;\r\n        candidate.id === 0 ? createCandidate(candidate) : updateCandidate(candidate);\r\n        onCancelHandler();\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setError(null);\r\n        reset();\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            open={true}\r\n            anchor='right'\r\n            transitionDuration={1500}\r\n            sx={{ zIndex: 1202 }}\r\n            onClose={toggleDrawer('right', false)}\r\n            onOpen={toggleDrawer('right', true)}\r\n        >\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '360px' }}>\r\n                <input {...register(\"id\")} type=\"hidden\" />\r\n                <Grid container direction={'column'} justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component={'p'} sx={{ padding: '20px', fontWeight: 400 }}>\r\n                        {candidate.id === 0 ? 'Add Candidate' : 'Edit Candidate'}\r\n                    </Typography>\r\n                    <Grid item>\r\n                        <Controller name=\"fullName\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Full Name\" type=\"text\" margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.fullName)} helperText={errors.fullName?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"email\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Email\" type=\"email\" margin=\"normal\" fullWidth\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <MailOutlineIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>),\r\n                                    }}\r\n                                    error={Boolean(errors.email)} helperText={errors.email?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"phone\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Phone\" type=\"text\" margin=\"normal\" fullWidth\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <PhoneIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>),\r\n                                    }}\r\n                                    error={Boolean(errors.phone)} helperText={errors.phone?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"notes\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Notes\" fullWidth\r\n                                    margin=\"normal\" multiline rows={4} variant='outlined' style={{ height: 'none' }}\r\n                                    error={Boolean(errors.notes)} helperText={errors.notes?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Controller name=\"isDismissed\" control={control}\r\n                                    render={({ field: props }) => (\r\n                                        <Checkbox\r\n                                            {...props}\r\n                                            checked={props.value}\r\n                                            onChange={(e) => props.onChange(e.target.checked)}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            }\r\n                            label=\"Dismissed?\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"joinedAt\" control={control}\r\n                            render={({ field }) =>\r\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                    <DatePicker\r\n                                        {...field}\r\n                                        label=\"Joined At\"\r\n                                        format=\"DD/MM/YYYY\"\r\n                                        value={moment(joinedAtValue)}\r\n                                        onChange={(newValue) => setJoinedAtValue(newValue.toDate())}\r\n                                    />\r\n                                </LocalizationProvider>\r\n                            } />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }} >\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={onCancelHandler}>Cancel</Button>\r\n                    </Grid>\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" type=\"submit\">Send</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </SwipeableDrawer>\r\n    )\r\n}","import { Box, Pagination } from \"@mui/material\";\r\nimport { ChangeEvent, useState } from \"react\";\r\nimport { TablePaginationProps } from \"./types\";\r\n\r\nexport default function TablePagination({ count, onChangePage }: TablePaginationProps): JSX.Element {\r\n    const [page, setPage] = useState(1);\r\n    const handleChange = (event: ChangeEvent<unknown>, value: number) => {\r\n        onChangePage(value);\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <Box mt={3} mb={3} display=\"flex\" justifyContent={\"center\"} >\r\n            <Pagination count={count} page={page} onChange={handleChange} />\r\n        </Box>\r\n    )\r\n}","import { TableCell, TableHead, TableRow, Typography } from \"@mui/material\";\r\nimport { TableHeaderProps } from \"./types\";\r\n\r\nexport default function TableHeader({ titles }: TableHeaderProps): JSX.Element {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {titles.map((header, index) =>\r\n                    <TableCell key={index} align=\"center\">\r\n                        <Typography variant=\"overline\" gutterBottom>\r\n                            {header}\r\n                        </Typography>\r\n                    </TableCell>)}\r\n            </TableRow>\r\n        </TableHead>\r\n    )\r\n}","import { useState } from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { IAppDeleteConfirmDialogProps } from './types';\r\n\r\nexport default function AppDeleteConfirmDialog({ onCancel, onDelete }: IAppDeleteConfirmDialogProps) {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        onCancel();\r\n    };\r\n\r\n    const handleOnDelete = () => {\r\n        onDelete();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                Delete Confirmation.\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    This entity will be deleted permanently. Please confirm.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} autoFocus>Cancel</Button>\r\n                <Button color='error' onClick={handleOnDelete}>\r\n                    Confirm\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import moment from \"moment\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { ICandidate } from \"../../../types/candidate\";\r\nimport { AdminCandidateTableProps } from \"./types\";\r\nimport { Divider, Paper, Switch, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip } from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport TablePagination from \"../../../components/TablePagination/TablePagination\";\r\nimport TableHeader from \"../../../components/TableHeader/TableHeader\";\r\nimport { useState } from \"react\";\r\nimport AppDeleteConfirmDialog from \"../../../components/AppDeleteConfirmDialog/AppDeleteConfirmDialog\";\r\n\r\nexport default function AdminCandidateTable({ onEdit }: AdminCandidateTableProps): JSX.Element {\r\n    const { candidateSearchResult } = useTypedSelector(state => state.candidate);\r\n    const { updateCandidateIsDismissedStatus, removeCandidate, setCandidatePage } = useActions();\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState<boolean>(false);\r\n    const [candidateIdToDelete, setCandidateIdToDelete] = useState<null | number>(null);\r\n\r\n    const onChangeIsDismissed = (id: number): void => {\r\n        const choosedCandidate = candidateSearchResult.itemList.find(c => c.id === id);\r\n        const candidateToUpdate: ICandidate = { ...choosedCandidate };\r\n        candidateToUpdate.isDismissed = !choosedCandidate.isDismissed;\r\n        updateCandidateIsDismissedStatus(id, candidateToUpdate);\r\n    }\r\n\r\n    const onEditHandler = (id: number) => {\r\n        const choosedCandidate = candidateSearchResult.itemList.find(c => c.id === id);\r\n        const candidateToUpdate: ICandidate = {\r\n            id: choosedCandidate.id,\r\n            fullName: choosedCandidate.fullName,\r\n            email: choosedCandidate.email,\r\n            phone: choosedCandidate.phone,\r\n            notes: choosedCandidate.notes,\r\n            isDismissed: choosedCandidate.isDismissed,\r\n            joinedAt: choosedCandidate.joinedAt,\r\n            vacancyId: choosedCandidate.vacancyId\r\n        };\r\n        onEdit(candidateToUpdate);\r\n    }\r\n\r\n    const onDeleteHandler = (id: number) => {\r\n        setCandidateIdToDelete(id);\r\n        setTimeout(() => {\r\n            setConfirmDialogOpen(true);\r\n        }, 100);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} sx={{ margin: '20px 0' }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHeader titles={['Full Name', 'Email', 'Phone', 'Notes', 'Dismissed?', 'Joined', 'Vacancy', 'Actions']} />\r\n                    <TableBody>\r\n                        {candidateSearchResult.itemList.map((candidate) => (\r\n                            <TableRow key={candidate.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                <TableCell component=\"th\" scope=\"row\">{candidate.fullName}</TableCell>\r\n                                <TableCell align=\"left\">{candidate.email}</TableCell>\r\n                                <TableCell align=\"left\">{candidate.phone}</TableCell>\r\n                                <TableCell align=\"left\">{candidate.notes.slice(0, 50).concat('...')}</TableCell>\r\n                                <TableCell align=\"left\">\r\n                                    <Switch checked={candidate.isDismissed} onClick={() => onChangeIsDismissed(candidate.id)} />\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{moment(candidate.joinedAt).format('DD/MM/YYYY')}</TableCell>\r\n                                <TableCell align=\"left\">{candidate.vacancyDto?.title.length > 50 ? candidate.vacancyDto?.title.slice(0, 50).concat('...') : candidate.vacancyDto?.title}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <Tooltip title=\"Edit Company Service\" placement=\"top\">\r\n                                            <EditIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: '#0072ea' }} onClick={() => onEditHandler(candidate.id)} />\r\n                                        </Tooltip>\r\n                                        <Divider orientation=\"vertical\" flexItem />\r\n                                        <Tooltip title=\"Remove Company Service\" placement=\"top\">\r\n                                            <DeleteIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: 'red' }} onClick={() => onDeleteHandler(candidate.id)} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                count={Math.ceil(candidateSearchResult.totalItemCount / candidateSearchResult.pageSize)}\r\n                onChangePage={(value: number) => setCandidatePage(value)}\r\n            />\r\n            {confirmDialogOpen && <AppDeleteConfirmDialog onCancel={() => setConfirmDialogOpen(false)} onDelete={() => removeCandidate(candidateIdToDelete)} />}\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { ICandidate } from \"../../../types/candidate\";\r\nimport { OrderType } from \"../../../types/common/orderType\";\r\nimport AdminCandidateFilters from \"./AdminCandidateFilters\";\r\nimport AdminCandidateForm from \"./AdminCandidateForm\";\r\nimport AdminCandidateTable from \"./AdminCandidateTable\";\r\n\r\nexport default function AdminCandidatePage(): JSX.Element {\r\n    const { candidateSearchResult, filters } = useTypedSelector(state => state.candidate);\r\n    const { getCandidates } = useActions();\r\n    const [candidate, setCandidate] = useState<ICandidate | null>(null);\r\n\r\n    useEffect(() => {\r\n        getCandidates(candidateSearchResult.pageSize, candidateSearchResult.currentPageNumber, filters, \"FullName\", OrderType.Ascending)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters, candidateSearchResult.currentPageNumber]);\r\n\r\n    const onCreateEdit = (candidate: null | ICandidate) => setCandidate(candidate);\r\n\r\n    return (\r\n        <>\r\n            <AdminCandidateFilters onAddNew={() => setCandidate({ id: 0, fullName: '', email: '', phone: '', notes: '', isDismissed: false, joinedAt: new Date(), vacancyId: 0 })} />\r\n            <AdminCandidateTable onEdit={onCreateEdit} />\r\n            {candidate && <AdminCandidateForm candidate={candidate} closeForm={() => setCandidate(null)} />}\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { AdminCountryFormProps } from \"./types\";\r\nimport { ICountry } from \"../../../types/country\";\r\nimport { Button, Grid, SwipeableDrawer, TextField, Typography } from \"@mui/material\";\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function AdminCountryForm({ country, closeForm }: AdminCountryFormProps): JSX.Element {\r\n    const { createCountry, updateCountry } = useActions();\r\n    const [error, setError] = useState<null | string>(null);\r\n\r\n    const toggleDrawer = (anchor: string, open: boolean) =>\r\n        (event: React.KeyboardEvent | React.MouseEvent) => {\r\n            if (event && event.type === 'keydown' &&\r\n                ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\r\n            ) {\r\n                return;\r\n            }\r\n            if (!open) closeForm();\r\n        };\r\n\r\n    const validationSchema = Yup.object({\r\n        id: Yup.number()\r\n            .required(),\r\n        name: Yup.string()\r\n            .required()\r\n            .min(1, 'Name must be at least 1 character.')\r\n            .max(20, 'The field Name may not be greater than 20 characters.'),\r\n        code: Yup.string()\r\n            .required()\r\n            .min(3, 'Code must be exactly 3 characters long.')\r\n            .max(3, 'Code must be exactly 3 characters long.')\r\n    })\r\n\r\n    const defaultValues: ICountry = {\r\n        id: country.id,\r\n        name: country.name,\r\n        code: country.code,\r\n        officeDtos: null\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register, reset } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues\r\n    })\r\n\r\n    const onSubmit = async (country: ICountry): Promise<void> => {\r\n        country.id === 0 ? createCountry(country) : updateCountry(country);\r\n        onCancelHandler();\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setError(null);\r\n        reset();\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            open={true}\r\n            anchor='right'\r\n            transitionDuration={1500}\r\n            sx={{ zIndex: 1202 }}\r\n            onClose={toggleDrawer('right', false)}\r\n            onOpen={toggleDrawer('right', true)}\r\n        >\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '360px' }}>\r\n                <input {...register(\"id\")} type=\"hidden\" />\r\n                <Grid container direction=\"column\" justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component={'p'} sx={{ padding: '20px', fontWeight: 400 }}>\r\n                        {country.id === 0 ? 'Add Country' : 'Edit Country'}\r\n                    </Typography>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"name\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Name\" type=\"text\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.name)} helperText={errors.name?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"code\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Code\" type=\"text\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.code)} helperText={errors.code?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }} >\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={onCancelHandler}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" type=\"submit\">\r\n                            Send\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </SwipeableDrawer>\r\n    )\r\n}","import { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { AdminCountryTableProps } from \"./types\";\r\nimport { Divider, Paper, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip } from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { ICountry } from \"../../../types/country\";\r\nimport TablePagination from \"../../../components/TablePagination/TablePagination\";\r\nimport TableHeader from \"../../../components/TableHeader/TableHeader\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\nimport { useState } from \"react\";\r\nimport AppDeleteConfirmDialog from \"../../../components/AppDeleteConfirmDialog/AppDeleteConfirmDialog\";\r\n\r\nexport default function AdminCountryTable({ onEdit }: AdminCountryTableProps): JSX.Element {\r\n    const { countrySearchResult, error } = useTypedSelector(state => state.country);\r\n    const { removeCountry, setCountryPage } = useActions();\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState<boolean>(false);\r\n    const [countryIdToDelete, setCountryIdToDelete] = useState<null | number>(null);\r\n\r\n    const onEditHandler = (id: number) => {\r\n        const choosedCountry = countrySearchResult.itemList.find(c => c.id === id);\r\n        const countryToUpdate: ICountry = {\r\n            id: choosedCountry.id,\r\n            name: choosedCountry.name,\r\n            code: choosedCountry.code,\r\n        }\r\n        onEdit(countryToUpdate);\r\n    }\r\n\r\n    const onDeleteHandler = (id: number) => {\r\n        setCountryIdToDelete(id);\r\n        setTimeout(() => {\r\n            setConfirmDialogOpen(true);\r\n        }, 100);\r\n    }\r\n\r\n    if (error) return <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} sx={{ margin: '20px 0' }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHeader titles={['Name', 'Code', 'Offices', 'Actions']} />\r\n                    <TableBody>\r\n                        {countrySearchResult.itemList.map((country) => (\r\n                            <TableRow\r\n                                key={country.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell align=\"left\">{country.name}</TableCell>\r\n                                <TableCell align=\"left\">{country.code}</TableCell>\r\n                                <TableCell align=\"left\">{\r\n                                    country.officeDtos &&\r\n                                    country.officeDtos.map(office => {\r\n                                        return <p key={office.name}><span>{office.name + ', ' + office.address}</span></p>\r\n                                    })\r\n                                }</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <Tooltip title=\"Edit Country\" placement=\"top\">\r\n                                            <EditIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: '#0072ea' }} onClick={() => onEditHandler(country.id)} />\r\n                                        </Tooltip>\r\n                                        <Divider orientation=\"vertical\" flexItem />\r\n                                        <Tooltip title=\"Remove Country\" placement=\"top\">\r\n                                            <DeleteIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: 'red' }} onClick={() => onDeleteHandler(country.id)} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                count={Math.ceil(countrySearchResult.totalItemCount / countrySearchResult.pageSize)}\r\n                onChangePage={(value: number) => setCountryPage(value)}\r\n            />\r\n            {confirmDialogOpen && <AppDeleteConfirmDialog onCancel={() => setConfirmDialogOpen(false)} onDelete={() => removeCountry(countryIdToDelete)} />}\r\n        </>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport CreateNewButton from \"../../../components/FiltersArea/CreateNewButton/CreateNewButton\";\r\nimport { AdminCountryFiltersProps } from \"./types\";\r\n\r\n\r\nexport default function AdminCountryFilters({ onAddNew }: AdminCountryFiltersProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'flex-end'} alignItems={'center'}>\r\n            <CreateNewButton onAction={onAddNew}>+ New Country</CreateNewButton>\r\n        </Grid>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { OrderType } from \"../../../types/common/orderType\";\r\nimport { ICountry } from \"../../../types/country\";\r\nimport AdminCountryForm from \"./AdminCountryForm\";\r\nimport AdminCountryTable from \"./AdminCountryTable\";\r\nimport AdminCountryFilters from \"./AdminCountryFilters\";\r\n\r\nexport default function AdminCountryPage(): JSX.Element {\r\n    const { countrySearchResult } = useTypedSelector(state => state.country);\r\n    const { getCountries } = useActions();\r\n    const [country, setCountry] = useState<ICountry | null>(null);\r\n\r\n    useEffect(() => {\r\n        getCountries(5, countrySearchResult.currentPageNumber, 'Name', OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [countrySearchResult.currentPageNumber])\r\n\r\n    const onCreateEdit = (country: ICountry | null) => setCountry(country);\r\n\r\n    return (\r\n        <>\r\n            <AdminCountryFilters onAddNew={() => setCountry({ id: 0, name: '', code: '' })} />\r\n            <AdminCountryTable onEdit={onCreateEdit} />\r\n            {country && <AdminCountryForm country={country} closeForm={() => setCountry(null)} />}\r\n        </>\r\n    )\r\n}","import { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { ICompanyService } from '../../../types/companyService';\r\nimport { AdminServiceTableProps } from './types';\r\nimport { Divider, Paper, Switch, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ErrorMessage from '../../../components/Messages/ErrorMessage';\r\nimport TablePagination from '../../../components/TablePagination/TablePagination';\r\nimport TableHeader from '../../../components/TableHeader/TableHeader';\r\nimport { MessageAppearance } from '../../../components/Messages/types';\r\nimport { useState } from 'react';\r\nimport AppDeleteConfirmDialog from '../../../components/AppDeleteConfirmDialog/AppDeleteConfirmDialog';\r\n\r\nexport default function AdminServiceTable({ onEdit }: AdminServiceTableProps): JSX.Element {\r\n    const { serviceSearchResult, error } = useTypedSelector(state => state.service);\r\n    const { removeService, updateServiceIsActiveStatus, setServicePage } = useActions();\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState<boolean>(false);\r\n    const [serviceIdToDelete, setServiceIdToDelete] = useState<null | number>(null);\r\n\r\n    const onEditHandler = (id: number) => {\r\n        const choosedService = serviceSearchResult.itemList.find(s => s.id === id);\r\n        const serviceToUpdate: ICompanyService = {\r\n            id: choosedService.id,\r\n            title: choosedService.title,\r\n            description: choosedService.description,\r\n            imageUrl: choosedService.imageUrl,\r\n            isActive: choosedService.isActive\r\n        }\r\n        onEdit(serviceToUpdate);\r\n    }\r\n\r\n    const onChangeIsActive = (id: number) => {\r\n        const choosedService = serviceSearchResult.itemList.find(s => s.id === id);\r\n        const serviceToUpdate: ICompanyService = { ...choosedService };\r\n        serviceToUpdate.isActive = !choosedService.isActive;\r\n        updateServiceIsActiveStatus(id, serviceToUpdate);\r\n    }\r\n\r\n    const onDeleteHandler = (id: number) => {\r\n        setServiceIdToDelete(id);\r\n        setTimeout(() => {\r\n            setConfirmDialogOpen(true);\r\n        }, 100);\r\n    }\r\n\r\n    if (error) return <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} sx={{ margin: '20px 0' }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHeader titles={['Title', 'Description', 'Image Url', 'Is Active?', 'Actions']} />\r\n                    <TableBody>\r\n                        {serviceSearchResult.itemList.map((service) => (\r\n                            <TableRow\r\n                                key={service.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {service.title}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{service.description.slice(0, 50).concat('...')}</TableCell>\r\n                                <TableCell align=\"left\">{service.imageUrl.slice(0, 15).concat('...')}</TableCell>\r\n                                <TableCell align=\"left\">\r\n                                    <Switch checked={service.isActive} onClick={() => onChangeIsActive(service.id)} />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <Tooltip title=\"Edit Company Service\" placement=\"top\">\r\n                                            <EditIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: '#0072ea' }} onClick={() => onEditHandler(service.id)} />\r\n                                        </Tooltip>\r\n                                        <Divider orientation=\"vertical\" flexItem />\r\n                                        <Tooltip title=\"Remove Company Service\" placement=\"top\">\r\n                                            <DeleteIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: 'red' }} onClick={() => onDeleteHandler(service.id)} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                count={Math.ceil(serviceSearchResult.totalItemCount / serviceSearchResult.pageSize)}\r\n                onChangePage={(value: number) => setServicePage(value)}\r\n            />\r\n            {confirmDialogOpen && <AppDeleteConfirmDialog onCancel={() => setConfirmDialogOpen(false)} onDelete={() => removeService(serviceIdToDelete)} />}\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { AdminServiceFormProps } from \"./types\";\r\nimport { ICompanyService } from \"../../../types/companyService\";\r\nimport { Button, Checkbox, FormControlLabel, Grid, SwipeableDrawer, TextField, Typography } from \"@mui/material\";\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function AdminServiceForm({ service, closeForm }: AdminServiceFormProps): JSX.Element {\r\n    const { createService, updateService } = useActions();\r\n    const [error, setError] = useState<null | string>(null);\r\n\r\n    const toggleDrawer = (anchor: string, open: boolean) =>\r\n        (event: React.KeyboardEvent | React.MouseEvent) => {\r\n            if (\r\n                event &&\r\n                event.type === 'keydown' &&\r\n                ((event as React.KeyboardEvent).key === 'Tab' ||\r\n                    (event as React.KeyboardEvent).key === 'Shift')\r\n            ) {\r\n                return;\r\n            }\r\n            if (!open) closeForm();\r\n        };\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string()\r\n            .required()\r\n            .min(2, 'Title must be at least 2 characters.')\r\n            .max(100, 'The field Title may not be greater than 100 characters.'),\r\n        description: Yup.string()\r\n            .required()\r\n            .min(6, 'Description must be at least 6 characters.')\r\n            .max(1024, 'The field Description may not be greater than 1024 characters.'),\r\n        imageUrl: Yup.string()\r\n            .required()\r\n            .min(2, 'ImageUrl must be at least 2 characters.')\r\n            .max(1024, 'The field ImageUrl may not be greater than 1024 characters.'),\r\n        isActive: Yup.boolean()\r\n            .required(),\r\n        id: Yup.number()\r\n            .required()\r\n    })\r\n\r\n    const defaultValues: { title: string, description: string, imageUrl: string, isActive: boolean, id: number } = {\r\n        title: service.title,\r\n        description: service.description,\r\n        imageUrl: service.imageUrl,\r\n        isActive: service.isActive,\r\n        id: service.id\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register, reset } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues\r\n    })\r\n\r\n    const onSubmit = async (service: ICompanyService): Promise<void> => {\r\n        service.id === 0 ? createService(service) : updateService(service);\r\n        onCancelHandler();\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setError(null);\r\n        reset();\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            open={true}\r\n            anchor='right'\r\n            transitionDuration={1500}\r\n            sx={{ zIndex: 1202 }}\r\n            onClose={toggleDrawer('right', false)}\r\n            onOpen={toggleDrawer('right', true)}\r\n        >\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '360px' }}>\r\n                <input {...register(\"id\")} type=\"hidden\" />\r\n                <Grid container direction={'column'} justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component={'p'} sx={{ padding: '20px', fontWeight: 400 }}>\r\n                        {service.id === 0 ? 'Add Service' : 'Edit Service'}\r\n                    </Typography>\r\n                    <Grid item>\r\n                        <Controller name=\"title\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Title\" type=\"text\" margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.title)} helperText={errors.title?.message} />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"description\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Notes\" fullWidth\r\n                                    margin=\"normal\" multiline rows={4} variant='outlined' style={{ height: 'none' }}\r\n                                    error={Boolean(errors.description)} helperText={errors.description?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"imageUrl\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Image Url\" type=\"text\" margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.imageUrl)} helperText={errors.imageUrl?.message} />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Controller name=\"isActive\" control={control}\r\n                                    render={({ field: props }) => (\r\n                                        <Checkbox\r\n                                            {...props}\r\n                                            checked={props.value}\r\n                                            onChange={(e) => props.onChange(e.target.checked)}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            }\r\n                            label=\"Is Active?\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }} >\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={onCancelHandler}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" type=\"submit\">\r\n                            Send\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </SwipeableDrawer>\r\n    )\r\n}","import { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { CompanyServiceStatus } from \"../../../types/companyService\"\r\nimport { AdminServiceFiltersProps } from \"./types\";\r\nimport { Grid } from \"@mui/material\"\r\nimport CheckBoxFilter from \"../../../components/FiltersArea/CheckBoxFilter/CheckBoxFilter\";\r\nimport CreateNewButton from \"../../../components/FiltersArea/CreateNewButton/CreateNewButton\";\r\n\r\nexport default function AdminServiceFilters({ onAddNew }: AdminServiceFiltersProps): JSX.Element {\r\n    const { filters } = useTypedSelector(state => state.service);\r\n    const { setServiceActiveFilter } = useActions();\r\n\r\n    const activeServicesFilterHandler = (checked: boolean): void => {\r\n        checked ? setServiceActiveFilter(CompanyServiceStatus.Active) : setServiceActiveFilter(CompanyServiceStatus.All);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'space-between'} alignItems={'center'}>\r\n            <CheckBoxFilter label=\"Show only active\" onCheck={activeServicesFilterHandler} isChecked={filters.active === CompanyServiceStatus.Active ? true : false} />\r\n            <CreateNewButton onAction={onAddNew}>+ Create New</CreateNewButton>\r\n        </Grid>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { OrderType } from \"../../../types/common/orderType\";\r\nimport { ICompanyService } from \"../../../types/companyService\";\r\nimport AdminServiceTable from \"./AdminServiceTable\";\r\nimport AdminServiceForm from \"./AdminServiceForm\";\r\nimport AdminServiceFilters from \"./AdminServiceFilters\";\r\n\r\nexport default function AdminServicePage(): JSX.Element {\r\n    const { serviceSearchResult, filters } = useTypedSelector(state => state.service);\r\n    const { getServices } = useActions();\r\n    const [service, setService] = useState<null | ICompanyService>(null);\r\n\r\n    useEffect(() => {\r\n        getServices(5, serviceSearchResult.currentPageNumber, filters.active, OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [serviceSearchResult.currentPageNumber, filters])\r\n\r\n    const onCreateEdit = (service: null | ICompanyService) => setService(service);\r\n\r\n    return (\r\n        <>\r\n            <AdminServiceFilters onAddNew={() => setService({ id: 0, title: '', description: '', imageUrl: '', isActive: true })} />\r\n            <AdminServiceTable onEdit={onCreateEdit} />\r\n            {service && <AdminServiceForm service={service} closeForm={() => setService(null)} />}\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { AdminOfficeFormProps } from \"./types\";\r\nimport { IOffice } from \"../../../types/office\";\r\nimport { Button, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, SwipeableDrawer, TextField, Typography } from \"@mui/material\";\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function AdminOfficeForm({ office, closeForm }: AdminOfficeFormProps): JSX.Element {\r\n    const { countrySearchResult } = useTypedSelector(state => state.country);\r\n    const { createOffice, updateOffice } = useActions();\r\n    const [error, setError] = useState<null | string>(null);\r\n\r\n    const countries = countrySearchResult.itemList;\r\n\r\n    const toggleDrawer = (anchor: string, open: boolean) =>\r\n        (event: React.KeyboardEvent | React.MouseEvent) => {\r\n            if (event && event.type === 'keydown' &&\r\n                ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\r\n            ) {\r\n                return;\r\n            }\r\n            if (!open) closeForm();\r\n        };\r\n\r\n    const validationSchema = Yup.object({\r\n        id: Yup.number()\r\n            .required(),\r\n        name: Yup.string()\r\n            .required()\r\n            .min(1, 'Name must be at least 1 character.')\r\n            .max(100, 'The field Name may not be greater than 100 characters.'),\r\n        description: Yup.string()\r\n            .required()\r\n            .min(1, 'Description must be at least 3 characters.')\r\n            .max(1000, 'Description may not be greater than 1000 characters.'),\r\n        address: Yup.string()\r\n            .required()\r\n            .min(1, 'Address must be at least 3 characters.')\r\n            .max(1000, 'The field Address may not be greater than 1000 characters.'),\r\n        latitude: Yup.number()\r\n            .required()\r\n            .min(0, 'Latitude must be at greater than 0.')\r\n            .max(180, 'The field Latitude may not be greater than 180.'),\r\n        longitude: Yup.number()\r\n            .required()\r\n            .min(0, 'Longitude must be at greater than 0.')\r\n            .max(180, 'The field Longitude may not be greater than 180.'),\r\n        countryId: Yup.number()\r\n            .required()\r\n    })\r\n\r\n    const defaultValues: IOffice = {\r\n        id: office.id,\r\n        name: office.name,\r\n        description: office.description,\r\n        address: office.address,\r\n        latitude: office.latitude,\r\n        longitude: office.longitude,\r\n        countryId: office.countryId\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register, reset } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues\r\n    })\r\n\r\n    const onSubmit = async (office: IOffice): Promise<void> => {\r\n        office.id === 0 ? createOffice(office) : updateOffice(office);\r\n        onCancelHandler();\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setError(null);\r\n        reset();\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            open={true}\r\n            anchor='right'\r\n            transitionDuration={1500}\r\n            sx={{ zIndex: 1202 }}\r\n            onClose={toggleDrawer('right', false)}\r\n            onOpen={toggleDrawer('right', true)}\r\n        >\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '360px' }}>\r\n                <input {...register(\"id\")} type=\"hidden\" />\r\n                <Grid container direction=\"column\" justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component={'p'} sx={{ padding: '20px', fontWeight: 400 }}>\r\n                        {office.id === 0 ? 'Add Office' : 'Edit Office'}\r\n                    </Typography>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"name\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Name\" type=\"text\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.name)} helperText={errors.name?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"description\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Description\"\r\n                                    fullWidth margin=\"normal\" multiline rows={4} variant='outlined' style={{ height: 'none' }}\r\n                                    error={Boolean(errors.description)} helperText={errors.description?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"address\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Address\" type=\"text\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.address)} helperText={errors.address?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"latitude\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Latitude\" type=\"number\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.latitude)} helperText={errors.latitude?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"longitude\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Longitude\" type=\"number\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.longitude)} helperText={errors.longitude?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <FormControl sx={{ width: 300 }}>\r\n                            <InputLabel id=\"level-label\">Country</InputLabel>\r\n                            <Controller\r\n                                name=\"countryId\"\r\n                                defaultValue={countries[0].id}\r\n                                control={control}\r\n                                render={({ field }) => (\r\n                                    <Select label=\"Country\" {...field}>\r\n                                        {countries.map((country) => <MenuItem key={country.id} value={country.id}>{country.name}</MenuItem>)}\r\n                                    </Select>\r\n                                )}\r\n                            />\r\n                            <FormHelperText error={true}>{errors.countryId?.message}</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }} >\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={onCancelHandler}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" type=\"submit\">\r\n                            Send\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </SwipeableDrawer>\r\n    )\r\n}","import { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { AdminOfficeTableProps } from \"./types\";\r\nimport { Divider, Paper, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip } from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { IOffice } from \"../../../types/office\";\r\nimport TablePagination from \"../../../components/TablePagination/TablePagination\";\r\nimport TableHeader from \"../../../components/TableHeader/TableHeader\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\nimport { useState } from \"react\";\r\nimport AppDeleteConfirmDialog from \"../../../components/AppDeleteConfirmDialog/AppDeleteConfirmDialog\";\r\n\r\nexport default function AdminOfficeTable({ onEdit }: AdminOfficeTableProps): JSX.Element {\r\n    const { officeSearchResult, error } = useTypedSelector(state => state.office);\r\n    const { removeOffice, setOfficePage } = useActions();\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState<boolean>(false);\r\n    const [officeIdToDelete, setOfficeIdToDelete] = useState<null | number>(null);\r\n\r\n    const onEditHandler = (id: number) => {\r\n        const choosedOffice = officeSearchResult.itemList.find(c => c.id === id);\r\n        const officeToUpdate: IOffice = {\r\n            id: choosedOffice.id,\r\n            name: choosedOffice.name,\r\n            description: choosedOffice.description,\r\n            address: choosedOffice.address,\r\n            latitude: choosedOffice.latitude,\r\n            longitude: choosedOffice.longitude,\r\n            countryId: choosedOffice.countryId\r\n        };\r\n        onEdit(officeToUpdate);\r\n    }\r\n\r\n    const onDeleteHandler = (id: number) => {\r\n        setOfficeIdToDelete(id);\r\n        setTimeout(() => {\r\n            setConfirmDialogOpen(true);\r\n        }, 100);\r\n    }\r\n\r\n    if (error) return <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} sx={{ margin: '20px 0' }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHeader titles={['Name', 'Description', 'Address', 'Country', 'Vacancies', 'Actions']} />\r\n                    <TableBody>\r\n                        {officeSearchResult.itemList.map((office) => (\r\n                            <TableRow\r\n                                key={office.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">{office.name}</TableCell>\r\n                                <TableCell align=\"left\">{office.description.slice(0, 15).concat('...')}</TableCell>\r\n                                <TableCell align=\"left\">{office.address.slice(0, 15).concat('...')}</TableCell>\r\n                                <TableCell align=\"center\">{office.countryDto?.code}</TableCell>\r\n                                <TableCell align=\"center\">{office.vacancyDtos?.length}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <Tooltip title=\"Edit Office\" placement=\"top\">\r\n                                            <EditIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: '#0072ea' }} onClick={() => onEditHandler(office.id)} />\r\n                                        </Tooltip>\r\n                                        <Divider orientation=\"vertical\" flexItem />\r\n                                        <Tooltip title=\"Remove Office\" placement=\"top\">\r\n                                            <DeleteIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: 'red' }} onClick={() => onDeleteHandler(office.id)} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                count={Math.ceil(officeSearchResult.totalItemCount / officeSearchResult.pageSize)}\r\n                onChangePage={(value: number) => setOfficePage(value)}\r\n            />\r\n            {confirmDialogOpen && <AppDeleteConfirmDialog onCancel={() => setConfirmDialogOpen(false)} onDelete={() => removeOffice(officeIdToDelete)} />}\r\n        </>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { AdminOfficeFiltersProps } from \"./types\";\r\nimport CreateNewButton from \"../../../components/FiltersArea/CreateNewButton/CreateNewButton\";\r\n\r\nexport default function AdminOfficeFilters({ onAddNew }: AdminOfficeFiltersProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'flex-end'} alignItems={'center'}>\r\n            <CreateNewButton onAction={onAddNew}>+ New Office</CreateNewButton>\r\n        </Grid>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { IOffice } from \"../../../types/office\";\r\nimport { OrderType } from \"../../../types/common/orderType\";\r\nimport AdminOfficeForm from \"./AdminOfficeForm\";\r\nimport AdminOfficeTable from \"./AdminOfficeTable\";\r\nimport AdminOfficeFilters from \"./AdminOfficeFilters\";\r\n\r\nexport default function AdminOfficePage(): JSX.Element {\r\n    const { officeSearchResult } = useTypedSelector(state => state.office);\r\n    const { countrySearchResult } = useTypedSelector(state => state.country);\r\n    const { getCountries, getOffices } = useActions();\r\n    const [office, setOffice] = useState<IOffice | null>(null);\r\n\r\n    useEffect(() => {\r\n        getCountries(100, countrySearchResult.currentPageNumber, 'Name', OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getOffices(5, officeSearchResult.currentPageNumber, 'Name', OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [officeSearchResult.currentPageNumber])\r\n\r\n    const onCreateEdit = (office: IOffice | null) => setOffice(office);\r\n\r\n    return (\r\n        <>\r\n            <AdminOfficeFilters onAddNew={() => setOffice({ id: 0, name: '', description: '', address: '', latitude: 0, longitude: 0, countryId: countrySearchResult.itemList[0].id })} />\r\n            <AdminOfficeTable onEdit={onCreateEdit} />\r\n            {office && <AdminOfficeForm office={office} closeForm={() => setOffice(null)} />}\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { AdminEmployeeFormProps } from \"./types\";\r\nimport { IEmployee } from \"../../../types/employee\";\r\nimport { EMAIL_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { Button, FormControl, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, MenuItem, Select, SwipeableDrawer, TextField, Typography } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function AdminEmployeeForm({ employee, closeForm }: AdminEmployeeFormProps): JSX.Element {\r\n    const { offices } = useTypedSelector(state => state.vacancy);\r\n    const { createEmployee, updateEmployee } = useActions();\r\n    const [error, setError] = useState<null | string>(null);\r\n\r\n    const toggleDrawer = (anchor: string, open: boolean) =>\r\n        (event: React.KeyboardEvent | React.MouseEvent) => {\r\n            if (event && event.type === 'keydown' &&\r\n                ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\r\n            ) {\r\n                return;\r\n            }\r\n            if (!open) closeForm();\r\n        };\r\n\r\n    const validationSchema = Yup.object({\r\n        id: Yup.number()\r\n            .required(),\r\n        fullName: Yup.string()\r\n            .required()\r\n            .min(1, 'Full Name must be at least 1 character.')\r\n            .max(50, 'The field Full Name may not be greater than 50 characters.'),\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        position: Yup.string()\r\n            .required()\r\n            .min(1, 'Position must be at least 1 character.')\r\n            .max(50, 'The field Position may not be greater than 50 characters.'),\r\n        description: Yup.string()\r\n            .required()\r\n            .min(1, 'Description must be at least 1 characters.')\r\n            .max(1024, 'The field Description may not be greater than 1024 characters.'),\r\n        avatarUrl: Yup.string()\r\n            .required()\r\n            .min(2, 'ImageUrl must be at least 2 characters.')\r\n            .max(1024, 'The field ImageUrl may not be greater than 1024 characters.'),\r\n        officeId: Yup.number()\r\n            .required('Office required.')\r\n    })\r\n\r\n    const defaultValues: IEmployee = {\r\n        id: employee.id,\r\n        fullName: employee.fullName,\r\n        email: employee.email,\r\n        position: employee.position,\r\n        description: employee.description,\r\n        avatarUrl: employee.avatarUrl,\r\n        officeId: employee.officeId,\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register, reset } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues\r\n    })\r\n\r\n    const onSubmit = async (employee: IEmployee): Promise<void> => {\r\n        employee.id === 0 ? createEmployee(employee) : updateEmployee(employee);\r\n        onCancelHandler();\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setError(null);\r\n        reset();\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            open={true}\r\n            anchor='right'\r\n            transitionDuration={1500}\r\n            sx={{ zIndex: 1202 }}\r\n            onClose={toggleDrawer('right', false)}\r\n            onOpen={toggleDrawer('right', true)}\r\n        >\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '360px' }}>\r\n                <input {...register(\"id\")} type=\"hidden\" />\r\n                <Grid container direction=\"column\" justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component={'p'} sx={{ padding: '20px', fontWeight: 400 }}>\r\n                        {employee.id === 0 ? 'Add Employee' : 'Edit Employee'}\r\n                    </Typography>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"fullName\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Full Name\" type=\"text\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.fullName)} helperText={errors.fullName?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"email\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Email\" type=\"email\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <MailOutlineIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>),\r\n                                    }}\r\n                                    error={Boolean(errors.email)} helperText={errors.email?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"position\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Position\" type=\"text\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.position)} helperText={errors.position?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"description\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Description\"\r\n                                    fullWidth margin=\"normal\" multiline rows={4} variant='outlined' style={{ height: 'none' }}\r\n                                    error={Boolean(errors.description)} helperText={errors.description?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller\r\n                            name=\"avatarUrl\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Avatar Url\" type=\"text\"\r\n                                    margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.avatarUrl)} helperText={errors.avatarUrl?.message}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <FormControl sx={{ width: 300 }}>\r\n                            <InputLabel id=\"level-label\">Office</InputLabel>\r\n                            <Controller\r\n                                name=\"officeId\"\r\n                                defaultValue={offices[1].id}\r\n                                control={control}\r\n                                render={({ field }) => (\r\n                                    <Select label=\"Office\" {...field}>\r\n                                        {offices.slice(1).map((office) => <MenuItem key={office.id} value={office.id}>{office.name}</MenuItem>)}\r\n                                    </Select>\r\n                                )}\r\n                            />\r\n                            <FormHelperText error={true}>{errors.officeId?.message}</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }} >\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={onCancelHandler}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" type=\"submit\">\r\n                            Send\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </SwipeableDrawer>\r\n    )\r\n}","import { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IEmployee } from \"../../../types/employee\";\r\nimport { AdminEmployeeTableProps } from \"./types\";\r\nimport { Divider, Paper, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip } from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport TablePagination from \"../../../components/TablePagination/TablePagination\";\r\nimport TableHeader from \"../../../components/TableHeader/TableHeader\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\nimport { useState } from \"react\";\r\nimport AppDeleteConfirmDialog from \"../../../components/AppDeleteConfirmDialog/AppDeleteConfirmDialog\";\r\n\r\nexport default function AdminEmployeeTable({ onEdit }: AdminEmployeeTableProps): JSX.Element {\r\n    const { employeeSearchResult, error } = useTypedSelector(state => state.employee);\r\n    const { removeEmployee, setEmployeePage } = useActions();\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState<boolean>(false);\r\n    const [employeeIdToDelete, setEmployeeIdToDelete] = useState<null | number>(null);\r\n\r\n    const onEditHandler = (id: number) => {\r\n        const choosedEmployee = employeeSearchResult.itemList.find(e => e.id === id);\r\n        const employeeToUpdate: IEmployee = {\r\n            id: choosedEmployee.id,\r\n            fullName: choosedEmployee.fullName,\r\n            email: choosedEmployee.email,\r\n            position: choosedEmployee.position,\r\n            description: choosedEmployee.description,\r\n            avatarUrl: choosedEmployee.avatarUrl,\r\n            officeId: choosedEmployee.officeId\r\n        }\r\n        onEdit(employeeToUpdate);\r\n    }\r\n\r\n    const onDeleteHandler = (id: number) => {\r\n        setEmployeeIdToDelete(id);\r\n        setTimeout(() => {\r\n            setConfirmDialogOpen(true);\r\n        }, 100);\r\n    }\r\n\r\n    if (error) return <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} sx={{ margin: '20px 0' }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHeader titles={['Full Name', 'Email', 'Position', 'Description', 'Avatar Url', 'Office', 'Actions']} />\r\n                    <TableBody>\r\n                        {employeeSearchResult.itemList.map((employee) => (\r\n                            <TableRow\r\n                                key={employee.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">{employee.fullName}</TableCell>\r\n                                <TableCell align=\"left\">{employee.email}</TableCell>\r\n                                <TableCell align=\"left\">{employee.position}</TableCell>\r\n                                <TableCell align=\"left\">{employee.description.slice(0, 15).concat('...')}</TableCell>\r\n                                <TableCell align=\"left\">{employee.avatarUrl.slice(0, 15).concat('...')}</TableCell>\r\n                                <TableCell align=\"left\">{employee.officeDto ? employee.officeDto.name : '...Please refresh the page...'}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <Tooltip title=\"Edit Employee\" placement=\"top\">\r\n                                            <EditIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: '#0072ea' }} onClick={() => onEditHandler(employee.id)} />\r\n                                        </Tooltip>\r\n                                        <Divider orientation=\"vertical\" flexItem />\r\n                                        <Tooltip title=\"Remove Employee\" placement=\"top\">\r\n                                            <DeleteIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: 'red' }} onClick={() => onDeleteHandler(employee.id)} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                count={Math.ceil(employeeSearchResult.totalItemCount / employeeSearchResult.pageSize)}\r\n                onChangePage={(value: number) => setEmployeePage(value)}\r\n            />\r\n            {confirmDialogOpen && <AppDeleteConfirmDialog onCancel={() => setConfirmDialogOpen(false)} onDelete={() => removeEmployee(employeeIdToDelete)} />}\r\n        </>\r\n    )\r\n}","import { AdminTeamFiltersProps } from \"./types\";\r\nimport { Grid } from \"@mui/material\";\r\nimport CreateNewButton from \"../../../components/FiltersArea/CreateNewButton/CreateNewButton\";\r\n\r\nexport default function AdminTeamFilters({ onAddNew }: AdminTeamFiltersProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'flex-end'} alignItems={'center'}>\r\n            <CreateNewButton onAction={onAddNew}>+ New Employee</CreateNewButton>\r\n        </Grid>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IEmployee } from \"../../../types/employee\";\r\nimport { OrderType } from \"../../../types/common/orderType\";\r\nimport AdminEmployeeForm from \"./AdminEmployeeForm\";\r\nimport AdminEmployeeTable from \"./AdminEmployeeTable\";\r\nimport AdminTeamFilters from \"./AdminTeamFilters\";\r\n\r\nexport default function AdminTeamPage(): JSX.Element {\r\n    const { employeeSearchResult } = useTypedSelector(state => state.employee);\r\n    const { offices } = useTypedSelector(state => state.vacancy);\r\n    const { getEmployees, getOfficeNameIdDtos } = useActions();\r\n    const [employee, setEmployee] = useState<IEmployee | null>(null);\r\n\r\n    useEffect(() => {\r\n        getEmployees(5, employeeSearchResult.currentPageNumber, employeeSearchResult.searchCriteria, 'FullName', OrderType.Ascending);\r\n        getOfficeNameIdDtos();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [employeeSearchResult.currentPageNumber])\r\n\r\n    const onCreateEdit = (employee: IEmployee | null) => setEmployee(employee);\r\n\r\n    return (\r\n        <>\r\n            <AdminTeamFilters onAddNew={() => setEmployee({ id: 0, fullName: '', email: '', position: '', description: '', avatarUrl: '', officeId: offices[1].id })} />\r\n            <AdminEmployeeTable onEdit={onCreateEdit} />\r\n            {employee && <AdminEmployeeForm employee={employee} closeForm={() => setEmployee(null)} />}\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { AutocompleteFilterProps } from \"./types\";\r\nimport { Autocomplete, Grid, TextField } from \"@mui/material\";\r\n\r\nexport default function AutocompleteFilter({ label, options, onSearch }: AutocompleteFilterProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid item >\r\n            <Autocomplete\r\n                freeSolo\r\n                disableClearable={false}\r\n                options={options.map((option) => option.value)}\r\n                onChange={onSearch}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        sx={{ width: 300 }}\r\n                        {...params}\r\n                        label={label}\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                )}\r\n            />\r\n        </Grid>\r\n    )\r\n}","import { FormControl, Grid, InputLabel, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\r\nimport { SelectItemFilterProps } from \"./types\";\r\n\r\nexport default function SelectItemsFilter({ items, label, onSelectChanged, value }: SelectItemFilterProps): JSX.Element {\r\n\r\n    return (\r\n        <Grid item>\r\n            <FormControl sx={{ width: 300 }}>\r\n                <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    label={label}\r\n                    onChange={(event: SelectChangeEvent) => onSelectChanged(event.target.value)}\r\n                >\r\n                    {items.map((item) => <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { AdminVacancyFiltersProps } from \"./types\";\r\nimport AutocompleteFilter from \"../../../components/FiltersArea/AutocompleteFilter/AutocompleteFilter\";\r\nimport CreateNewButton from \"../../../components/FiltersArea/CreateNewButton/CreateNewButton\";\r\nimport SelectItemsFilter from \"../../../components/FiltersArea/SelectItemFilter/SelectItemFilter\";\r\n\r\nexport default function AdminVacancyFilters({ onAddNew }: AdminVacancyFiltersProps): JSX.Element {\r\n    const { filters, offices, titles } = useTypedSelector(state => state.vacancy);\r\n    const { setVacancyPage, setVacancyOfficeFilter, setVacancySearchCriteria } = useActions();\r\n\r\n    const onSelectChanged = (newValue: string) => {\r\n        setVacancyPage(1);\r\n        setVacancyOfficeFilter(newValue);\r\n        setVacancySearchCriteria(\"\");\r\n    }\r\n\r\n    const searchTitleChanged = (event, values) => {\r\n        setVacancyPage(1);\r\n        setVacancySearchCriteria(values);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'space-between'} alignItems={'center'}>\r\n            <SelectItemsFilter\r\n                items={offices.map((o) => { return { id: o.id, name: o.name } })}\r\n                label=\"Office\"\r\n                onSelectChanged={onSelectChanged}\r\n                value={filters.officeId}\r\n            />\r\n            <AutocompleteFilter label=\"Search by title\" options={titles} onSearch={searchTitleChanged} />\r\n            <CreateNewButton onAction={onAddNew}>+ New Vacancy</CreateNewButton>\r\n        </Grid>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { AdminVacancyFormProps } from \"./types\";\r\nimport { IVacancy } from \"../../../types/vacancy\";\r\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, FormHelperText, Grid, InputLabel, MenuItem, Modal, Select, TextField, Typography } from \"@mui/material\";\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    overflow: 'scroll',\r\n    maxHeight: '90%',\r\n    display: 'block',\r\n    transform: 'translate(-50%, -50%)',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function AdminVacancyForm({ vacancy, closeForm }: AdminVacancyFormProps): JSX.Element {\r\n    const { offices } = useTypedSelector(state => state.vacancy);\r\n    const { createVacancy, updateVacancy } = useActions();\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [editorValue, setEditorValue] = useState(vacancy.description);\r\n\r\n    const validationSchema = Yup.object({\r\n        id: Yup.number()\r\n            .required(),\r\n        title: Yup.string()\r\n            .required()\r\n            .min(1, 'Title must be at least 1 character.')\r\n            .max(50, 'The field Title may not be greater than 50 characters.'),\r\n        // description: Yup.string()\r\n        //     .required('Description must be at least 1 characters.'),\r\n        previews: Yup.number()\r\n            .required(),\r\n        isActive: Yup.boolean()\r\n            .required(),\r\n        officeId: Yup.number()\r\n            .required('Office required.')\r\n    })\r\n\r\n    const defaultValues: IVacancy = {\r\n        id: vacancy.id,\r\n        title: vacancy.title,\r\n        description: vacancy.description,\r\n        previews: vacancy.previews,\r\n        isActive: vacancy.isActive,\r\n        officeId: vacancy.officeId\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register, reset } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues\r\n    })\r\n\r\n    const onSubmit = async (vacancy: IVacancy): Promise<void> => {\r\n        vacancy.description = editorValue;\r\n        vacancy.id === 0 ? createVacancy(vacancy) : updateVacancy(vacancy);\r\n        onCancelHandler();\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setError(null);\r\n        reset();\r\n        closeForm();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={true}\r\n            onClose={closeForm}\r\n        >\r\n            <Box sx={style}>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input {...register(\"id\")} type=\"hidden\" />\r\n                    <input {...register(\"previews\")} type=\"hidden\" />\r\n                    <Grid container direction=\"column\" justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }}>\r\n                        <Typography variant=\"h5\" component={'p'} sx={{ padding: '20px', fontWeight: 400, textAlign: 'center' }}>\r\n                            {vacancy.id === 0 ? 'Add Vacancy' : 'Edit Vacancy'}\r\n                        </Typography>\r\n                        <Grid item>\r\n                            <Controller\r\n                                name=\"title\"\r\n                                control={control}\r\n                                render={({ field }) =>\r\n                                    <TextField {...field} label=\"Title\" type=\"text\"\r\n                                        margin=\"normal\" fullWidth\r\n                                        error={Boolean(errors.title)} helperText={errors.title?.message}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl>\r\n                                <Controller\r\n                                    name=\"description\"\r\n                                    control={control}\r\n                                    render={({ field }) =>\r\n                                        <ReactQuill\r\n                                            {...field}\r\n                                            style={{ width: '800px' }}\r\n                                            theme=\"snow\"\r\n                                            value={editorValue}\r\n                                            onChange={setEditorValue}\r\n                                        />\r\n                                    }\r\n                                />\r\n                                <FormHelperText error={Boolean(errors.description)}>{errors.description?.message}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Controller\r\n                                        name=\"isActive\"\r\n                                        control={control}\r\n                                        render={({ field: props }) => (\r\n                                            <Checkbox\r\n                                                {...props}\r\n                                                checked={props.value}\r\n                                                onChange={(e) => props.onChange(e.target.checked)}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                }\r\n                                label=\"Is Active?\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl sx={{ width: 300 }}>\r\n                                <InputLabel id=\"level-label\">Office</InputLabel>\r\n                                <Controller\r\n                                    name=\"officeId\"\r\n                                    defaultValue={offices[1].id}\r\n                                    control={control}\r\n                                    render={({ field }) => (\r\n                                        <Select label=\"Office\" {...field}>\r\n                                            {offices.slice(1).map((office) => <MenuItem key={office.id} value={office.id}>{office.name}</MenuItem>)}\r\n                                        </Select>\r\n                                    )}\r\n                                />\r\n                                <FormHelperText error={true}>{errors.officeId?.message}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }} >\r\n                        <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                            <Button variant=\"outlined\" onClick={onCancelHandler}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                Send\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n            </Box >\r\n        </Modal >\r\n    )\r\n}","import { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { AdminVacancyTableProps } from \"./types\";\r\nimport { IVacancy } from \"../../../types/vacancy\";\r\nimport { Badge, Divider, Paper, Switch, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip, Typography } from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport TablePagination from \"../../../components/TablePagination/TablePagination\";\r\nimport TableHeader from \"../../../components/TableHeader/TableHeader\";\r\nimport { useState } from \"react\";\r\nimport AppDeleteConfirmDialog from \"../../../components/AppDeleteConfirmDialog/AppDeleteConfirmDialog\";\r\n\r\nexport default function AdminVacancyTable({ onEdit }: AdminVacancyTableProps): JSX.Element {\r\n    const { vacancySearchResult } = useTypedSelector(state => state.vacancy);\r\n    const { removeVacancy, setVacancyPage, updateVacancyIsActiveStatus } = useActions();\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState<boolean>(false);\r\n    const [vacancyIdToDelete, setVacancyIdToDelete] = useState<null | number>(null);\r\n\r\n    const onEditHandler = (id: number) => {\r\n        const vacancy = vacancySearchResult.itemList.find(v => v.id === id);\r\n        const vacancyToUpdate: IVacancy = {\r\n            id: vacancy.id,\r\n            title: vacancy.title,\r\n            description: vacancy.description,\r\n            previews: vacancy.previews,\r\n            isActive: vacancy.isActive,\r\n            officeId: vacancy.officeId\r\n        }\r\n        onEdit(vacancyToUpdate);\r\n    }\r\n\r\n    const onChangeIsActive = (id: number) => {\r\n        const choosedVacancy = vacancySearchResult.itemList.find(v => v.id === id);\r\n        const vacancyToUpdate: IVacancy = { ...choosedVacancy };\r\n        vacancyToUpdate.isActive = !choosedVacancy.isActive;\r\n        updateVacancyIsActiveStatus(id, vacancyToUpdate);\r\n    }\r\n\r\n    const onDeleteHandler = (id: number) => {\r\n        setVacancyIdToDelete(id);\r\n        setTimeout(() => {\r\n            setConfirmDialogOpen(true);\r\n        }, 100);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} sx={{ margin: '20px 0' }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHeader titles={['Title', 'Previews', 'Is Active?', 'Office', 'Actions']} />\r\n                    <TableBody>\r\n                        {vacancySearchResult.itemList.map((vacancy) => {\r\n                            return (\r\n                                <TableRow\r\n                                    key={vacancy.id}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\r\n                                            vacancy.candidates?.length > 0 ?\r\n                                                <Typography gutterBottom variant=\"body2\" component=\"div\" sx={{ cursor: 'pointer' }} onClick={() => alert('Should redirect to list of candidates belong to the vacancy. Is not implemented yet.')}>\r\n                                                    <Tooltip title=\"Show candidates (not dismissed)\" placement=\"top\">\r\n                                                        <Badge badgeContent={vacancy.candidates?.filter((c) => c.isDismissed === false).length} color=\"primary\">\r\n                                                            {vacancy.title.length > 60 ? vacancy.title.substring(0, 60) + ' ...' : vacancy.title}\r\n                                                        </Badge>\r\n                                                    </Tooltip>\r\n                                                </Typography>\r\n                                                :\r\n                                                <Typography gutterBottom variant=\"body2\" component=\"div\" >\r\n                                                    {vacancy.title.length > 60 ? vacancy.title.substring(0, 60) + ' ...' : vacancy.title}\r\n                                                </Typography>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{vacancy.previews}</TableCell>\r\n                                    <TableCell align=\"center\" >\r\n                                        <Switch checked={vacancy.isActive} onClick={() => onChangeIsActive(vacancy.id)} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{vacancy.officeDto ? vacancy.officeDto.name : '...Please refresh the page...'}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                            <Tooltip title=\"Edit Vacancy\" placement=\"top\">\r\n                                                <EditIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: '#0072ea' }} onClick={() => onEditHandler(vacancy.id)} />\r\n                                            </Tooltip>\r\n                                            <Divider orientation=\"vertical\" flexItem />\r\n                                            <Tooltip title=\"Remove Vacancy\" placement=\"top\">\r\n                                                <DeleteIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: 'red' }} onClick={() => onDeleteHandler(vacancy.id)} />\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                count={Math.ceil(vacancySearchResult.totalItemCount / vacancySearchResult.pageSize)}\r\n                onChangePage={(value: number) => setVacancyPage(value)}\r\n            />\r\n            {confirmDialogOpen && <AppDeleteConfirmDialog onCancel={() => setConfirmDialogOpen(false)} onDelete={() => removeVacancy(vacancyIdToDelete)} />}\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IVacancy, VacancyStatus } from \"../../../types/vacancy\";\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport AdminVacancyFilters from \"./AdminVacancyFilters\";\r\nimport AdminVacancyForm from \"./AdminVacancyForm\";\r\nimport AdminVacancyTable from \"./AdminVacancyTable\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function AdminVacancyPage(): JSX.Element {\r\n    const { errorFilters, errorVacancies, offices, vacancySearchResult, filters } = useTypedSelector(state => state.vacancy);\r\n    const { getOfficeNameIdDtos, getVacanciesTitles, getVacancies } = useActions();\r\n    const [vacancy, setVacancy] = useState<IVacancy | null>(null);\r\n\r\n    useEffect(() => {\r\n        getOfficeNameIdDtos();\r\n        getVacanciesTitles(vacancySearchResult.searchCriteria, filters.officeId);\r\n        getVacancies(5, vacancySearchResult.currentPageNumber, vacancySearchResult.searchCriteria,\r\n            VacancyStatus.All, filters.officeId, \"Title\", vacancySearchResult.order);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [vacancySearchResult.searchCriteria, filters.officeId, vacancySearchResult.currentPageNumber])\r\n\r\n    const onCreateEdit = (vacancy: null | IVacancy) => setVacancy(vacancy);\r\n\r\n    if (errorFilters) return <ErrorMessage appearance={MessageAppearance.REGULAR}>{errorFilters}</ErrorMessage>;\r\n    if (errorVacancies) return <ErrorMessage appearance={MessageAppearance.REGULAR}>{errorVacancies}</ErrorMessage>;\r\n\r\n    return (\r\n        <>\r\n            <AdminVacancyFilters onAddNew={() => setVacancy({ id: 0, title: '', description: 'Vacancy Description', previews: 0, isActive: true, officeId: offices[1].id })} />\r\n            <AdminVacancyTable onEdit={onCreateEdit} />\r\n            {vacancy && <AdminVacancyForm vacancy={vacancy} closeForm={() => setVacancy(null)} />}\r\n        </>\r\n    )\r\n}","import { Box, Button } from \"@mui/material\";\r\nimport { LoadMoreButtonProps } from \"./types\";\r\n\r\nexport default function LoadMoreButton({ isDisabled, onClickHandler, children }: LoadMoreButtonProps): JSX.Element {\r\n    return (\r\n        <Box mt={3} mb={3} textAlign=\"center\">\r\n            <Button\r\n                onClick={onClickHandler}\r\n                variant=\"outlined\"\r\n                disabled={isDisabled}>\r\n                {children}\r\n            </Button>\r\n        </Box>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { ServiceCardProps } from \"./types\";\r\nimport './styles.css';\r\n\r\nexport default function ServiceCard({ service }: ServiceCardProps): JSX.Element {\r\n    return (\r\n        <>\r\n            <Grid item xs={12} md={6}>\r\n                <h5 className=\"card-header\">{service.title}</h5>\r\n                <p id=\"service-description\">{service.description}</p>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <img className=\"card-img\" alt=\"Company service\" src={service.imageUrl} />\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n}","import { Grid } from \"@mui/material\";\r\nimport ServiceCard from \"./ServiceCard\";\r\nimport { ServiceListProps } from \"./types\";\r\n\r\nexport default function ServicesList({ services }: ServiceListProps): JSX.Element {\r\n    return (\r\n        <Grid container spacing={2} className=\"page-chapter-container\">\r\n            {services.map(service => <ServiceCard key={service.id} service={service} />)}\r\n        </Grid>\r\n    )\r\n}","import CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function Spinner(): JSX.Element {\r\n    return (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center', marginTop: '20px' }}>\r\n            <CircularProgress />\r\n        </Box>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport { CompanyServiceStatus } from \"../../types/companyService\";\r\nimport LoadMoreButton from \"../../components/Button/LoadMoreButton\";\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport ServicesList from \"../../components/ServiceList/ServicesList\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { Container } from \"@mui/material\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\n\r\nexport default function ServicesPage(): JSX.Element {\r\n    const { error, serviceSearchResult, loading } = useTypedSelector(state => state.service);\r\n    const { getServices, loadMoreServices, setServicePage } = useActions();\r\n\r\n    useEffect(() => {\r\n        if (serviceSearchResult.itemList.length === 0) \r\n            getServices(serviceSearchResult.pageSize, 1, CompanyServiceStatus.Active, OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const loadMoreHandler = () => {\r\n        loadMoreServices(serviceSearchResult.pageSize, serviceSearchResult.currentPageNumber + 1, CompanyServiceStatus.Active, OrderType.Ascending);\r\n        setServicePage(serviceSearchResult.currentPageNumber + 1);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Services\"\r\n                text=\"Shuffle works with a variety of different technologies, offering our clients a wide range of flexibility.\"\r\n            />\r\n            <ServicesList services={serviceSearchResult.itemList} />\r\n            {loading ?\r\n                <Spinner /> :\r\n                error && <ErrorMessage appearance={MessageAppearance.LARGE}>{error}</ErrorMessage>\r\n            }\r\n            <LoadMoreButton\r\n                onClickHandler={loadMoreHandler}\r\n                isDisabled={serviceSearchResult.currentPageNumber * serviceSearchResult.pageSize >= serviceSearchResult.totalItemCount}\r\n            >\r\n                {loading ? 'Loading...' : 'Load more'}\r\n            </LoadMoreButton>\r\n        </Container>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { IMailMessage } from '../types/common/mailMessage';\r\n\r\nexport async function sendEmailAxios(email: IMailMessage): Promise<string> {\r\n    return (await axios.post(\"/mailsubscriber/sendmessagetoadmin\", email)).data;\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { IMailMessage } from \"../../types/common/mailMessage\";\r\nimport { EMAIL_REG_EXP } from \"../../types/common/RegularExpressions\";\r\nimport { sendEmailAxios } from \"../../api/email\";\r\nimport { Button, Grid, IconButton, InputAdornment, Snackbar, TextField } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\n\r\nexport default function ContactForm(): JSX.Element {\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [openSnackBar, setOpenSnackBar] = useState<boolean>(false);\r\n    const [serverConfirmation, setServerConfirmation] = useState<string>('');\r\n\r\n    const validationSchema = Yup.object({\r\n        senderName: Yup.string()\r\n            .required('Name is a required field.')\r\n            .min(2, 'Name must be at least 2 characters.')\r\n            .max(50, 'The field Name may not be greater than 50 characters.'),\r\n        senderEmail: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid.\"),\r\n        subject: Yup.string()\r\n            .required('Subject is a required field')\r\n            .min(2, 'Subject must be at least 2 characters.')\r\n            .max(255, 'The field Subject may not be greater than 255 characters.'),\r\n        message: Yup.string()\r\n            .required('Message is a required field')\r\n            .min(2, 'Message must be at least 2 characters.')\r\n            .max(1024, 'The field Message may not be greater than 1024 characters.')\r\n    })\r\n\r\n    const defaultValues: IMailMessage = {\r\n        senderName: '', senderEmail: '', subject: '', message: ''\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({ resolver: yupResolver(validationSchema), defaultValues })\r\n\r\n    const sendEmail = async (message: IMailMessage) => {\r\n        try {\r\n            setLoading(true);\r\n            const responceFromServer: string = await sendEmailAxios(message);\r\n            setServerConfirmation(responceFromServer);\r\n            setOpenSnackBar(true);\r\n        } catch (e) {\r\n            setError(\"Oops! Something while sending sending the message. Please try again later.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (message: IMailMessage): void => {\r\n        sendEmail(message);\r\n    }\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') return;\r\n        setOpenSnackBar(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container justifyContent=\"space-between\" spacing={2} >\r\n                    <Grid item sm={6} xs={12}>\r\n                        <Controller\r\n                            name=\"senderName\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Name\" type=\"text\" margin=\"normal\" fullWidth\r\n                                    error={Boolean(errors.senderName)} helperText={errors.senderName?.message} />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <Controller\r\n                            name=\"senderEmail\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Email\" type=\"email\" margin=\"normal\" fullWidth\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton edge=\"end\" aria-label=\"Email\" >\r\n                                                    <MailOutlineIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>),\r\n                                    }}\r\n                                    error={Boolean(errors.senderEmail)} helperText={errors.senderEmail?.message} />}\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid>\r\n                    <Controller\r\n                        name=\"subject\"\r\n                        control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Subject\" type=\"text\" margin=\"normal\" size=\"medium\" fullWidth\r\n                                error={Boolean(errors.subject)} helperText={errors.subject?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid>\r\n                    <Controller\r\n                        name=\"message\"\r\n                        control={control}\r\n                        render={({ field }) =>\r\n                            <TextField {...field} label=\"Message\" type=\"text\" margin=\"normal\" size=\"medium\" fullWidth\r\n                                error={Boolean(errors.message)} helperText={errors.message?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px 0' }} >\r\n                    <Grid item sm={6} xs={12} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={() => reset()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" type=\"submit\">\r\n                            {loading ? 'Sending...' : 'Send'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Snackbar open={openSnackBar} message={serverConfirmation} autoHideDuration={4000} onClose={handleClose} />\r\n            </form>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </>\r\n    )\r\n}","import { Grid, Typography } from \"@mui/material\";\r\nimport { IContactInfoCardProps } from \"./types\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nexport default function ContactInfoCard({ contactInfoItem }: IContactInfoCardProps): JSX.Element {\r\n\r\n    const icons = [\r\n        <HomeIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />,\r\n        <LocalPhoneIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />,\r\n        <MailOutlineIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />,\r\n        <AccessTimeIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />\r\n    ]\r\n\r\n    return (\r\n        <Grid item xs={12} md={6} className=\"contact-info-card\" >\r\n            {icons[contactInfoItem.icon]}\r\n            <p className=\"contact-info-header\">\r\n                <strong>{contactInfoItem.title}</strong>\r\n            </p>\r\n            {contactInfoItem.lines.map((line) => <Typography key={line} variant=\"body2\">{line}</Typography>)}\r\n        </Grid>\r\n    )\r\n}","export interface IContactInfo {\r\n    icon: number;\r\n    title: string;\r\n    lines: string[];\r\n}\r\n\r\nexport interface IContactInfoCardProps {\r\n    contactInfoItem: IContactInfo;\r\n}\r\n\r\nexport const contactInfoItems: IContactInfo[] = [\r\n    { icon: 0, title: \"ADDRESS\", lines: [\"A108 Adam Street,\", \"New York, NY 535022\"] },\r\n    { icon: 1, title: \"CALL US\", lines: [\"+1 5589 55488 55\", \"+1 5589 22548 64\"] },\r\n    { icon: 2, title: \"EMAIL US\", lines: [\"contact@example.com\", \"info @example.com\"] },\r\n    { icon: 3, title: \"WORKING HOURS\", lines: [\"Mon - Fri: 9AM to 6PM\", \"Sunday: 9AM to 1PM\"] }\r\n]\r\n\r\n","import { Grid } from \"@mui/material\";\r\nimport ContactInfoCard from \"./ContactInfoCard\";\r\nimport { contactInfoItems } from \"./types\";\r\n\r\nexport default function ContactInfoCardsList(): JSX.Element {\r\n    return (\r\n        <Grid container>\r\n            {contactInfoItems.map((item) => <ContactInfoCard key={item.title} contactInfoItem={item} />)}\r\n        </Grid>\r\n    )\r\n}","import { Container, Grid, Typography } from \"@mui/material\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport ContactInfoCardsList from \"./ContactInfoCardsList\";\r\nimport './styles.css';\r\n\r\nexport default function ContactPage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Contact Us\"\r\n                text=\"We can’t wait to hear about your latest project. Need to request a quote, learn more about our service offering or ask a question?\"\r\n            />\r\n            <Grid container spacing={2} className=\"page-chapter-container\">\r\n                <Grid item xs={12} md={6}>\r\n                    <ContactInfoCardsList />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h5\" textAlign={'center'}>\r\n                        Or complete the contact form below <strong>and we’ll get back to you as soon as we can.</strong>\r\n                    </Typography>\r\n                    <ContactForm />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import Grid from '@mui/material/Grid';\r\nimport '../../index.css';\r\nimport { Props } from './types';\r\nimport { Container, Typography } from '@mui/material';\r\nimport PageHeader from '../../components/PageHeader/PageHeader';\r\n\r\nexport default function ErrorPage({ status = '500', message = 'Internal Server Error' }: Props): JSX.Element {\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader title=\"Oops! Something went wrong.\" />\r\n            <Grid>\r\n                <Typography component={'p'} sx={{ padding: '10px', marginTop: '20px' }}>\r\n                    Error status: {status}\r\n                </Typography>\r\n                <Typography component={'p'} sx={{ color: 'red', padding: '10px' }}>\r\n                    {message}\r\n                </Typography>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n};\r\n","import { Button, Container, Grid, Paper } from \"@mui/material\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { RouteNames } from '../../routing';\r\nimport './styles.css';\r\n\r\nexport default function HeaderChapter(): JSX.Element {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Paper className=\"header-chapter-bg\">\r\n            <Container fixed maxWidth='md' sx={{ padding: '0 30px' }} >\r\n                <Grid container direction=\"column\" alignContent=\"center\" maxWidth=\"50%\">\r\n                    <Grid item mt={10} mb={3}>\r\n                        <h3 className=\"header-chapter-header\">Shuffle Solutions</h3>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <p id=\"description\">\r\n                            Our industry leading team will drive and support your digital projects end to end.\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid item mt={4} mb={8}>\r\n                        <Button className='btn-transit' variant='contained' color='primary'\r\n                            onClick={() => { navigate(RouteNames.SERVICES); window.scroll(0, 0) }}\r\n                        >\r\n                            Learn more ...\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Paper>\r\n    )\r\n}","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RouteNames } from \"../../routing\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { CompanyServiceStatus } from \"../../types/companyService\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport ServicesList from \"../../components/ServiceList/ServicesList\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport LoadMoreButton from \"../../components/Button/LoadMoreButton\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\n\r\nexport default function ServiceChapter(): JSX.Element {\r\n    const { error, serviceSearchResult, loading } = useTypedSelector(state => state.service);\r\n    const { getServices } = useActions();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (serviceSearchResult.itemList.length === 0) \r\n            getServices(serviceSearchResult.pageSize, 1, CompanyServiceStatus.Active, OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title=\"Services\"\r\n                text=\"Shuffle works with a variety of different technologies, offering our clients a wide range of flexibility.\"\r\n            />\r\n            {loading ?\r\n                <Spinner /> :\r\n                error ?\r\n                    <ErrorMessage appearance={MessageAppearance.LARGE}>{error}</ErrorMessage> :\r\n                    <ServicesList services={serviceSearchResult.itemList.slice(0, 3)} />\r\n            }\r\n            <LoadMoreButton isDisabled={error && error.length > 0} onClickHandler={() => { navigate(RouteNames.SERVICES); window.scroll(0, 0) }} >\r\n                See All\r\n            </LoadMoreButton>\r\n        </>\r\n    )\r\n}","import { Card, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport { EmployeeCardProps } from \"./types\";\r\nimport './styles.css';\r\n\r\nexport default function EmployeeCard({ employee }: EmployeeCardProps): JSX.Element {\r\n    return (\r\n        <Grid item xs={12} md={4} textAlign='center'>\r\n            <Card elevation={16}>\r\n                <img\r\n                    className=\"employee-card-img\"\r\n                    // width='90%'\r\n                    alt=\"Employee\"\r\n                    src={employee.avatarUrl}\r\n                />\r\n                <CardContent>\r\n                    <p className=\"full-name\">{employee.fullName}</p>\r\n                    <p className=\"position\">{employee.position}</p>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {employee.description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n};","import { Grid } from \"@mui/material\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport { EmployeeListProps } from \"./types\";\r\n\r\nexport default function EmployeesList({ employees }: EmployeeListProps): JSX.Element {\r\n    return (\r\n        <Grid container spacing={2} className=\"page-chapter-container\">\r\n            {employees.map(employee => <EmployeeCard employee={employee} key={employee.id} />)}\r\n        </Grid>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport LoadMoreButton from \"../../components/Button/LoadMoreButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RouteNames } from \"../../routing\";\r\nimport EmployeesList from \"../../components/EmployeeList/EmployeesList\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\n\r\nexport default function TeamChapter(): JSX.Element {\r\n    const { error, employeeSearchResult, loading } = useTypedSelector(state => state.employee);\r\n    const { getEmployees } = useActions();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (employeeSearchResult.itemList.length === 0) getEmployees(employeeSearchResult.pageSize, 1, '', 'FullName', OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title=\"Our Team\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem. Sit sint consectetur velit. Quisquam quos quisquam cupiditate. Et nemo qui impedit suscipit alias ea. Quia fugiat sit in iste officiis commodi quidem hic quas.\"\r\n            />\r\n            {loading ?\r\n                <Spinner /> :\r\n                error ?\r\n                    <ErrorMessage appearance={MessageAppearance.LARGE}>{error}</ErrorMessage> :\r\n                    <EmployeesList employees={employeeSearchResult.itemList.slice(0, 3)} />\r\n            }\r\n            <LoadMoreButton isDisabled={error && error.length > 0} onClickHandler={() => { navigate(RouteNames.TEAM); window.scroll(0, 0) }} >\r\n                See All\r\n            </LoadMoreButton>\r\n        </>\r\n    )\r\n}","import { IStatCardProps } from './types';\r\nimport { Motion, spring } from 'react-motion';\r\nimport { Grid, Paper } from '@mui/material';\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport HeadphonesIcon from '@mui/icons-material/Headphones';\r\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAlt';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\n\r\nexport default function StatCard({ item }: IStatCardProps): JSX.Element {\r\n\r\n    const icons = [\r\n        <SentimentSatisfiedAltIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />,\r\n        <EventNoteIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />,\r\n        <HeadphonesIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />,\r\n        <PeopleIcon fontSize='large' style={{ color: 'rgb(27, 188, 163)' }} />\r\n    ]\r\n\r\n    return (\r\n        <Paper elevation={6} className='stat-card' >\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" className='stat-card-top' sx={{ padding: '0 15px 0 5px' }}>\r\n                {icons[item.icon]}\r\n                <Motion defaultStyle={{ x: 0 }} style={{ x: spring(item.maxNumber, { stiffness: 50, damping: 20 }) }}>\r\n                    {(value: { x: number; }) => <span className=\"page-header\">{value.x.toFixed(0)}</span>}\r\n                </Motion>\r\n            </Grid>\r\n            <p className=\"stat-card-content\">{item.content}</p>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <a href={item.redirectLink} className='stat-card-link'>Find out more »</a>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n","export interface IStatCard {\r\n    icon: number;\r\n    maxNumber: number;\r\n    content: string;\r\n    redirectLink: string;\r\n}\r\n\r\nexport interface IStatCardProps {\r\n    item: IStatCard;\r\n}\r\n\r\nexport const statCardItems: IStatCard[] = [\r\n    { icon: 0, maxNumber: 232, content: 'Happy Clients consequuntur quae qui deca rode', redirectLink: '#' },\r\n    { icon: 1, maxNumber: 521, content: 'Projects adipisci atque cum quia aut numquam delectus', redirectLink: '#' },\r\n    { icon: 2, maxNumber: 1463, content: 'Hours Of Support aut commodi quaerat. Aliquam ratione', redirectLink: '#' },\r\n    { icon: 3, maxNumber: 15, content: 'Hard Workers rerum asperiores dolor molestiae doloribu', redirectLink: '#' }\r\n]","import { Grid } from '@mui/material'\r\nimport StatCard from \"./StatCard\"\r\nimport { statCardItems } from \"./types\"\r\n\r\nexport default function StatisticsChapter(): JSX.Element {\r\n    return (\r\n        <Grid container spacing={2} className='layout-container-grey' direction='row' justifyContent={'space-around'} alignItems={'center'}>\r\n            {statCardItems.map((item) => <StatCard key={item.content} item={item} />)}\r\n        </Grid>\r\n    )\r\n}\r\n","import { Container } from '@mui/material';\r\nimport AboutPage from '../About/AboutPage';\r\nimport ContactPage from '../Contact/ContactPage';\r\nimport HeaderChapter from './HeaderChapter';\r\nimport ServiceChapter from './ServiceChapter';\r\nimport TeamChapter from './TeamChapter';\r\nimport StatisticsChapter from './StatisticsChapter';\r\n\r\nexport default function HomePage(): JSX.Element {\r\n    return (\r\n        <>\r\n            <HeaderChapter />\r\n\r\n            <Container maxWidth=\"lg\" className='layout-container' >\r\n\r\n                <AboutPage />\r\n\r\n                <ServiceChapter />\r\n\r\n                <StatisticsChapter />\r\n\r\n                <TeamChapter />\r\n\r\n                <ContactPage />\r\n\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { ILoginDto } from \"../../../types/auth\";\r\nimport { EMAIL_REG_EXP, PASSWORD_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { loginAxios } from \"../../../api/auth\";\r\nimport { RouteNames } from \"../../../routing\";\r\nimport { Button, Checkbox, FormControlLabel, Grid, IconButton, InputAdornment, TextField } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\nimport { Roles } from \"../../../types/auth\";\r\n\r\nexport default function LoginForm(): JSX.Element {\r\n    const { login } = useActions();\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        password: Yup.string()\r\n            .max(100, 'The field Password may not be greater than 100 characters.')\r\n            .matches(PASSWORD_REG_EXP, \"Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\"),\r\n        remember: Yup.boolean()\r\n            .required()\r\n    })\r\n\r\n    const defaultValues: ILoginDto = { email: '', password: '', remember: true }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(validationSchema), defaultValues\r\n    })\r\n\r\n    const onSubmit = async (loginModel: ILoginDto) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const authModel = await loginAxios(loginModel);\r\n            localStorage.setItem(\"auth\", JSON.stringify(authModel));\r\n            login(authModel);\r\n            reset();\r\n            (authModel.roles.includes(Roles.ADMIN) || authModel.roles.includes(Roles.DEMO)) ?\r\n                navigate(RouteNames.DASHBOARD) : navigate(RouteNames.HOME)\r\n        } catch (e) {\r\n            setError(e.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    if (error) return <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-centered\">\r\n            <Grid container direction=\"column\" alignContent=\"center\" mt={2}>\r\n                <Grid item>\r\n                    <Controller\r\n                        name=\"email\"\r\n                        control={control}\r\n                        render={({ field }) =>\r\n                            <TextField {...field} label=\"Email\" type=\"email\" margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.email)} helperText={errors.email?.message}\r\n                            />\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"password\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Password\" type={showPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.password)} helperText={errors.password?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel\r\n                        sx={{ marginTop: '10px' }}\r\n                        control={\r\n                            <Controller name=\"remember\" control={control}\r\n                                render={({ field: props }) =>\r\n                                    <Checkbox  {...props} checked={props.value}\r\n                                        onChange={(event) => props.onChange(event.target.checked)} />}\r\n                            />\r\n                        }\r\n                        label={<p>Remember Me?</p>}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container sx={{ marginTop: '-20px' }} spacing={5} direction=\"row\" justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" onClick={() => navigate(RouteNames.HOME)}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                {loading ? 'Sending...' : 'Log In'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n","import { Container, Grid, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport { RouteNames } from \"../../../routing\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function LoginPage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Sign In.\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem.\"\r\n            />\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <LoginForm />\r\n                <Typography component={'p'} my={3} >\r\n                    Or <Link to={RouteNames.REGISTER}>Sign Up</Link> if you don't have an account yet.\r\n                </Typography>\r\n                <Typography component={'p'} mb={3} >\r\n                    <Link to={RouteNames.FORGOT_PASSWORD}>Forgot password?</Link>\r\n                </Typography>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import { Container, Grid, Typography } from \"@mui/material\"\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\"\r\n\r\nexport default function RegisterCompletePage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Registration Successful.\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem.\"\r\n            />\r\n            <Grid container>\r\n                <Grid item>\r\n                    <Typography component={'p'} sx={{ padding: '30px 0' }}>\r\n                        Please check your mail-box and confirm the email-address before login.\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { RouteNames } from \"../../../routing\";\r\nimport { registerAxios } from \"../../../api/auth\";\r\nimport { IRegisterDto } from \"../../../types/auth\";\r\nimport { EMAIL_REG_EXP, PASSWORD_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { Button, Grid, IconButton, InputAdornment, TextField } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function RegisterForm(): JSX.Element {\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false);\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        password: Yup.string()\r\n            .max(100, 'The field Password may not be greater than 100 characters.')\r\n            .matches(PASSWORD_REG_EXP, \"Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\"),\r\n        confirmPassword: Yup.string()\r\n            .matches(PASSWORD_REG_EXP, \"Confirm Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\")\r\n    })\r\n\r\n    const defaultValues: IRegisterDto = { email: '', password: '', confirmPassword: '' }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(validationSchema), defaultValues\r\n    })\r\n\r\n    const onSubmit = async (registerDto: IRegisterDto) => {\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            await registerAxios({\r\n                email: registerDto.email,\r\n                password: registerDto.password,\r\n                confirmPassword: registerDto.confirmPassword\r\n            });\r\n            reset();\r\n            navigate(RouteNames.REGISTER_COMPLETE);\r\n        } catch (e) {\r\n            setError(e.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-centered\">\r\n            <Grid container direction=\"column\" alignContent=\"center\" mt={2}>\r\n                <Grid item>\r\n                    <Controller name=\"email\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Email\" type=\"email\"\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.email)} helperText={errors.email?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"password\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Password\" type={showPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.password)} helperText={errors.password?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"confirmPassword\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField {...field} label=\"Confirm Password\" type={showConfirmPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.confirmPassword)} helperText={errors.confirmPassword?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item my={3}>\r\n                    <Grid container spacing={5} direction=\"row\" justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" onClick={() => navigate(RouteNames.HOME)}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                {loading ? 'Sending...' : 'Sign Up'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n","import { Container, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nexport default function RegisterPage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Sign Up.\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem.\"\r\n            />\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <RegisterForm />\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport EmployeesList from \"../../components/EmployeeList/EmployeesList\";\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport LoadMoreButton from \"../../components/Button/LoadMoreButton\";\r\nimport { Container } from \"@mui/material\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\n\r\nexport default function TeamPage(): JSX.Element {\r\n    const { error, employeeSearchResult, loading } = useTypedSelector(state => state.employee);\r\n    const { getEmployees, loadMoreEmployees, setEmployeePage } = useActions();\r\n\r\n    useEffect(() => {\r\n        if (employeeSearchResult.itemList.length === 0) getEmployees(employeeSearchResult.pageSize, 1, '', 'FullName', OrderType.Ascending)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const loadMoreHandler = () => {\r\n        loadMoreEmployees(3, employeeSearchResult.currentPageNumber + 1, '', 'FullName', OrderType.Ascending);\r\n        setEmployeePage(employeeSearchResult.currentPageNumber + 1);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Our Team\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem. Sit sint consectetur velit. Quisquam quos quisquam cupiditate. Et nemo qui impedit suscipit alias ea. Quia fugiat sit in iste officiis commodi quidem hic quas.\"\r\n            />\r\n            <EmployeesList employees={employeeSearchResult.itemList} />\r\n            {loading ?\r\n                <Spinner /> :\r\n                error && <ErrorMessage appearance={MessageAppearance.LARGE}>{error}</ErrorMessage>\r\n            }\r\n            <LoadMoreButton\r\n                onClickHandler={loadMoreHandler}\r\n                isDisabled={employeeSearchResult.currentPageNumber * employeeSearchResult.pageSize >= employeeSearchResult.totalItemCount}\r\n            >\r\n                {loading ? 'Loading...' : 'Load more'}\r\n            </LoadMoreButton>\r\n        </Container>\r\n    )\r\n}\r\n","import { useActions } from \"../../../hooks/useActions\";\r\nimport { Grid } from \"@mui/material\"\r\nimport SearchTextFilter from \"../../../components/FiltersArea/SearchTextFilter/SearchTextFilter\"\r\n\r\nexport default function AdminUserFilters(): JSX.Element {\r\n    const { setUserPage, setUserSearchCriteria } = useActions();\r\n\r\n    const onChangeSearch = (search: string): void => {\r\n        if (search.length === 0) setUserSearchCriteria(\"\");\r\n        if (search.length < 3) return;\r\n        setUserPage(1);\r\n        setUserSearchCriteria(search);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'space-between'} alignItems={'center'}>\r\n            <SearchTextFilter title=\"Search user\" onSearch={onChangeSearch} />\r\n        </Grid>\r\n    )\r\n}","import { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IUser } from \"../../../types/user\";\r\nimport { Paper, Switch, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip } from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport TableHeader from \"../../../components/TableHeader/TableHeader\";\r\nimport TablePagination from \"../../../components/TablePagination/TablePagination\";\r\n\r\nexport default function AdminUserTable(): JSX.Element {\r\n    const { userSearchResult } = useTypedSelector(state => state.user);\r\n    const { setUserPage, updateUserEmailConfirmedStatus } = useActions();\r\n\r\n    const onChangeEmailConfirmed = (id: string): void => {\r\n        const choosedUser = userSearchResult.itemList.find(c => c.id === id);\r\n        const userToUpdate: IUser = { ...choosedUser };\r\n        userToUpdate.emailConfirmed = !choosedUser.emailConfirmed;\r\n        updateUserEmailConfirmedStatus(id, userToUpdate);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} sx={{ margin: '20px 0' }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHeader titles={['Username', 'Email', 'Email Confirmed?', 'Phone', 'Avatar Url', 'Actions']} />\r\n                    <TableBody>\r\n                        {userSearchResult.itemList.map((user) => (\r\n                            <TableRow key={user.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                <TableCell component=\"th\" scope=\"row\">{user.userName}</TableCell>\r\n                                <TableCell align=\"left\">{user.email}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <Switch checked={user.emailConfirmed} onClick={() => onChangeEmailConfirmed(user.id)} />\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{user.phoneNumber}</TableCell>\r\n                                <TableCell align=\"left\">{user.avatarUrl.slice(0, 15).concat('...')}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <Tooltip title=\"Remove User\" placement=\"top\">\r\n                                            <DeleteIcon sx={{ cursor: 'pointer', margin: '0 5px', fill: 'red' }} onClick={() => alert(\"Delete is not implemented yet.\" + user.id)} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                count={Math.ceil(userSearchResult.totalItemCount / userSearchResult.pageSize)}\r\n                onChangePage={(value: number) => setUserPage(value)}\r\n            />\r\n        </>\r\n    )\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport AdminUserFilters from './AdminUserFilters';\r\nimport AdminUserTable from './AdminUserTable';\r\n\r\nexport default function AdminUsersPage(): JSX.Element {\r\n    const { userSearchResult, filters } = useTypedSelector(state => state.user);\r\n    const { getUsers } = useActions();\r\n    \r\n    useEffect(() => {\r\n        getUsers(userSearchResult.pageSize, userSearchResult.currentPageNumber, filters)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters, userSearchResult.currentPageNumber]);\r\n    \r\n    return (\r\n        <>\r\n            <AdminUserFilters />\r\n            <AdminUserTable />\r\n        </>\r\n    );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { Grid } from \"@mui/material\";\r\nimport SelectItemsFilter from \"../../components/FiltersArea/SelectItemFilter/SelectItemFilter\";\r\nimport AutocompleteFilter from \"../../components/FiltersArea/AutocompleteFilter/AutocompleteFilter\";\r\n\r\nexport default function VacanciesFilters(): JSX.Element {\r\n    const { getOfficeNameIdDtos, getVacanciesTitles, setVacancyPage, setVacancyOfficeFilter, setVacancySearchCriteria } = useActions();\r\n    const { filters, offices, titles } = useTypedSelector(state => state.vacancy);\r\n\r\n    useEffect(() => {\r\n        getOfficeNameIdDtos();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getVacanciesTitles(\"\", filters.officeId);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters.officeId])\r\n\r\n    const onSelectChanged = (newValue: string) => {\r\n        setVacancyPage(1);\r\n        setVacancyOfficeFilter(newValue);\r\n    }\r\n\r\n    function searchTitleChanged(event, values) {\r\n        setVacancyPage(1);\r\n        setVacancySearchCriteria(values === null ? \"\" : values);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} direction='row' justifyContent={'space-between'} alignItems={'center'}>\r\n            <SelectItemsFilter\r\n                items={offices.map((o) => { return { id: o.id, name: o.name } })}\r\n                label=\"Office\"\r\n                onSelectChanged={onSelectChanged}\r\n                value={filters.officeId}\r\n            />\r\n            <AutocompleteFilter label=\"Search by title\" options={titles} onSearch={(event, values) => searchTitleChanged(event, values)} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import { FC, PropsWithChildren, useRef } from 'react'\r\nimport useElementOnScreen from '../../hooks/useElementOnScreen';\r\n\r\n// read more about Simple React Scroll Animations With Zero Dependencies: https://betterprogramming.pub/simple-react-scroll-animations-with-zero-dependencies-b496c1e1c7bd\r\n\r\nexport const AnimateIn: FC<PropsWithChildren> = ({ children }) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const onScreen = useElementOnScreen(ref);\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            style={{\r\n                opacity: onScreen ? 1 : 0,\r\n                translate: onScreen ? \"none\" : \"0 2rem\",\r\n                transition: \"1500ms ease-in-out\",\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { RefObject, useEffect, useState } from \"react\";\r\n\r\nexport default function useElementOnScreen(ref: RefObject<Element>, rootMargin = \"0px\") {\r\n    const [isIntersecting, setIsIntersecting] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(([entry]) => { setIsIntersecting(entry.isIntersecting) }, { rootMargin });\r\n        if (ref.current) observer.observe(ref.current);\r\n\r\n        return () => {\r\n            // eslint-disable-next-line\r\n            if (ref.current) observer.unobserve(ref.current);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return isIntersecting;\r\n}","import { useNavigate } from \"react-router-dom\";\r\nimport { RouteNames } from \"../../routing\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { VacancyCardProps } from \"./types\";\r\nimport { Badge, Box, Button, Card, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { AnimateIn } from \"../../components/AnimateIn/AnimateIn\";\r\n\r\nexport default function VacancyCard({ vacancy }: VacancyCardProps): JSX.Element {\r\n    const navigate = useNavigate();\r\n    const { incrementPreviews } = useActions();\r\n    const { auth } = useTypedSelector(state => state.auth);\r\n\r\n    const showDetailesHandler = () => {\r\n        incrementPreviews(vacancy.id, vacancy.previews + 1);\r\n        navigate(RouteNames.VACANCY + `/${vacancy.id}`);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} md={4} textAlign='left'>\r\n            <AnimateIn>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"stretch\">\r\n                            <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n                                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                    {vacancy.officeDto.name}\r\n                                </Typography>\r\n                                {\r\n                                    auth && vacancy.candidates?.filter(c => c.email === auth.user.email).length > 0 && <FavoriteIcon color=\"primary\" />\r\n                                }\r\n                            </Grid>\r\n                            <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                {vacancy.officeDto.address}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ cursor: 'pointer' }} onClick={showDetailesHandler}>\r\n                                <Badge badgeContent={vacancy.previews} color=\"primary\">\r\n                                    {vacancy.title.substring(0, 15) + ' ...'}\r\n                                </Badge>\r\n                            </Typography>\r\n\r\n                            <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n                                <div>\r\n                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                        {'Previews: ' + vacancy.previews}\r\n                                    </Typography>\r\n                                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                        {'Candidates: ' + vacancy.candidates?.length}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Box sx={{ textAlign: 'right' }}>\r\n                                        <Button variant=\"outlined\" size=\"small\" onClick={showDetailesHandler}>More...</Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </AnimateIn>\r\n        </Grid>\r\n    )\r\n};","import { VacancyListProps } from \"./types\";\r\nimport { Grid } from \"@mui/material\";\r\nimport VacancyCard from \"./VacancyCard\";\r\n\r\nexport default function VacanciesList({ vacancies }: VacancyListProps): JSX.Element {\r\n    return (\r\n        <Grid container spacing={2} sx={{ margin: '30px 0', padding: '0', width: '100%' }}>\r\n            {vacancies.map(vacancy => (<VacancyCard key={vacancy.id} vacancy={vacancy} />))}\r\n        </Grid>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport LoadMoreButton from \"../../components/Button/LoadMoreButton\";\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport VacanciesFilters from \"./VacanciesFilters\";\r\nimport VacanciesList from \"./VacanciesList\";\r\nimport { Container } from \"@mui/material\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\n\r\nexport default function VacanciesPage(): JSX.Element {\r\n    const { errorFilters, errorVacancies, loadingVacancies, vacancySearchResult, filters } = useTypedSelector(state => state.vacancy);\r\n    const { getVacancies, setVacancyPage, loadMoreVacancies } = useActions();\r\n\r\n    useEffect(() => {\r\n        getVacancies(vacancySearchResult.pageSize, vacancySearchResult.currentPageNumber, vacancySearchResult.searchCriteria,\r\n            filters.active, filters.officeId, \"Title\", vacancySearchResult.order);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [vacancySearchResult.searchCriteria, filters.officeId])\r\n\r\n    const loadMoreHandler = () => {\r\n        loadMoreVacancies(vacancySearchResult.pageSize, vacancySearchResult.currentPageNumber + 1, vacancySearchResult.searchCriteria,\r\n            filters.active, filters.officeId, \"Title\", vacancySearchResult.order)\r\n        setVacancyPage(vacancySearchResult.currentPageNumber + 1);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader title=\"Vacancies\" />\r\n            {\r\n                errorFilters ?\r\n                <ErrorMessage appearance={MessageAppearance.LARGE}>{errorFilters}</ErrorMessage> :\r\n                <VacanciesFilters />\r\n            }\r\n            <VacanciesList vacancies={vacancySearchResult.itemList} />\r\n            {loadingVacancies ?\r\n                <Spinner /> :\r\n                errorVacancies || <ErrorMessage appearance={MessageAppearance.LARGE}>{errorVacancies}</ErrorMessage>\r\n            }\r\n            <LoadMoreButton\r\n                onClickHandler={loadMoreHandler}\r\n                isDisabled={vacancySearchResult.currentPageNumber * vacancySearchResult.pageSize >= vacancySearchResult.totalItemCount}\r\n            >\r\n                {loadingVacancies ? 'Loading...' : 'Load more'}\r\n            </LoadMoreButton>\r\n        </Container>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { VacancyApplyFormProps } from \"./types\";\r\nimport { ICandidate } from \"../../types/candidate\";\r\nimport { createCandidateAxios } from \"../../api/candidate\";\r\nimport { Button, Grid, IconButton, InputAdornment, SwipeableDrawer, TextField, Typography } from \"@mui/material\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport { EMAIL_REG_EXP, PHONE_REG_EXP } from \"../../types/common/RegularExpressions\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\n\r\nexport default function VacancyApplyForm({ candidate, closeForm, openForm, onSuccess }: VacancyApplyFormProps): JSX.Element {\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const toggleDrawer =\r\n        (anchor: string, open: boolean) =>\r\n            (event: React.KeyboardEvent | React.MouseEvent) => {\r\n                if (\r\n                    event &&\r\n                    event.type === 'keydown' &&\r\n                    ((event as React.KeyboardEvent).key === 'Tab' ||\r\n                        (event as React.KeyboardEvent).key === 'Shift')\r\n                ) {\r\n                    return;\r\n                }\r\n                if (!open) closeForm(null);\r\n            };\r\n\r\n    const validationSchema = Yup.object({\r\n        fullName: Yup.string()\r\n            .required('The field Name is a required field (up to 50 characters).')\r\n            .max(50, 'The field Name may not be greater than 50 characters.'),\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        phone: Yup.string()\r\n            .matches(PHONE_REG_EXP, 'Phone number is not valid. Must contain from 11 up to 13 characters, valid formats: +31636363634, 1234567890, 075-63546725, 123-456-7890, (123)456-7890, (123) 456-7890, 123.456.7890'),\r\n        notes: Yup.string()\r\n            .required('The field Note is a required field (up to 1024 characters).')\r\n            .max(1024, 'The field Note may not be greater than 1024 characters.'),\r\n        isDismissed: Yup.boolean()\r\n            .required(),\r\n        joinedAt: Yup.date()\r\n            .required(),\r\n        vacancyId: Yup.number()\r\n            .required()\r\n    })\r\n\r\n    const defaultValues: { fullName: string, email: string, phone: string, notes: string, isDismissed: boolean, joinedAt: Date, vacancyId: number } = {\r\n        fullName: candidate.fullName,\r\n        email: candidate.email,\r\n        phone: candidate.phone,\r\n        notes: candidate.notes,\r\n        isDismissed: candidate.isDismissed,\r\n        joinedAt: candidate.joinedAt,\r\n        vacancyId: candidate.vacancyId\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({ resolver: yupResolver(validationSchema), defaultValues })\r\n\r\n    const createCandidate = async (candidate: ICandidate) => {\r\n        try {\r\n            setLoading(true);\r\n            await createCandidateAxios(candidate);\r\n            onSuccess();\r\n        } catch (e) {\r\n            setError(e.message || \"Oops! Something went wrong while joining the vacancy.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (candidate: ICandidate): void => {\r\n        createCandidate(candidate);\r\n        onCancelHandler();\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setError(null);\r\n        reset();\r\n        closeForm(null);\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer open={openForm} anchor='left'\r\n            onClose={toggleDrawer('left', false)} onOpen={toggleDrawer('left', true)}\r\n        >\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '360px' }}>\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }}>\r\n                    <Typography variant=\"h4\" component={'p'} sx={{ padding: '20px', fontWeight: 600 }}>\r\n                        Join Us!\r\n                    </Typography>\r\n                    <Grid item>\r\n                        <Controller name=\"fullName\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Name\" type=\"text\" margin=\"normal\" className=\"form-text-input\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <AccountCircleIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>),\r\n                                    }}\r\n                                    error={Boolean(errors.fullName)} helperText={errors.fullName?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"email\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField  {...field} label=\"Email\" type=\"email\" margin=\"normal\" className=\"form-text-input\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <MailOutlineIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>),\r\n                                    }}\r\n                                    error={Boolean(errors.email)} helperText={errors.email?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"phone\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Phone\" type=\"text\" margin=\"normal\" className=\"form-text-input\"\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <PhoneIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>),\r\n                                    }}\r\n                                    error={Boolean(errors.phone)} helperText={errors.phone?.message} />} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Controller name=\"notes\" control={control}\r\n                            render={({ field }) =>\r\n                                <TextField {...field} label=\"Notes\" margin=\"normal\" className=\"form-text-input\" multiline rows={4}\r\n                                    error={Boolean(errors.notes)} helperText={errors.notes?.message} />} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" spacing={2} sx={{ padding: '20px' }} >\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" onClick={onCancelHandler}>Cancel</Button>\r\n                    </Grid>\r\n                    <Grid item sm={6} sx={{ textAlign: 'center' }}>\r\n                        <Button variant=\"outlined\" type=\"submit\">\r\n                            {loading ? 'Sending...' : 'Send'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </SwipeableDrawer>\r\n    )\r\n}","import { Grid, Typography } from \"@mui/material\";\r\nimport { MessageAppearance, MessageProps } from \"./types\";\r\nimport './styles.css';\r\n\r\nexport default function SuccessMessage({ children, appearance }: MessageProps): JSX.Element {\r\n    let cssClass: string;\r\n    switch (appearance) {\r\n        case MessageAppearance.LARGE:\r\n            cssClass = 'success-message-large';\r\n            break;\r\n        default:\r\n            cssClass = 'success-message-regular';\r\n    }\r\n\r\n    return (\r\n        <Grid container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            my={appearance === MessageAppearance.LARGE ? 5 : 1}\r\n        >\r\n            <Typography\r\n                variant={appearance === MessageAppearance.LARGE ? \"h6\" : 'body2'}\r\n                component={'span'}\r\n                className={cssClass}\r\n            >\r\n                {children}\r\n            </Typography>\r\n        </Grid>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { IVacancy } from \"../../types/vacancy\";\r\nimport { ICandidate } from \"../../types/candidate\";\r\nimport { RouteNames } from \"../../routing\";\r\nimport { getVacancyByIdAxios } from \"../../api/vacancy\";\r\nimport { Box, Button, Container, Typography } from \"@mui/material\";\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport VacancyApplyForm from \"./VacancyApplyForm\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\nimport SuccessMessage from \"../../components/Messages/SuccessMessage\";\r\n\r\nexport default function VacancyDetailes(): JSX.Element {\r\n    const { vacancyId } = useParams();\r\n    const { errorVacancies } = useTypedSelector(state => state.vacancy)\r\n    const { auth } = useTypedSelector(state => state.auth)\r\n    const { updateFavoriteVacancyStatus } = useActions();\r\n    const [candidate, setCandidate] = useState<ICandidate | null>(null);\r\n    const [showSuccessMessage, setShowSuccessMessage] = useState<boolean>(false);\r\n    const [showRemoveOrApplyButton, setShowRemoveOrApplyButton] = useState<boolean>(false); // true - Remove, false - Apply\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [currentVacancy, setCurrentVacancy] = useState<IVacancy>(null);\r\n\r\n    const getVacancy = async (id: number) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const vacancy = await getVacancyByIdAxios(id);\r\n            setCurrentVacancy(vacancy);\r\n        } catch (error) {\r\n            setError(error.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVacancy(Number(vacancyId));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        currentVacancy &&\r\n            currentVacancy.candidates?.filter(c => c.email === auth.user.email).length > 0 ?\r\n            setShowRemoveOrApplyButton(true) :\r\n            setShowRemoveOrApplyButton(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentVacancy])\r\n\r\n    const onApply = (candidate: ICandidate | null) => {\r\n        setShowSuccessMessage(false);\r\n        try {\r\n            setCandidate(candidate);\r\n            setShowSuccessMessage(true);\r\n            setShowRemoveOrApplyButton(true);\r\n        } catch { }\r\n    }\r\n\r\n    const onRemove = () => {\r\n        setShowSuccessMessage(false);\r\n        try {\r\n            updateFavoriteVacancyStatus(currentVacancy.candidates?.filter(c => c.email === auth.user.email)[0].id);\r\n            setShowSuccessMessage(true);\r\n            setShowRemoveOrApplyButton(false);\r\n        } catch { }\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container'>\r\n            {loading ? <Spinner />\r\n                :\r\n                error ? <ErrorMessage appearance={MessageAppearance.LARGE}>{error}</ErrorMessage>\r\n                    :\r\n                    currentVacancy ?\r\n                        <div>\r\n                            <Typography variant=\"h4\" component={'p'} sx={{ padding: '20px', fontWeight: 600, textAlign: 'center' }}>\r\n                                {currentVacancy.title}\r\n                            </Typography>\r\n                            <Box sx={{ textAlign: 'left', marginTop: '20px', marginBottom: '20px' }}>\r\n                                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                    {'Office: ' + currentVacancy.officeDto.name}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Typography variant=\"body2\" component={'div'}>\r\n                                {ReactHtmlParser(currentVacancy.description)}\r\n                            </Typography>\r\n                            <Box sx={{ textAlign: 'left', marginTop: '20px' }}>\r\n                                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                    {'Previews: ' + currentVacancy.previews}\r\n                                </Typography>\r\n                            </Box>\r\n                            {\r\n                                showRemoveOrApplyButton ?\r\n                                    <Box sx={{ textAlign: 'right' }} my={2}>\r\n                                        <Button variant=\"outlined\" size=\"small\" color=\"error\" onClick={onRemove}>Remove</Button>\r\n                                    </Box>\r\n                                    :\r\n                                    <Box sx={{ textAlign: 'right' }} my={2}>\r\n                                        <Button variant=\"outlined\" size=\"small\" onClick={() => onApply({\r\n                                            id: 0, fullName: auth.user.userName, email: auth.user.email,\r\n                                            phone: auth.user.phoneNumber || '', notes: '', isDismissed: false, joinedAt: new Date(), vacancyId: Number(vacancyId)\r\n                                        })}>Apply</Button>\r\n                                    </Box>\r\n                            }\r\n                            {candidate && <VacancyApplyForm candidate={candidate} closeForm={onApply} openForm={true} onSuccess={() => setShowSuccessMessage(true)} />}\r\n                            {errorVacancies && <ErrorMessage appearance={MessageAppearance.REGULAR}>{errorVacancies}</ErrorMessage>}\r\n                            {showSuccessMessage && <SuccessMessage appearance={MessageAppearance.REGULAR}>\r\n                                Successfully, go back to <Link to={RouteNames.VACANCY}>All Vacancies</Link> to continue.\r\n                            </SuccessMessage>}\r\n                        </div>\r\n                        :\r\n                        <ErrorMessage appearance={MessageAppearance.LARGE}>'Oops! Something went wrong.'</ErrorMessage>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { IMailSubscriber } from '../types/mailSubscriber';\r\n\r\nexport async function subscribeAxios(mailSubscriber: IMailSubscriber): Promise<IMailSubscriber> {\r\n    return (await axios.post<IMailSubscriber>('/MailSubscriber/Subscribe', mailSubscriber)).data;\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { subscribeAxios } from \"../../api/mailSubscriber\";\r\nimport { IMailSubscriber } from \"../../types/mailSubscriber\";\r\nimport { EMAIL_REG_EXP } from \"../../types/common/RegularExpressions\";\r\nimport { Button, IconButton, InputAdornment, Snackbar, TextField } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../Messages/types\";\r\n\r\nexport default function SubscriptionForm(): JSX.Element {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [openSnackBar, setOpenSnackBar] = useState<boolean>(false);\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid.\"),\r\n    })\r\n\r\n    const defaultValues: { email: string } = {\r\n        email: ''\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues\r\n    })\r\n\r\n    const createdSubscriber = async (subscriber: IMailSubscriber) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            await subscribeAxios(subscriber);\r\n            setOpenSnackBar(true);\r\n        } catch (e) {\r\n            setError(e.message || \"Oops! Something went wrong while subscribing.\");\r\n        } finally {\r\n            setLoading(false);\r\n            reset();\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (emailAddress: { email: string }): Promise<void> => {\r\n        createdSubscriber({ email: emailAddress.email, isSubscribed: true, mailSubscriptionId: 1 });\r\n    }\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') return;\r\n        setOpenSnackBar(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div >\r\n                <Controller\r\n                    name=\"email\"\r\n                    control={control}\r\n                    render={({ field }) =>\r\n                        <TextField  {...field} sx={{ color: '#1976d2' }} label=\"Email\" fullWidth type=\"email\" margin=\"normal\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton edge=\"end\" aria-label=\"Email\" >\r\n                                            <MailOutlineIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>),\r\n                            }}\r\n                            error={Boolean(errors.email)} helperText={errors.email?.message} />}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button variant=\"outlined\" disabled={loading} type=\"submit\" sx={{ backgroundColor: 'white', color: '#1976d2', marginTop: '20px' }}>\r\n                    {loading ? 'Uploadind...' : 'Subscribe'}\r\n                </Button>\r\n                <Snackbar open={openSnackBar} message='Subscribed.' autoHideDuration={4000} onClose={handleClose} />\r\n            </div>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n        </form>\r\n    )\r\n}","import { Grid, Typography } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SubscriptionForm from './SubscriptionForm';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport { IRoute, RouteNames } from '../../routing';\r\nimport HomePage from '../../pages/Home/HomePage';\r\nimport AboutPage from '../../pages/About/AboutPage';\r\nimport ServicesPage from '../../pages/CompanyServices/ServicesPage';\r\nimport TeamPage from '../../pages/Team/TeamPage';\r\nimport VacanciesPage from '../../pages/Vacancies/VacanciesPage';\r\nimport ContactPage from '../../pages/Contact/ContactPage';\r\n\r\nconst mainMenuRoutes: IRoute[] = [\r\n    { path: RouteNames.HOME, title: \"Home\", component: <HomePage /> },\r\n    { path: RouteNames.ABOUT, title: \"About Us\", component: <AboutPage /> },\r\n    { path: RouteNames.SERVICES, title: \"Services\", component: <ServicesPage /> },\r\n    { path: RouteNames.TEAM, title: \"Team\", component: <TeamPage /> },\r\n    { path: RouteNames.VACANCY, title: \"Vacancies\", component: <VacanciesPage /> },\r\n    { path: RouteNames.CONTACT, title: \"Contact\", component: <ContactPage /> }\r\n]\r\n\r\nexport default function Footer(): JSX.Element {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Grid container spacing={2} className='footer'>\r\n            <Grid item xs={12} md={4} textAlign='center'>\r\n                <Typography sx={{ margin: '0 0 20px 0', padding: '2px 0 2px 0', fontSize: 24, fontWeight: 700, lineHeight: 1 }}>\r\n                    Shuffle\r\n                </Typography>\r\n                <Typography variant=\"body2\" component={'p'}>\r\n                    A108 Adam Street\r\n                </Typography>\r\n                <Typography variant=\"body2\" component={'p'}>\r\n                    NY 535022, USA\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"body2\" component={'p'}>\r\n                    <strong>Phone:</strong> +1 5589 55488 55\r\n                </Typography>\r\n                <Typography variant=\"body2\" component={'p'}>\r\n                    <strong>Email:</strong> info@example.com\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n                <Grid container direction=\"column\" alignContent=\"center\">\r\n                    <Typography sx={{ margin: '0 0 20px 0', padding: '2px 0 2px 0', fontSize: 18, fontWeight: 600 }}>\r\n                        Useful Links\r\n                    </Typography>\r\n                    <List>\r\n                        {mainMenuRoutes.map((page) => (\r\n                            <li key={page.path}>\r\n                                <ListItemButton sx={{ padding: '0' }} onClick={() => { navigate(page.path); window.scroll(0, 0) }}>\r\n                                    <ListItemIcon sx={{ minWidth: '20px', maxWidth: '30px' }}>\r\n                                        <ArrowForwardIosIcon sx={{ fontSize: '1rem' }} htmlColor='#3D4F4C' />\r\n                                    </ListItemIcon>\r\n                                    &nbsp;&nbsp;\r\n                                    <ListItemText primary={page.title} />\r\n                                </ListItemButton>\r\n                            </li>\r\n                        ))}\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} textAlign='center' sx={{ padding: '16px' }}>\r\n                <Typography sx={{ margin: '0 0 20px 0', padding: '2px 0 2px 0', fontSize: 18, fontWeight: 600 }}>\r\n                    Our Newsletter\r\n                </Typography>\r\n                <Typography variant=\"body2\" component={'p'}>\r\n                    Get In Touch\r\n                </Typography>\r\n                <SubscriptionForm />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { IUser } from \"../../../types/user\";\r\nimport { EMAIL_REG_EXP, PHONE_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { updateUserAxios } from \"../../../api/user\";\r\nimport { Button, Checkbox, FormControlLabel, Grid, IconButton, InputAdornment, Snackbar, TextField } from \"@mui/material\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function ProfileForm(): JSX.Element {\r\n    const { auth } = useTypedSelector(state => state.auth);\r\n    const { error } = useTypedSelector(state => state.user);\r\n    const { setUserError } = useActions();\r\n    const [snackbarOpened, setSnackbarOpened] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const handleClose = (event: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') return;\r\n        setSnackbarOpened(false);\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string()\r\n            .required()\r\n            .max(50, 'The field User Name may not be greater than 50 characters.'),\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        phoneNumber: Yup.string()\r\n            .matches(PHONE_REG_EXP, 'Phone number is not valid. Must contain from 11 up to 13 characters, valid formats: +31636363634, 1234567890, 075-63546725, 123-456-7890, (123)456-7890, (123) 456-7890, 123.456.7890'),\r\n        avatarUrl: Yup.string()\r\n            .max(1000, 'The field Avatar Url may not be greater than 1000 characters.'),\r\n    })\r\n\r\n    const defaultValues: IUser = {\r\n        id: auth.user.id,\r\n        userName: auth.user.userName,\r\n        email: auth.user.email,\r\n        emailConfirmed: auth.user.emailConfirmed,\r\n        phoneNumber: auth.user.phoneNumber || '',\r\n        avatarUrl: auth.user.avatarUrl || ''\r\n    }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register } = useForm({\r\n        resolver: yupResolver(validationSchema), defaultValues\r\n    })\r\n\r\n    const updateUserData = async (user: IUser) => {\r\n        try {\r\n            setLoading(true);\r\n            setUserError(null);\r\n            await updateUserAxios(user);\r\n            setSnackbarOpened(true);\r\n        } catch (e) {\r\n            setUserError(e.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (user: IUser) => updateUserData(user);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-centered\">\r\n            <input {...register(\"id\")} type=\"hidden\" />\r\n            <Grid container direction=\"column\" alignContent=\"center\" mt={2}>\r\n                <Grid item>\r\n                    <Controller name=\"userName\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"User Name\" type=\"text\" margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <AccountCircleIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.userName)} helperText={errors.userName?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"email\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Email\" type=\"email\" margin=\"normal\" className=\"form-text-input\" disabled\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.email)} helperText={errors.email?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Controller name=\"emailConfirmed\" control={control}\r\n                                render={({ field: props }) => (\r\n                                    <Checkbox\r\n                                        {...props}\r\n                                        checked={props.value}\r\n                                        disabled\r\n                                        onChange={(e) => props.onChange(e.target.checked)}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        }\r\n                        label=\"Email Confirmed?\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"phoneNumber\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField {...field} label=\"Phone\" type=\"text\" margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <PhoneIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.phoneNumber)} helperText={errors.phoneNumber?.message} />} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"avatarUrl\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Avatar Url\" type=\"text\" margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <LinkIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.avatarUrl)} helperText={errors.avatarUrl?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item my={3}>\r\n                    <Grid container spacing={5} direction=\"row\" justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                {loading ? 'Saving...' : 'Save'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpened}\r\n                autoHideDuration={4000}\r\n                onClose={handleClose}\r\n                message=\"Successfully updated!\"\r\n            />\r\n        </form>\r\n    )\r\n}","import { Container, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nexport default function ProfilePage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Profile\"\r\n                text=\"Magnam dolores commodi suscipit\"\r\n            />\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <ProfileForm />\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { RouteNames } from \"../../../routing\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { changeEmailAxios } from \"../../../api/auth\";\r\nimport { IChangeEmailDto } from \"../../../types/auth\";\r\nimport { EMAIL_REG_EXP, PASSWORD_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { Button, Grid, IconButton, InputAdornment, Snackbar, TextField } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function ChangeEmailForm(): JSX.Element {\r\n    const navigate = useNavigate();\r\n    const { auth } = useTypedSelector(state => state.auth)\r\n    const { login } = useActions();\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [snackbarOpened, setSnackbarOpened] = useState<boolean>(false);\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n    const handleClose = (event: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') return;\r\n        setSnackbarOpened(false);\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        existingEmail: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        newEmail: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        password: Yup.string()\r\n            .matches(PASSWORD_REG_EXP, \"Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\"),\r\n    })\r\n\r\n    const defaultValues: IChangeEmailDto = { existingEmail: auth.user.email, newEmail: '', password: '' }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(validationSchema), defaultValues\r\n    })\r\n\r\n    const onSubmit = async (changeEmailDto: IChangeEmailDto) => {\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            await changeEmailAxios(changeEmailDto);\r\n            setSnackbarOpened(true);\r\n            reset();\r\n            setTimeout(() => {\r\n                localStorage.removeItem('auth');\r\n                login(null);\r\n                navigate(RouteNames.LOGIN);\r\n            }, 3000);\r\n        } catch (e) {\r\n            setError(e.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-centered\">\r\n            <Grid container direction=\"column\" alignContent=\"center\" mt={2}>\r\n                <Grid item>\r\n                    <Controller name=\"existingEmail\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Existing Email\" type=\"email\"\r\n                                margin=\"normal\" className=\"form-text-input\" disabled\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.existingEmail)} helperText={errors.existingEmail?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"newEmail\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"New Email\" type=\"email\"\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.newEmail)} helperText={errors.newEmail?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"password\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Password\" type={showPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {setShowPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.password)} helperText={errors.password?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item my={3}>\r\n                    <Grid container spacing={5} direction=\"row\" justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" onClick={() => reset()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                {loading ? 'Sending...' : 'Send'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpened}\r\n                autoHideDuration={4000}\r\n                onClose={handleClose}\r\n                message=\"Email has been changed successfully.\"\r\n            />\r\n        </form>\r\n    )\r\n}","import { Container, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport ChangeEmailForm from \"./ChangeEmailForm\";\r\n\r\nexport default function ChangeEmailPage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Change Email\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem.\"\r\n            />\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <ChangeEmailForm />\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { Container } from \"@mui/material\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport { useEffect } from \"react\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\nimport VacanciesList from \"./VacanciesList\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport ErrorMessage from \"../../components/Messages/ErrorMessage\";\r\nimport { MessageAppearance } from \"../../components/Messages/types\";\r\nimport LoadMoreButton from \"../../components/Button/LoadMoreButton\";\r\n\r\nexport default function FavoriteVacanciesPage(): JSX.Element {\r\n    const { error, loading, favoriteVacancySearchResult } = useTypedSelector(state => state.favoriteVacancy);\r\n    const { auth } = useTypedSelector(state => state.auth);\r\n    const { getFavoriteVacancies, setFavoriteVacancyPage, loadMoreFavoriteVacancies } = useActions();\r\n\r\n    useEffect(() => {\r\n        getFavoriteVacancies(favoriteVacancySearchResult.pageSize, 1, auth.user.email, OrderType.Ascending);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const loadMoreHandler = () => {\r\n        loadMoreFavoriteVacancies(favoriteVacancySearchResult.pageSize, favoriteVacancySearchResult.currentPageNumber + 1,\r\n            auth.user.email, OrderType.Ascending)\r\n        setFavoriteVacancyPage(favoriteVacancySearchResult.currentPageNumber + 1);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container'>\r\n            <PageHeader title=\"Favorite Vacancies\" />\r\n            <VacanciesList vacancies={favoriteVacancySearchResult.itemList} />\r\n            {loading ?\r\n                <Spinner /> :\r\n                error || <ErrorMessage appearance={MessageAppearance.LARGE}>{error}</ErrorMessage>\r\n            }\r\n            <LoadMoreButton\r\n                onClickHandler={loadMoreHandler}\r\n                isDisabled={favoriteVacancySearchResult.currentPageNumber * favoriteVacancySearchResult.pageSize >= favoriteVacancySearchResult.totalItemCount}\r\n            >\r\n                {loading ? 'Loading...' : 'Load more'}\r\n            </LoadMoreButton>\r\n        </Container>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { RouteNames } from \"../../../routing\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { changePasswordAxios } from \"../../../api/auth\";\r\nimport { IChangePasswordDto } from \"../../../types/auth\";\r\nimport { EMAIL_REG_EXP, PASSWORD_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { Button, Grid, IconButton, InputAdornment, Snackbar, TextField } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function ChangePasswordForm(): JSX.Element {\r\n    const navigate = useNavigate();\r\n    const { auth } = useTypedSelector(state => state.auth)\r\n    const { logout } = useActions();\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [snackbarOpened, setSnackbarOpened] = useState<boolean>(false);\r\n    const [showOldPassword, setShowOldPassword] = useState<boolean>(false);\r\n    const [showNewPassword, setShowNewPassword] = useState<boolean>(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false);\r\n\r\n    const handleClose = (event: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') return;\r\n        setSnackbarOpened(false);\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        oldPassword: Yup.string()\r\n            .max(100, 'The field Password may not be greater than 100 characters.')\r\n            .matches(PASSWORD_REG_EXP, \"Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\"),\r\n        newPassword: Yup.string()\r\n            .matches(PASSWORD_REG_EXP, \"The field New Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\"),\r\n        confirmNewPassword: Yup.string()\r\n            .matches(PASSWORD_REG_EXP, \"The field New Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\")\r\n    })\r\n\r\n    const defaultValues: IChangePasswordDto = { email: auth.user.email, oldPassword: '', newPassword: '', confirmNewPassword: '' }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(validationSchema), defaultValues\r\n    })\r\n\r\n    const onSubmit = async (changePasswordDto: IChangePasswordDto) => {\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            await changePasswordAxios(changePasswordDto);\r\n            setSnackbarOpened(true);\r\n            reset();\r\n            setTimeout(() => {\r\n                logout(auth.user.email, auth.tokens.accessToken);\r\n                navigate(RouteNames.LOGIN);\r\n            }, 3000);\r\n        } catch (e) {\r\n            setError(e.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-centered\">\r\n            <Grid container direction=\"column\" alignContent=\"center\" mt={2}>\r\n                <Grid item>\r\n                    <Controller name=\"email\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Email\" type=\"email\"\r\n                                margin=\"normal\" className=\"form-text-input\" disabled\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.email)} helperText={errors.email?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"oldPassword\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Old Password\" type={showOldPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowOldPassword(!showOldPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showOldPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.oldPassword)} helperText={errors.oldPassword?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"newPassword\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"New Password\" type={showNewPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowNewPassword(!showNewPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showNewPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.newPassword)} helperText={errors.newPassword?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"confirmNewPassword\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField {...field} label=\"Confirm New Password\" type={showConfirmPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.confirmNewPassword)} helperText={errors.confirmNewPassword?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item my={3}>\r\n                    <Grid container spacing={5} direction=\"row\" justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" onClick={() => reset()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                {loading ? 'Sending...' : 'Send'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpened}\r\n                autoHideDuration={4000}\r\n                onClose={handleClose}\r\n                message=\"Password has been changed successfully.\"\r\n            />\r\n        </form>\r\n    )\r\n}","import { Container, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport ChangePasswordForm from \"./ChangePasswordForm\";\r\n\r\nexport default function ChangePasswordPage(): JSX.Element {\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Change Password\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem.\"\r\n            />\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <ChangePasswordForm />\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useActions } from '../../hooks/useActions';\r\nimport { IRoute, RouteNames } from '../../routing';\r\nimport { Avatar, Box, Grid, IconButton, Menu, MenuItem, Tooltip, Typography } from '@mui/material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport PasswordIcon from '@mui/icons-material/Password';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport ProfilePage from '../../pages/Account/Profile/ProfilePage';\r\nimport ChangeEmailPage from '../../pages/Account/ChangeEmail/ChangeEmailPage';\r\nimport FavoriteVacanciesPage from '../../pages/Vacancies/FavoriteVacanciesPage';\r\nimport ChangePasswordPage from '../../pages/Account/ChangePassword/ChangePasswordPage';\r\n\r\nexport default function AppAvatar() {\r\n    const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n    const { auth } = useTypedSelector(state => state.auth)\r\n    const { logout } = useActions();\r\n    const navigate = useNavigate();\r\n\r\n    const settings: IRoute[] = [\r\n        { path: RouteNames.PROFILE, title: \"Profile\", component: <ProfilePage /> },\r\n        { path: RouteNames.FAVORITE_VACANCIES, title: \"Favorite Vacancies\", component: <FavoriteVacanciesPage /> },\r\n        { path: RouteNames.CHANGE_EMAIL, title: \"Change email\", component: <ChangeEmailPage /> },\r\n        { path: RouteNames.CHANGE_PASSWORD, title: \"Change password\", component: <ChangePasswordPage /> }\r\n    ];\r\n\r\n    const settingsIcons = [\r\n        <AccountCircleIcon sx={{ color: \"#4b605c\" }} />,\r\n        <FavoriteIcon sx={{ color: \"#4b605c\" }} />,\r\n        <MailOutlineIcon sx={{ color: \"#4b605c\" }} />,\r\n        <PasswordIcon sx={{ color: \"#4b605c\" }} />\r\n    ]\r\n\r\n    const handleLogout = () => {\r\n        logout(auth.user.email, auth.tokens.accessToken);\r\n        navigate(RouteNames.HOME);\r\n    }\r\n\r\n    const handleOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 0, display: 'flex', alignItems: 'center', columnGap: '10px' }}>\r\n            <Typography component=\"span\">\r\n                {auth.user.userName}\r\n            </Typography>\r\n            <Tooltip title=\"Open settings\">\r\n                <IconButton onClick={handleOpen} sx={{ p: 0 }}>\r\n                    <Avatar alt=\"Users avatar\" src={auth.user.avatarUrl || \"/static/images/avatar/2.jpg\"} />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                sx={{ mt: '45px' }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElUser}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElUser)}\r\n                onClose={handleClose}\r\n            >\r\n                {settings.map((setting, index) => (\r\n                    <MenuItem key={setting.path} component={Link} to={setting.path} onClick={handleClose}>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" gap=\"10px\">\r\n                            <Typography textAlign=\"center\">{setting.title}</Typography>\r\n                            {settingsIcons[index]}\r\n                        </Grid>\r\n                    </MenuItem>\r\n                ))}\r\n                <hr />\r\n                <MenuItem component={Link} to={RouteNames.HOME} onClick={handleLogout}>\r\n                    <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" gap=\"10px\">\r\n                        <Typography textAlign=\"center\">Logout</Typography>\r\n                        <LogoutIcon sx={{ color: \"red\" }} />\r\n                    </Grid>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Box>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport { IRoute, RouteNames } from '../../../routing';\r\nimport { AppBar, Box, Button, Container, Toolbar, IconButton, Menu, MenuItem, Typography, Tooltip, } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport BrightnessAutoIcon from '@mui/icons-material/BrightnessAuto';\r\nimport BuildIcon from '@mui/icons-material/Build';\r\nimport ConnectWithoutContactIcon from '@mui/icons-material/ConnectWithoutContact';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport Diversity3Icon from '@mui/icons-material/Diversity3';\r\nimport Groups2Icon from '@mui/icons-material/Groups2';\r\nimport AboutPage from '../../../pages/About/AboutPage';\r\nimport VacanciesPage from '../../../pages/Vacancies/VacanciesPage';\r\nimport ContactPage from '../../../pages/Contact/ContactPage';\r\nimport HomePage from '../../../pages/Home/HomePage';\r\nimport ServicesPage from '../../../pages/CompanyServices/ServicesPage';\r\nimport TeamPage from '../../../pages/Team/TeamPage';\r\nimport AppAvatar from '../../AppAvatar/AppAvatar';\r\nimport { Roles } from '../../../types/auth';\r\n\r\nconst mainMenuRoutes: IRoute[] = [\r\n    { path: RouteNames.HOME, title: \"Home\", component: <HomePage /> },\r\n    { path: RouteNames.ABOUT, title: \"About Us\", component: <AboutPage /> },\r\n    { path: RouteNames.SERVICES, title: \"Services\", component: <ServicesPage /> },\r\n    { path: RouteNames.TEAM, title: \"Team\", component: <TeamPage /> },\r\n    { path: RouteNames.VACANCY, title: \"Vacancies\", component: <VacanciesPage /> },\r\n    { path: RouteNames.CONTACT, title: \"Contact\", component: <ContactPage /> }\r\n]\r\n\r\nconst mainMenuIcons = [\r\n    <HomeIcon sx={{ color: \"#4b605c\" }} />,\r\n    <BrightnessAutoIcon sx={{ color: \"#4b605c\" }} />,\r\n    <BuildIcon sx={{ color: \"#4b605c\" }} />,\r\n    <Groups2Icon sx={{ color: \"#4b605c\" }} />,\r\n    <Diversity3Icon sx={{ color: \"#4b605c\" }} />,\r\n    <ConnectWithoutContactIcon sx={{ color: \"#4b605c\" }} />\r\n]\r\n\r\nexport default function MainAppBar() {\r\n    const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\r\n    const { auth } = useTypedSelector(state => state.auth)\r\n\r\n    const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"static\" sx={{ backgroundColor: '#158F7C' }}>\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar disableGutters>\r\n                    <Typography variant=\"h6\" component=\"a\" href=\"https://volodymyr759.github.io/core-web-client\" sx={{\r\n                        mr: 2,\r\n                        display: { xs: 'none', md: 'flex' },\r\n                        fontSize: '28px',\r\n                        lineHeight: '1',\r\n                        fontFamily: 'Poppins, sans-serif',\r\n                        fontWeight: 600,\r\n                        color: 'inherit',\r\n                        textDecoration: 'none',\r\n                    }}\r\n                    >\r\n                        Shuffle\r\n                    </Typography>\r\n\r\n                    {/* Hiden menu */}\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleOpenNavMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElNav}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={Boolean(anchorElNav)}\r\n                            onClose={handleCloseNavMenu}\r\n                            sx={{\r\n                                display: { xs: 'block', md: 'none' },\r\n                            }}\r\n                        >\r\n                            {mainMenuRoutes.map((page, index) => (\r\n                                <MenuItem key={page.path} component={Link} to={page.path} onClick={handleCloseNavMenu}>\r\n                                    {mainMenuIcons[index]}&nbsp;\r\n                                    <Typography textAlign=\"center\">{page.title}</Typography>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Box>\r\n\r\n                    <Typography variant=\"h6\" component=\"a\" href=\"https://volodymyr759.github.io/core-web-client\" sx={{\r\n                        mr: 2,\r\n                        display: { xs: 'flex', md: 'none' },\r\n                        flexGrow: 1,\r\n                        fontSize: '28px',\r\n                        lineHeight: '1',\r\n                        fontFamily: 'Poppins, sans-serif',\r\n                        fontWeight: 600,\r\n                        color: 'inherit',\r\n                        textDecoration: 'none',\r\n                    }}\r\n                    >\r\n                        Shuffle\r\n                    </Typography>\r\n\r\n                    {/* Main Menu pages */}\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                        {mainMenuRoutes.map((page) => (\r\n                            <Button\r\n                                key={page.path}\r\n                                onClick={handleCloseNavMenu}\r\n                                sx={{ my: 2, display: 'block' }}\r\n                            >\r\n                                <Link to={page.path} className=\"main-menu-link\">{page.title}</Link>\r\n                            </Button>\r\n                        ))}\r\n                    </Box>\r\n\r\n                    {/* Avatar */}\r\n                    {auth ?\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', columnGap: '10px' }}>\r\n                            {\r\n                                (auth.roles.includes(Roles.ADMIN) || auth.roles.includes(Roles.DEMO)) &&\r\n                                <Link to={RouteNames.DASHBOARD} className=\"main-menu-link\">\r\n                                    <Tooltip title=\"Dashboard\" placement=\"bottom\">\r\n                                        <DashboardIcon sx={{ color: 'white' }} />\r\n                                    </Tooltip>\r\n                                </Link>\r\n                            }\r\n                            <AppAvatar />\r\n                        </Box>\r\n                        :\r\n                        <Button\r\n                            onClick={handleCloseNavMenu}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            sx={{ my: 2, color: 'white', display: 'block', textTransform: 'none' }}\r\n                        >\r\n                            <Link to='/login' className=\"main-menu-link\">Sign In</Link>\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { Grid } from '@mui/material'\r\nimport './styles.css';\r\n\r\nexport default function StandForUkraine(): JSX.Element {\r\n    return (\r\n        <div>\r\n            <a href=\"https://war.ukraine.ua/support-ukraine/\" target=\"_blank\" rel='noreferrer'>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <div className='flag'>\r\n                        <div className=\"flag-line-blue\"></div>\r\n                        <div className=\"flag-line-yellow\"></div>\r\n                    </div>\r\n                    <div className=\"stand-for-ua-text-wrapper\">\r\n                        <span className=\"stand-for-ua-main-text\">\r\n                            Stand in solidarity with the Ukrainian people against the Russian invasion.\r\n                        </span>\r\n                        <span className=\"stand-for-ua-help-text\">Find out how you can help.</span>\r\n                    </div>\r\n                </Grid>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n","import Footer from '../Footer/Footer';\r\nimport MainAppBar from '../AppBars/MainAppBar/MainAppBar';\r\nimport { LayoutProps } from './types';\r\nimport './styles.css'\r\nimport StandForUkraine from '../StandForUkraine/StandForUkraine';\r\n\r\nexport default function PublicLayout({ children, title }: LayoutProps): JSX.Element {\r\n    document.title = title || 'App';\r\n    return (\r\n        <>\r\n            <StandForUkraine />\r\n            <MainAppBar />\r\n            {children}\r\n            <Footer />\r\n        </>\r\n\r\n    );\r\n};\r\n","import { Container } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { confirmEmailAxios } from \"../../../api/auth\";\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport SuccessMessage from \"../../../components/Messages/SuccessMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport Spinner from \"../../../components/Spinner/Spinner\";\r\n\r\nexport default function EmailConfirmPage(): JSX.Element {\r\n    const [searchParams] = useSearchParams();\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n\r\n    const tryToConfirmEmailByUrlParams = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            await confirmEmailAxios(searchParams.get(\"code\"), searchParams.get(\"email\"))\r\n        } catch (e) {\r\n            setError(e.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        tryToConfirmEmailByUrlParams();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Email Confirmation\"\r\n                text=\"Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem.\"\r\n            />\r\n            {loading ? <Spinner />\r\n                :\r\n                error ? <ErrorMessage appearance={MessageAppearance.LARGE}>{error}</ErrorMessage>\r\n                    :\r\n                    <SuccessMessage appearance={MessageAppearance.LARGE}>\r\n                        Email has been successfully verified. Please Sign In to continue.\r\n                    </SuccessMessage>\r\n            }\r\n        </Container>\r\n    )\r\n}","import { Grid, Typography } from '@mui/material';\r\nimport ErrorMessage from '../../components/Messages/ErrorMessage';\r\nimport { MessageAppearance } from '../../components/Messages/types';\r\nimport '../../index.css';\r\n\r\nexport default function TestUI(): JSX.Element {\r\n//\r\n    return (\r\n        <>\r\n            <div className='test-ui-page-header'>Tests of UI Components</div>\r\n            <p>\r\n                Design system: https://mui.com/\r\n            </p>\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <ErrorMessage appearance={MessageAppearance.REGULAR}>Error of loading this Vacancy</ErrorMessage>\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <div className='test-page-header'>Grid:</div>\r\n            <br />\r\n            use <a href=\"https://mui.com/material-ui/react-grid/#interactive\" target=\"_blank\" rel=\"noreferrer\">Interactive mui Grid</a>\r\n            <br />\r\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"stretch\">\r\n                <p style={{ border: '1px solid black' }}>123</p>\r\n                <p style={{ border: '1px solid black' }}>123</p>\r\n                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n                    <span style={{ border: '1px solid black' }}>123</span>\r\n                    <span style={{ border: '1px solid black' }}>123</span>\r\n                </Grid>\r\n                <p style={{ border: '1px solid black' }}>123</p>\r\n            </Grid>\r\n            <div className='test-page-header'>Typography - Headers:</div>\r\n            <br />\r\n            <Typography variant=\"h4\" component={'h4'} className=\"test-page-header\">\r\n                Page Header\r\n            </Typography>\r\n            <Typography variant=\"h5\" component={'h5'} className=\"test-card-header\">\r\n                Card Header UPPERCASE\r\n            </Typography>\r\n            <hr />\r\n            <div className='test-page-header'>Typography - Paragraphs:</div>\r\n            <br />\r\n            <Typography component={'p'} className=\"test-page-subheader\" sx={{ textAlign: 'center' }}>\r\n                Paragraph as subheader\r\n            </Typography>\r\n            <hr />\r\n            <div className='test-page-header'>Typography - Spans:</div>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { EMAIL_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { forgotPasswordAxios } from \"../../../api/auth\";\r\nimport { Button, Grid, IconButton, InputAdornment, TextField } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport SuccessMessage from \"../../../components/Messages/SuccessMessage\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\n\r\nexport default function ForgotPasswordForm(): JSX.Element {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [showSuccessMessage, setShowSuccessMessage] = useState<boolean>(false);\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\")\r\n    })\r\n\r\n    const defaultValues: { email: string } = { email: '' }\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(validationSchema), defaultValues\r\n    })\r\n\r\n    const onSubmit = async ({ email }: { email: string }) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            setShowSuccessMessage(false);\r\n            await forgotPasswordAxios(email);\r\n            setShowSuccessMessage(true);\r\n            reset();\r\n        } catch (e) {\r\n            setError(e.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-centered\">\r\n            <Grid container direction=\"column\" alignContent=\"center\" mt={2}>\r\n                <Grid item>\r\n                    <Controller\r\n                        name=\"email\"\r\n                        control={control}\r\n                        render={({ field }) =>\r\n                            <TextField {...field} label=\"Email\" type=\"email\" margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.email)} helperText={errors.email?.message}\r\n                            />\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container sx={{ marginTop: '-20px', marginBottom: '40px' }} spacing={5} direction=\"row\" justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" onClick={() => { setShowSuccessMessage(false); reset(); }}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                {loading ? 'Sending...' : 'Send'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n            {showSuccessMessage && <SuccessMessage appearance={MessageAppearance.REGULAR}>\r\n                Link has been send to your email. Please use the link in email to reset password.\r\n            </SuccessMessage>}\r\n        </form>\r\n    )\r\n}","import { Container, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport ForgotPasswordForm from \"./ForgotPasswordForm\";\r\n\r\n\r\nexport default function ForgotPasswordPage(): JSX.Element {\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Send us your email.\"\r\n                text=\"We will send the link with code to your email to confirm reset password action.\"\r\n            />\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <ForgotPasswordForm />\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from \"yup\";\r\nimport { resetPasswordAxios } from \"../../../api/auth\";\r\nimport { IResetPasswordDto } from \"../../../types/auth\";\r\nimport { EMAIL_REG_EXP, PASSWORD_REG_EXP } from \"../../../types/common/RegularExpressions\";\r\nimport { Button, Grid, IconButton, InputAdornment, TextField } from \"@mui/material\";\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport ErrorMessage from \"../../../components/Messages/ErrorMessage\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { MessageAppearance } from \"../../../components/Messages/types\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport SuccessMessage from \"../../../components/Messages/SuccessMessage\";\r\nimport { RouteNames } from \"../../../routing\";\r\n\r\nexport default function ResetPasswordForm(): JSX.Element {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false);\r\n    const [showSuccessMessage, setShowSuccessMessage] = useState<boolean>(false);\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .max(50, 'The field Email may not be greater than 50 characters.')\r\n            .matches(EMAIL_REG_EXP, \"Required field Email is not valid and may not be greater than 50 characters.\"),\r\n        password: Yup.string()\r\n            .max(100, 'The field Password may not be greater than 100 characters.')\r\n            .matches(PASSWORD_REG_EXP, \"Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\"),\r\n        confirmPassword: Yup.string()\r\n            .matches(PASSWORD_REG_EXP, \"Password is not valid. Must contain at least one uppercase, one symbol and at least 7 or more characters.\")\r\n    })\r\n\r\n    const defaultValues: IResetPasswordDto = { code: searchParams.get(\"code\"), email: searchParams.get(\"email\"), password: '', confirmPassword: '' }\r\n\r\n    const { control, handleSubmit, formState: { errors }, register, reset } = useForm({\r\n        resolver: yupResolver(validationSchema), defaultValues\r\n    })\r\n\r\n    const onSubmit = async (resetPasswordDto: IResetPasswordDto) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            setShowSuccessMessage(false);\r\n            await resetPasswordAxios(resetPasswordDto);\r\n            setShowSuccessMessage(true);\r\n            reset();\r\n        } catch (e) {\r\n            setError(e.message || 'Unknown server error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form-centered\">\r\n            <input {...register(\"code\")} type=\"hidden\" />\r\n            <Grid container direction=\"column\" alignContent=\"center\" mt={2}>\r\n                <Grid item>\r\n                    <Controller name=\"email\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Email\" type=\"email\" disabled\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton edge=\"end\" >\r\n                                                <MailOutlineIcon />\r\n                                            </IconButton>\r\n                                        </InputAdornment>),\r\n                                }}\r\n                                error={Boolean(errors.email)} helperText={errors.email?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"password\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField  {...field} label=\"Password\" type={showPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.password)} helperText={errors.password?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Controller name=\"confirmPassword\" control={control}\r\n                        render={({ field }) =>\r\n                            <TextField {...field} label=\"Confirm Password\" type={showConfirmPassword ? 'text' : 'password'}\r\n                                margin=\"normal\" className=\"form-text-input\"\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) => event.preventDefault()}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                error={Boolean(errors.confirmPassword)} helperText={errors.confirmPassword?.message} />}\r\n                    />\r\n                </Grid>\r\n                <Grid item my={3}>\r\n                    <Grid container spacing={5} direction=\"row\" justifyContent=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" onClick={() => reset()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" type=\"submit\">\r\n                                {loading ? 'Sending...' : 'Send'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {error && <ErrorMessage appearance={MessageAppearance.REGULAR}>{error}</ErrorMessage>}\r\n            </Grid>\r\n            {showSuccessMessage && <SuccessMessage appearance={MessageAppearance.REGULAR}>\r\n                Password has been changed successfully. Please <Link to={RouteNames.LOGIN}>Sign In</Link> using new password.\r\n            </SuccessMessage>}\r\n        </form>\r\n    )\r\n}","import { Container, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\r\nimport ResetPasswordForm from \"./ResetPasswordForm\";\r\n\r\nexport default function ResetPasswordPage():JSX.Element{\r\n\r\n    return(\r\n        <Container maxWidth=\"lg\" className='layout-container' >\r\n            <PageHeader\r\n                title=\"Reset Your Password.\"\r\n                text=\"Send us new password you want use next time.\"\r\n            />\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <ResetPasswordForm />\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import * as React from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport { Link } from 'react-router-dom';\r\nimport { RouteNames } from '../../routing';\r\nimport { Tooltip } from '@mui/material';\r\nimport PublicIcon from '@mui/icons-material/Public';\r\nimport RoomPreferencesIcon from '@mui/icons-material/RoomPreferences';\r\nimport BuildIcon from '@mui/icons-material/Build';\r\nimport Groups2Icon from '@mui/icons-material/Groups2';\r\nimport Diversity3Icon from '@mui/icons-material/Diversity3';\r\nimport PeopleOutlineIcon from '@mui/icons-material/PeopleOutline';\r\nimport SupervisedUserCircleIcon from '@mui/icons-material/SupervisedUserCircle';\r\n\r\nexport const mainListItems = (\r\n    <React.Fragment>\r\n        <Tooltip title=\"Dashboard\" placement=\"right\">\r\n            <Link to={RouteNames.DASHBOARD} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <DashboardIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Dashboard\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Manage Countries\" placement=\"right\">\r\n            <Link to={RouteNames.ADMIN_COUNTRIES} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <PublicIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Countries\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Office Management\" placement=\"right\">\r\n            <Link to={RouteNames.ADMIN_OFFICES} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <RoomPreferencesIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Offices\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Services\" placement=\"right\">\r\n            <Link to={RouteNames.ADMIN_SERVICES} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <BuildIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Services\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Employees\" placement=\"right\">\r\n            <Link to={RouteNames.ADMIN_TEAM} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <Groups2Icon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Team\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Vacancies\" placement=\"right\">\r\n            <Link to={RouteNames.ADMIN_VACANCIES} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <Diversity3Icon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Vacancies\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Candidates\" placement=\"right\">\r\n            <Link to={RouteNames.ADMIN_CANDIDATES} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <PeopleOutlineIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Candidates\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Users\" placement=\"right\">\r\n            <Link to={RouteNames.USERS} className='dashboard-menu-link'>\r\n                <ListItemButton>\r\n                    <ListItemIcon>\r\n                        <SupervisedUserCircleIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Users\" />\r\n                </ListItemButton>\r\n            </Link>\r\n        </Tooltip>\r\n    </React.Fragment >\r\n);\r\n\r\nexport const secondaryListItems = (\r\n    <React.Fragment>\r\n        <ListSubheader component=\"div\" inset>\r\n            Saved reports\r\n        </ListSubheader>\r\n        <ListItemButton>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n        </ListItemButton>\r\n        <ListItemButton>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItemButton>\r\n        <ListItemButton>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItemButton>\r\n    </React.Fragment>\r\n);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { mainListItems, secondaryListItems } from './DashboardLeftMenuItems';\r\nimport { LayoutProps } from './types';\r\nimport { RouteNames } from '../../routing';\r\nimport AppAvatar from '../AppAvatar/AppAvatar';\r\n\r\nfunction Copyright(props: any) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ paddingTop: '12px' }}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" to={RouteNames.HOME}>\r\n                Shuffle\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst drawerWidth: number = 240;\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n        '& .MuiDrawer-paper': {\r\n            position: 'relative',\r\n            whiteSpace: 'nowrap',\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            boxSizing: 'border-box',\r\n            ...(!open && {\r\n                overflowX: 'hidden',\r\n                transition: theme.transitions.create('width', {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n                width: theme.spacing(7),\r\n                [theme.breakpoints.up('sm')]: {\r\n                    width: theme.spacing(9),\r\n                },\r\n            }),\r\n        },\r\n    }),\r\n);\r\n\r\nconst mdTheme = createTheme();\r\n\r\nexport default function DemoAppBar({ children, title }: LayoutProps): JSX.Element {\r\n    document.title = title || 'Admin - Demo';\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const toggleDrawer = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n            <Box sx={{ display: 'flex', minHeight: '100%' }}>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" open={open} sx={{ backgroundColor: 'rgb(21, 143, 124)' }}>\r\n                    <Toolbar\r\n                        sx={{\r\n                            pr: '24px', // keep right padding when drawer closed\r\n                        }}\r\n                    >\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={toggleDrawer}\r\n                            sx={{\r\n                                marginRight: '36px',\r\n                                ...(open && { display: 'none' }),\r\n                            }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h6\"\r\n                            color=\"inherit\"\r\n                            noWrap\r\n                            fontWeight={500}\r\n                            sx={{ flexGrow: 1 }}\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        <IconButton color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        &nbsp;\r\n                        <AppAvatar />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer variant=\"permanent\" open={open}>\r\n                    <Toolbar\r\n                        sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'flex-end',\r\n                            px: [1],\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"h6\" component=\"a\" href=\"https://volodymyr759.github.io/core-web-client\" sx={{\r\n                            mr: 2,\r\n                            display: { xs: 'none', md: 'flex' },\r\n                            fontSize: '28px',\r\n                            lineHeight: '1',\r\n                            fontFamily: 'Poppins, sans-serif',\r\n                            fontWeight: 600,\r\n                            color: '#4b605c',\r\n                            textDecoration: 'none',\r\n                        }}\r\n                        >\r\n                            Shuffle\r\n                        </Typography>\r\n                        <IconButton onClick={toggleDrawer}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                    <Divider />\r\n                    <List component=\"nav\">\r\n                        {mainListItems}\r\n                        <Divider sx={{ my: 1 }} />\r\n                        {secondaryListItems}\r\n                    </List>\r\n                </Drawer>\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{\r\n                        backgroundColor: (theme) =>\r\n                            theme.palette.mode === 'light'\r\n                                ? theme.palette.grey[100]\r\n                                : theme.palette.grey[900],\r\n                        flexGrow: 1,\r\n                        height: '100vh',\r\n                        overflow: 'auto'\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <Container maxWidth=\"lg\" sx={{ mt: 1, mb: 1, pt: 1, pb: 1, minHeight: 'calc(100vh - 110px)', marginBottom: '0' }}>\r\n                        {children}\r\n                    </Container>\r\n                    <footer>\r\n                        <Copyright sx={{ pt: 4 }} />\r\n                    </footer>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div>Dashboard</div>\r\n  )\r\n}\r\n","import { Routes, Route } from 'react-router-dom';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport AboutPage from '../pages/About/AboutPage';\r\nimport { Roles } from '../types/auth';\r\nimport { RouteNames } from '../routing';\r\nimport AdminCandidatePage from '../pages/Admin/AdminCandidate/AdminCandidatePage';\r\nimport AdminCountryPage from '../pages/Admin/AdminCountry/AdminCountryPage';\r\nimport AdminServicePage from '../pages/Admin/AdminService/AdminServicePage';\r\nimport AdminOfficePage from '../pages/Admin/AdminOffice/AdminOfficePage';\r\nimport AdminTeamPage from '../pages/Admin/AdminTeam/AdminTeamPage';\r\nimport AdminVacancyPage from '../pages/Admin/AdminVacancy/AdminVacancyPage';\r\nimport ServicesPage from '../pages/CompanyServices/ServicesPage';\r\nimport ContactPage from '../pages/Contact/ContactPage';\r\nimport ErrorPage from '../pages/Error/ErrorPage';\r\nimport HomePage from '../pages/Home/HomePage';\r\nimport LoginPage from '../pages/Account/Login/LoginPage';\r\nimport RegisterCompletePage from '../pages/Account/RegisterComplete/RegisterCompletePage';\r\nimport RegisterPage from '../pages/Account/Register/RegisterPage';\r\nimport TeamPage from '../pages/Team/TeamPage';\r\nimport UsersPage from '../pages/Admin/AdminUser/AdminUsersPage';\r\nimport VacanciesPage from '../pages/Vacancies/VacanciesPage';\r\nimport VacancyDetailes from '../pages/Vacancies/VacancyDetails';\r\nimport PublicLayout from './Layouts/PublicLayout';\r\nimport EmailConfirmPage from '../pages/Account/EmailConfirm/EmailConfirmPage';\r\nimport ProfilePage from '../pages/Account/Profile/ProfilePage';\r\nimport ChangeEmailPage from '../pages/Account/ChangeEmail/ChangeEmailPage';\r\nimport ChangePasswordPage from '../pages/Account/ChangePassword/ChangePasswordPage';\r\nimport TestUI from '../pages/Test/TestUI';\r\nimport FavoriteVacanciesPage from '../pages/Vacancies/FavoriteVacanciesPage';\r\nimport ForgotPasswordPage from '../pages/Account/ForgotPassword/ForgotPasswordPage';\r\nimport ResetPasswordPage from '../pages/Account/ResetPassword/ResetPasswordPage';\r\nimport DemoLayout from './Layouts/DemoLayout';\r\nimport Dashboard from '../pages/Admin/Dashboard/Dashboard';\r\n\r\nexport default function AppRouter() {\r\n    const { auth } = useTypedSelector(state => state.auth);\r\n\r\n    const publicPages: JSX.Element[] = [\r\n        { path: RouteNames.ABOUT, title: \"About Us\", component: <AboutPage /> },\r\n        { path: RouteNames.CONTACT, title: \"Contact\", component: <ContactPage /> },\r\n        { path: RouteNames.EMAIL_CONFIRM, title: \"Email confirmation page\", component: <EmailConfirmPage /> },\r\n        { path: RouteNames.FORGOT_PASSWORD, title: \"Forgot Password\", component: <ForgotPasswordPage /> },\r\n        { path: RouteNames.HOME, title: \"Shuffle Solutions\", component: <HomePage /> },\r\n        { path: RouteNames.SERVICES, title: \"Services\", component: <ServicesPage /> },\r\n        { path: RouteNames.TEAM, title: \"Team\", component: <TeamPage /> },\r\n        { path: RouteNames.TEST_UI, title: \"UI Tests\", component: <TestUI /> },\r\n        { path: RouteNames.VACANCY, title: \"Vacancies\", component: <VacanciesPage /> },\r\n        { path: RouteNames.LOGIN, title: \"Sign In\", component: <LoginPage /> },\r\n        { path: RouteNames.REGISTER, title: \"Sign Up\", component: <RegisterPage /> },\r\n        { path: RouteNames.REGISTER_COMPLETE, title: \"Registration Complete\", component: <RegisterCompletePage /> },\r\n        { path: RouteNames.RESET_PASSWORD, title: \"Reset Your Password\", component: <ResetPasswordPage /> },\r\n        { path: \"*\", title: \"Error: wrong route!\", component: <ErrorPage status='403' message='Access denied, try login to continue.' /> }\r\n    ].map((route) => {\r\n        return (\r\n            <Route key={route.path} path={route.path} element={\r\n                <PublicLayout title={route.title}>{route.component}</PublicLayout>\r\n            } />\r\n        )\r\n    });\r\n\r\n    const registeredRolePages: JSX.Element[] = [\r\n        { path: RouteNames.CHANGE_EMAIL, title: \"Change email\", component: <ChangeEmailPage /> },\r\n        { path: RouteNames.CHANGE_PASSWORD, title: \"Change password\", component: <ChangePasswordPage /> },\r\n        { path: RouteNames.FAVORITE_VACANCIES, title: \"Favorite Vacancies\", component: <FavoriteVacanciesPage /> },\r\n        { path: RouteNames.PROFILE, title: \"Profile\", component: <ProfilePage /> },\r\n        { path: RouteNames.VACANCY_DETAILES, title: \"Vacancy Detailes\", component: <VacancyDetailes /> }\r\n    ].map((route) => {\r\n        return (\r\n            <Route key={route.path} path={route.path} element={\r\n                <PublicLayout title={route.title}>{route.component}</PublicLayout>\r\n            } />\r\n        )\r\n    });\r\n\r\n    const adminRolePages: JSX.Element[] = [\r\n        { path: RouteNames.ADMIN_CANDIDATES, title: \"Candidates\", component: <AdminCandidatePage /> },\r\n        { path: RouteNames.ADMIN_COUNTRIES, title: \"Countries\", component: <AdminCountryPage /> },\r\n        { path: RouteNames.ADMIN_OFFICES, title: \"Offices\", component: <AdminOfficePage /> },\r\n        { path: RouteNames.ADMIN_SERVICES, title: \"Services\", component: <AdminServicePage /> },\r\n        { path: RouteNames.ADMIN_TEAM, title: \"Team\", component: <AdminTeamPage /> },\r\n        { path: RouteNames.ADMIN_VACANCIES, title: \"Vacancies\", component: <AdminVacancyPage /> },\r\n        { path: RouteNames.USERS, title: \"Users\", component: <UsersPage /> },\r\n        { path: RouteNames.DASHBOARD, title: \"Dashboard\", component: <Dashboard /> }\r\n    ].map((route) => {\r\n        return (\r\n            <Route key={route.path} path={route.path} element={\r\n                <DemoLayout title={route.title}>{route.component}</DemoLayout>\r\n            } />\r\n        )\r\n    });\r\n\r\n    return (\r\n        auth === null ?\r\n            <Routes>{publicPages}</Routes >\r\n            :\r\n            auth.roles.includes(Roles.ADMIN) || auth.roles.includes(Roles.DEMO) ?\r\n                <Routes>{publicPages.concat(registeredRolePages).concat(adminRolePages)}</Routes>\r\n                :\r\n                <Routes>{publicPages.concat(registeredRolePages)}</Routes>\r\n    )\r\n}","// import { BrowserRouter } from 'react-router-dom'; For Github pages replaced BrowserRouter to HashRouter\nimport { HashRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\n\nexport default function App() {\n    return (\n        <HashRouter>\n            <AppRouter />\n        </HashRouter>\n    );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthAction, AuthActionTypes, AuthState } from \"../../types/auth\";\r\n\r\nconst initialState: AuthState = {\r\n    auth: JSON.parse(localStorage.getItem(\"auth\")),\r\n    loading: false,\r\n    error: null,\r\n}\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction) => {\r\n    switch (action.type) {\r\n        case AuthActionTypes.LOGIN:\r\n            return { ...state, auth: action.payload };\r\n        case AuthActionTypes.LOGOUT:\r\n            return { ...state, auth: null };\r\n        case AuthActionTypes.SET_AUTH_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case AuthActionTypes.SET_AUTH_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        default: return state;\r\n    }\r\n}","import { OrderType } from \"../../types/common/orderType\";\r\nimport { CandidateAction, CandidateActionTypes, CandidateState, ICandidate, CandidateStatus } from \"../../types/candidate\";\r\n\r\nconst initialState: CandidateState = {\r\n    candidateSearchResult: {\r\n        itemList: [],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Ascending,\r\n        pageCount: 0,\r\n        pageSize: 5,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    filters: {\r\n        active: CandidateStatus.All,\r\n        vacancyId: null,\r\n        searchInFullName: \"\"\r\n    },\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nexport const candidateReducer = (state: CandidateState = initialState, action: CandidateAction): CandidateState => {\r\n    switch (action.type) {\r\n        case CandidateActionTypes.GET_CANDIDATES:\r\n            return { ...state, candidateSearchResult: action.payload };\r\n        case CandidateActionTypes.SET_CANDIDATE_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case CandidateActionTypes.SET_CANDIDATE_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case CandidateActionTypes.SET_CANDIDATE_PAGE:\r\n            return { ...state, candidateSearchResult: { ...state.candidateSearchResult, currentPageNumber: action.payload } };\r\n        case CandidateActionTypes.SET_CANDIDATE_ACTIVE_FILTER:\r\n            return { ...state, filters: { ...state.filters, active: action.payload } };\r\n        case CandidateActionTypes.SET_CANDIDATE_VACANCY_FILTER:\r\n            return { ...state, filters: { ...state.filters, vacancyId: action.payload } };\r\n        case CandidateActionTypes.SET_CANDIDATE_SEARCH_CRITERIA:\r\n            return { ...state, filters: { ...state.filters, searchInFullName: action.payload } };\r\n        case CandidateActionTypes.UPDATE_CANDIDATE_ISDISMISSED_STATUS:\r\n            return { ...state, candidateSearchResult: { ...state.candidateSearchResult, itemList: updateCandidate(state, action.payload) } }\r\n        case CandidateActionTypes.CREATE_CANDIDATE:\r\n            return { ...state, candidateSearchResult: { ...state.candidateSearchResult, itemList: [action.payload, ...state.candidateSearchResult.itemList] } }\r\n        case CandidateActionTypes.UPDATE_CANDIDATE:\r\n            return { ...state, candidateSearchResult: { ...state.candidateSearchResult, itemList: updateCandidate(state, action.payload) } }\r\n        case CandidateActionTypes.REMOVE_CANDIDATE:\r\n            return { ...state, candidateSearchResult: { ...state.candidateSearchResult, itemList: deleteCandidate(state, action) } };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateCandidate(state: CandidateState, candidateToUpdate: ICandidate): Array<ICandidate> {\r\n    return state.candidateSearchResult.itemList.map((candidate: ICandidate) => {\r\n        if (candidate.id === candidateToUpdate.id) return candidateToUpdate;\r\n        return candidate;\r\n    })\r\n}\r\n\r\nfunction deleteCandidate(state: CandidateState, action: CandidateAction): Array<ICandidate> {\r\n    return state.candidateSearchResult.itemList.filter(candidate => candidate.id !== action.payload)\r\n}","import { OrderType } from \"../../types/common/orderType\";\r\nimport { CountryAction, CountryActionTypes, CountryState, ICountry } from \"../../types/country\";\r\n\r\nconst initialState: CountryState = {\r\n    countrySearchResult: {\r\n        itemList: [] as ICountry[],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Descending,\r\n        pageCount: 0,\r\n        pageSize: 10,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nexport const countryReducer = (state: CountryState = initialState, action: CountryAction): CountryState => {\r\n    switch (action.type) {\r\n        case CountryActionTypes.GET_COUNTRIES:\r\n            return { ...state, countrySearchResult: action.payload };\r\n        case CountryActionTypes.SET_COUNTRY_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case CountryActionTypes.SET_COUNTRY_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case CountryActionTypes.SET_COUNTRY_PAGE:\r\n            return { ...state, countrySearchResult: { ...state.countrySearchResult, currentPageNumber: action.payload } };\r\n        case CountryActionTypes.CREATE_COUNTRY:\r\n            return { ...state, countrySearchResult: { ...state.countrySearchResult, itemList: [action.payload, ...state.countrySearchResult.itemList] } };\r\n        case CountryActionTypes.UPDATE_COUNTRY:\r\n            return { ...state, countrySearchResult: { ...state.countrySearchResult, itemList: updateCountry(state, action.payload) } };\r\n        case CountryActionTypes.REMOVE_COUNTRY:\r\n            return { ...state, countrySearchResult: { ...state.countrySearchResult, itemList: deleteCountry(state, action) } };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateCountry(state: CountryState, countryToUpdate: ICountry): Array<ICountry> {\r\n    return state.countrySearchResult.itemList.map((country: ICountry) => {\r\n        if (country.id === countryToUpdate.id) return countryToUpdate;\r\n        return country;\r\n    })\r\n}\r\n\r\nfunction deleteCountry(state: CountryState, action: CountryAction): Array<ICountry> {\r\n    return state.countrySearchResult.itemList.filter(country => country.id !== action.payload)\r\n}\r\n","import { EmployeeAction, EmployeeActionTypes, EmployeeState, IEmployee } from \"../../types/employee\";\r\nimport { OrderType } from \"../../types/common/orderType\";\r\n\r\nconst initialState: EmployeeState = {\r\n    employeeSearchResult: {\r\n        itemList: [] as IEmployee[],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Ascending,\r\n        pageCount: 0,\r\n        pageSize: 3,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    offices: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const employeeReducer = (state: EmployeeState = initialState, action: EmployeeAction): EmployeeState => {\r\n    switch (action.type) {\r\n        case EmployeeActionTypes.GET_EMPLOYEES:\r\n            return { ...state, employeeSearchResult: action.payload };\r\n        case EmployeeActionTypes.LOAD_MORE_EMPLOYEES:\r\n            return {\r\n                ...state,\r\n                employeeSearchResult: {\r\n                    ...action.payload,\r\n                    itemList: state.employeeSearchResult.itemList.concat(action.payload.itemList)\r\n                },\r\n            };\r\n        case EmployeeActionTypes.SET_EMPLOYEE_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case EmployeeActionTypes.SET_EMPLOYEE_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case EmployeeActionTypes.SET_EMPLOYEE_PAGE:\r\n            return {\r\n                ...state,\r\n                employeeSearchResult: { ...state.employeeSearchResult, currentPageNumber: action.payload }\r\n            };\r\n        case EmployeeActionTypes.CREATE_EMPLOYEE:\r\n            return {\r\n                ...state, employeeSearchResult: {\r\n                    ...state.employeeSearchResult, itemList: [action.payload, ...state.employeeSearchResult.itemList]\r\n                }\r\n            };\r\n        case EmployeeActionTypes.UPDATE_EMPLOYEE:\r\n            return { ...state, employeeSearchResult: { ...state.employeeSearchResult, itemList: updateEmployee(state, action.payload) } };\r\n        case EmployeeActionTypes.REMOVE_EMPLOYEE:\r\n            return { ...state, employeeSearchResult: { ...state.employeeSearchResult, itemList: deleteEmployee(state, action) } };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateEmployee(state: EmployeeState, employeeToUpdate: IEmployee): Array<IEmployee> {\r\n    return state.employeeSearchResult.itemList.map((employee: IEmployee) => {\r\n        if (employee.id === employeeToUpdate.id) return employeeToUpdate;\r\n        return employee;\r\n    })\r\n}\r\n\r\nfunction deleteEmployee(state: EmployeeState, action: EmployeeAction): Array<IEmployee> {\r\n    return state.employeeSearchResult.itemList.filter(employee => employee.id !== action.payload)\r\n}","import { OrderType } from \"../../types/common/orderType\";\r\nimport { FavoriteVacancyAction, FavoriteVacancyActionTypes, FavoriteVacancyState } from \"../../types/favoriteVacancy\";\r\nimport { IVacancy } from \"../../types/vacancy\";\r\n\r\nconst initialState: FavoriteVacancyState = {\r\n    favoriteVacancySearchResult: {\r\n        itemList: [] as IVacancy[],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Ascending,\r\n        pageCount: 0,\r\n        pageSize: 6,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nexport const favoriteVacancyReducer = (state: FavoriteVacancyState = initialState, action: FavoriteVacancyAction): FavoriteVacancyState => {\r\n    switch (action.type) {\r\n        case FavoriteVacancyActionTypes.GET_FAVORITE_VACANCIES:\r\n            return { ...state, favoriteVacancySearchResult: action.payload };\r\n        case FavoriteVacancyActionTypes.LOAD_MORE_FAVORITE_VACANCIES:\r\n            return {\r\n                ...state,\r\n                favoriteVacancySearchResult: {\r\n                    ...action.payload,\r\n                    itemList: state.favoriteVacancySearchResult.itemList.concat(action.payload.itemList)\r\n                },\r\n            };\r\n        case FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case FavoriteVacancyActionTypes.SET_FAVORITE_VACANCY_PAGE:\r\n            return {\r\n                ...state,\r\n                favoriteVacancySearchResult: { ...state.favoriteVacancySearchResult, currentPageNumber: action.payload }\r\n            };\r\n        case FavoriteVacancyActionTypes.UPDATE_FAVORITE_VACANCY_STATUS:\r\n            return {\r\n                ...state, favoriteVacancySearchResult: {\r\n                    ...state.favoriteVacancySearchResult, itemList: updateVacancy(state, action.payload)\r\n                }\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateVacancy(state: FavoriteVacancyState, candidateId: number): Array<IVacancy> {\r\n    return state.favoriteVacancySearchResult.itemList.map((vacancy: IVacancy) => {\r\n        if (vacancy.candidates?.filter(c => c.id === candidateId).length > 0) vacancy.candidates?.filter(c => c.id !== candidateId);\r\n        return vacancy;\r\n    })\r\n}","import { OrderType } from \"../../types/common/orderType\";\r\nimport { OfficeAction, OfficeActionTypes, OfficeState, IOffice } from \"../../types/office\";\r\n\r\nconst initialState: OfficeState = {\r\n    officeSearchResult: {\r\n        itemList: [] as IOffice[],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Descending,\r\n        pageCount: 0,\r\n        pageSize: 10,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nexport const officeReducer = (state: OfficeState = initialState, action: OfficeAction): OfficeState => {\r\n    switch (action.type) {\r\n        case OfficeActionTypes.GET_OFFICES:\r\n            return { ...state, officeSearchResult: action.payload };\r\n        case OfficeActionTypes.SET_OFFICE_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case OfficeActionTypes.SET_OFFICE_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case OfficeActionTypes.SET_OFFICE_PAGE:\r\n            return { ...state, officeSearchResult: { ...state.officeSearchResult, currentPageNumber: action.payload } };\r\n        case OfficeActionTypes.CREATE_OFFICE:\r\n            return { ...state, officeSearchResult: { ...state.officeSearchResult, itemList: [action.payload, ...state.officeSearchResult.itemList] } };\r\n        case OfficeActionTypes.UPDATE_OFFICE:\r\n            return { ...state, officeSearchResult: { ...state.officeSearchResult, itemList: updateOffice(state, action.payload) } };\r\n        case OfficeActionTypes.REMOVE_OFFICE:\r\n            return { ...state, officeSearchResult: { ...state.officeSearchResult, itemList: deleteOffice(state, action) } };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateOffice(state: OfficeState, officeToUpdate: IOffice): Array<IOffice> {\r\n    return state.officeSearchResult.itemList.map((office: IOffice) => {\r\n        if (office.id === officeToUpdate.id) return officeToUpdate;\r\n        return office;\r\n    })\r\n}\r\n\r\nfunction deleteOffice(state: OfficeState, action: OfficeAction): Array<IOffice> {\r\n    return state.officeSearchResult.itemList.filter(office => office.id !== action.payload)\r\n}\r\n","import { OrderType } from \"../../types/common/orderType\";\r\nimport { CompanyServiceAction, CompanyServiceActionTypes, CompanyServiceState, CompanyServiceStatus, ICompanyService } from \"../../types/companyService\";\r\n\r\nconst initialState: CompanyServiceState = {\r\n    serviceSearchResult: {\r\n        itemList: [] as ICompanyService[],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Descending,\r\n        pageCount: 0,\r\n        pageSize: 3,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    filters: {\r\n        active: CompanyServiceStatus.All,\r\n    },\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nexport const serviceReducer = (state: CompanyServiceState = initialState, action: CompanyServiceAction): CompanyServiceState => {\r\n    switch (action.type) {\r\n        case CompanyServiceActionTypes.GET_COMPANY_SERVICES:\r\n            return { ...state, serviceSearchResult: action.payload };\r\n        case CompanyServiceActionTypes.LOAD_MORE_COMPANY_SERVICES:\r\n            return { ...state, serviceSearchResult: { ...action.payload, itemList: state.serviceSearchResult.itemList.concat(action.payload.itemList) }, };\r\n        case CompanyServiceActionTypes.SET_COMPANY_SERVICE_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case CompanyServiceActionTypes.SET_COMPANY_SERVICE_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case CompanyServiceActionTypes.SET_COMPANY_SERVICE_PAGE:\r\n            return { ...state, serviceSearchResult: { ...state.serviceSearchResult, currentPageNumber: action.payload } };\r\n        case CompanyServiceActionTypes.SET_COMPANY_SERVICE_ACTIVE_FILTER:\r\n            return { ...state, filters: { ...state.filters, active: action.payload } };\r\n        case CompanyServiceActionTypes.UPDATE_COMPANY_SERVICE_ISACTIVE_STATUS:\r\n            return { ...state, serviceSearchResult: { ...state.serviceSearchResult, itemList: updateService(state, action.payload) } }\r\n        case CompanyServiceActionTypes.CREATE_COMPANY_SERVICE:\r\n            return { ...state, serviceSearchResult: { ...state.serviceSearchResult, itemList: [action.payload, ...state.serviceSearchResult.itemList] } };\r\n        case CompanyServiceActionTypes.UPDATE_COMPANY_SERVICE:\r\n            return { ...state, serviceSearchResult: { ...state.serviceSearchResult, itemList: updateService(state, action.payload) } };\r\n        case CompanyServiceActionTypes.REMOVE_COMPANY_SERVICE:\r\n            return { ...state, serviceSearchResult: { ...state.serviceSearchResult, itemList: deleteService(state, action) } };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateService(state: CompanyServiceState, serviceToUpdate: ICompanyService): Array<ICompanyService> {\r\n    return state.serviceSearchResult.itemList.map((service: ICompanyService) => {\r\n        if (service.id === serviceToUpdate.id) return serviceToUpdate;\r\n        return service;\r\n    })\r\n}\r\n\r\nfunction deleteService(state: CompanyServiceState, action: CompanyServiceAction): Array<ICompanyService> {\r\n    return state.serviceSearchResult.itemList.filter(service => service.id !== action.payload)\r\n}\r\n","import { OrderType } from \"../../types/common/orderType\";\r\nimport { IUser, UserAction, UserActionTypes, UserState } from \"../../types/user\";\r\n\r\nconst initialState: UserState = {\r\n    userSearchResult: {\r\n        itemList: [],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Ascending,\r\n        pageCount: 0,\r\n        pageSize: 5,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    filters: {\r\n        searchInUserName: \"\"\r\n    },\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const userReducer = (state: UserState = initialState, action: UserAction): UserState => {\r\n    switch (action.type) {\r\n        case UserActionTypes.GET_USERS:\r\n            return { ...state, userSearchResult: action.payload };\r\n        case UserActionTypes.UPDATE_USER_EMAILCONFIRMED_STATUS:\r\n            return { ...state, userSearchResult: { ...state.userSearchResult, itemList: updateUser(state, action.payload) } }\r\n        case UserActionTypes.SET_USER_SEARCH_CRITERIA:\r\n            return { ...state, filters: { ...state.filters, searchInUserName: action.payload } };\r\n        case UserActionTypes.SET_USER_PAGE:\r\n            return { ...state, userSearchResult: { ...state.userSearchResult, currentPageNumber: action.payload } };\r\n        case UserActionTypes.SET_USER_ERROR:\r\n            return { ...state, error: action.payload };\r\n        case UserActionTypes.SET_USER_LOADING:\r\n            return { ...state, loading: action.payload };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateUser(state: UserState, userToUpdate: IUser): Array<IUser> {\r\n    return state.userSearchResult.itemList.map((user: IUser) => {\r\n        if (user.id === userToUpdate.id) return userToUpdate;\r\n        return user;\r\n    })\r\n}","import { OrderType } from \"../../types/common/orderType\";\r\nimport { VacancyAction, VacancyActionTypes, VacancyState, IVacancy, VacancyStatus } from \"../../types/vacancy\";\r\n\r\nconst initialState: VacancyState = {\r\n    vacancySearchResult: {\r\n        itemList: [] as IVacancy[],\r\n        currentPageNumber: 1,\r\n        order: OrderType.Ascending,\r\n        pageCount: 0,\r\n        pageSize: 6,\r\n        searchCriteria: \"\",\r\n        totalItemCount: 0\r\n    },\r\n    offices: [],\r\n    titles: [],\r\n    filters: {\r\n        active: VacancyStatus.Active,\r\n        officeId: \"\",\r\n        searchInTitle: \"\"\r\n    },\r\n    loadingFilters: true,\r\n    errorFilters: null,\r\n    loadingVacancies: true,\r\n    errorVacancies: null\r\n}\r\n\r\nexport const vacancyReducer = (state: VacancyState = initialState, action: VacancyAction): VacancyState => {\r\n    switch (action.type) {\r\n        case VacancyActionTypes.GET_VACANCIES:\r\n            return { ...state, vacancySearchResult: action.payload };\r\n        case VacancyActionTypes.LOAD_MORE_VACANCIES:\r\n            return {\r\n                ...state,\r\n                vacancySearchResult: {\r\n                    ...action.payload,\r\n                    itemList: state.vacancySearchResult.itemList.concat(action.payload.itemList)\r\n                },\r\n            };\r\n        case VacancyActionTypes.SET_VACANCY_ERROR:\r\n            return { ...state, errorVacancies: action.payload };\r\n        case VacancyActionTypes.SET_VACANCY_LOADING:\r\n            return { ...state, loadingVacancies: action.payload };\r\n        case VacancyActionTypes.SET_FILTERS_ERROR:\r\n            return { ...state, errorFilters: action.payload };\r\n        case VacancyActionTypes.SET_FILTERS_LOADING:\r\n            return { ...state, loadingFilters: action.payload };\r\n        case VacancyActionTypes.SET_VACANCY_PAGE:\r\n            return {\r\n                ...state,\r\n                vacancySearchResult: { ...state.vacancySearchResult, currentPageNumber: action.payload }\r\n            };\r\n        case VacancyActionTypes.SET_VACANCY_ACTIVE_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: { ...state.filters, active: action.payload }\r\n            };\r\n        case VacancyActionTypes.SET_VACANCY_OFFICE_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: { ...state.filters, officeId: action.payload }\r\n            };\r\n        case VacancyActionTypes.SET_VACANCY_SEARCH_CRITERIA:\r\n            return {\r\n                ...state,\r\n                vacancySearchResult: { ...state.vacancySearchResult, searchCriteria: action.payload }\r\n            };\r\n        case VacancyActionTypes.SET_VACANCY_OFFICES:\r\n            let vacancyOffices = action.payload;\r\n            vacancyOffices.unshift({ id: 0, name: \"All\" });\r\n            return { ...state, offices: vacancyOffices };\r\n        case VacancyActionTypes.SET_VACANCIES_TITLES:\r\n            return { ...state, titles: action.payload };\r\n        case VacancyActionTypes.INCREMENT_PREVIEWS:\r\n            return { ...state };\r\n        case VacancyActionTypes.UPDATE_VACANCY_ISACTIVE_STATUS:\r\n            return {\r\n                ...state, vacancySearchResult: {\r\n                    ...state.vacancySearchResult, itemList: updateVacancy(state, action.payload)\r\n                }\r\n            }\r\n        case VacancyActionTypes.CREATE_VACANCY:\r\n            return {\r\n                ...state, vacancySearchResult: {\r\n                    ...state.vacancySearchResult, itemList:\r\n                        [action.payload, ...state.vacancySearchResult.itemList]\r\n                }\r\n            }\r\n        case VacancyActionTypes.UPDATE_VACANCY:\r\n            return {\r\n                ...state, vacancySearchResult: {\r\n                    ...state.vacancySearchResult, itemList: updateVacancy(state, action.payload)\r\n                }\r\n            }\r\n        case VacancyActionTypes.REMOVE_VACANCY:\r\n            return { ...state, vacancySearchResult: { ...state.vacancySearchResult, itemList: deleteVacancy(state, action) } };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction updateVacancy(state: VacancyState, vacancyToUpdate: IVacancy): Array<IVacancy> {\r\n    return state.vacancySearchResult.itemList.map((vacancy: IVacancy) => {\r\n        if (vacancy.id === vacancyToUpdate.id) return vacancyToUpdate;\r\n        return vacancy;\r\n    })\r\n}\r\n\r\nfunction deleteVacancy(state: VacancyState, action: VacancyAction): Array<IVacancy> {\r\n    return state.vacancySearchResult.itemList.filter(vacancy => vacancy.id !== action.payload)\r\n}","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { authReducer } from './reducers/authReducer';\r\nimport { candidateReducer } from './reducers/candidateReducer';\r\nimport { countryReducer } from './reducers/countryReducer';\r\nimport { employeeReducer } from './reducers/employeeReducer';\r\nimport { favoriteVacancyReducer } from './reducers/favoriteVacancyReducer';\r\nimport { officeReducer } from './reducers/officeReducer';\r\nimport { serviceReducer } from './reducers/serviceReducer';\r\nimport { userReducer } from './reducers/userReduser';\r\nimport { vacancyReducer } from './reducers/vacancyReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    candidate: candidateReducer,\r\n    country: countryReducer,\r\n    employee: employeeReducer,\r\n    favoriteVacancy: favoriteVacancyReducer,\r\n    office: officeReducer,\r\n    service: serviceReducer,\r\n    user: userReducer,\r\n    vacancy: vacancyReducer\r\n})\r\n\r\nexport const setupStore = () => {\r\n    return configureStore({\r\n        reducer: rootReducer\r\n    })\r\n}\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","export enum ErrorStatus {\r\n    'BAD REQUEST' = '400',\r\n    'Unauthorized' = 401,\r\n    'Forbidden' = 403,\r\n    'Not Found' = '404',\r\n    'Internal Server Error' = '500'\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios'\r\nimport { ErrorStatus } from '../types/common/error';\r\nimport { refreshTokenAxios } from './auth';\r\n\r\nexport class AxiosMiddleware {\r\n    static boot(): void {\r\n        axios.defaults.baseURL = process.env.REACT_APP_BASE_API_URL_PROD;\r\n\r\n        // Request interceptor for API calls\r\n        axios.interceptors.request.use(\r\n            async config => {\r\n                const authFromLocalStorage = localStorage.getItem(\"auth\");\r\n                if (authFromLocalStorage) {\r\n                    const keys = JSON.parse(authFromLocalStorage);\r\n                    config.headers = {\r\n                        'Authorization': `Bearer ${keys.tokens.accessToken}`,\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n                return config;\r\n            },\r\n            error => {\r\n                Promise.reject(error)\r\n            });\r\n\r\n        // Response interceptor for API calls\r\n        axios.interceptors.response.use(function (response: AxiosResponse): AxiosResponse {\r\n            return response;\r\n        },\r\n            async function (error: AxiosError) {\r\n                if (!error.status) {\r\n                    let errorMessage = \"\";\r\n                    try {\r\n                        if (error.response.status === ErrorStatus.Forbidden) {\r\n                            errorMessage = \"You are not allowed to this action.\";\r\n                            throw new Error();\r\n                        }\r\n                        if (error.response.status === ErrorStatus.Unauthorized) {\r\n                            errorMessage = \"Unable to refresh token, please Sign In.\";\r\n                            // Get existing tokens from localStorage and try to refresh\r\n                            const authFromLocalStorage = JSON.parse(localStorage.getItem(\"auth\"));\r\n                            const authModel = await refreshTokenAxios(authFromLocalStorage.tokens.accessToken, authFromLocalStorage.tokens.refreshToken)\r\n                            localStorage.setItem(\"auth\", JSON.stringify(authModel));\r\n\r\n                            // current response contains all settings needed to retry request\r\n                            axios.defaults.headers.common['Authorization'] = 'Bearer ' + authModel.tokens.accessToken;\r\n                            return axios(error.config);\r\n                        }\r\n                    } catch (error) {\r\n                        throw new Error(errorMessage);\r\n                    } finally {\r\n                        errorMessage = \"\";\r\n                    }\r\n                }\r\n                switch (error.status) {\r\n                    case ErrorStatus['Bad Request']:\r\n                        if (error.response) {\r\n                            if (error.response.data) {\r\n                                throw new Error(error.response.data['title']);\r\n                            }\r\n                            throw new Error('Network unavailable or server is not running.');\r\n                        }\r\n                        throw new Error(\"Bad Request Error\");\r\n                    case ErrorStatus.Forbidden.toString():\r\n                        return;\r\n                    case ErrorStatus['Not Found']:\r\n                        throw new Error(error.response.data['title'] || 'Not Found Error');\r\n                    default:\r\n                        throw new Error('Internal server error.');\r\n                }\r\n            });\r\n    }\r\n}\r\n","import ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { setupStore } from \"./store\";\nimport { AxiosMiddleware } from './api/middleware';\n\nconst store = setupStore();\n\nAxiosMiddleware.boot();\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}